state	receive		action		state/(nontermainalID,subID):
72	!		1	shift-expression	0
72	!=		1	shift-expression	0
72	%		1	shift-expression	0
72	%=		1	shift-expression	0
72	&		1	shift-expression	0
72	&&		1	shift-expression	0
72	&=		1	shift-expression	0
72	(		1	shift-expression	0
72	)		1	shift-expression	0
72	*		1	shift-expression	0
72	*=		1	shift-expression	0
72	+		0	145
72	++		1	shift-expression	0
72	+=		1	shift-expression	0
72	,		1	shift-expression	0
72	-		0	146
72	--		1	shift-expression	0
72	-=		1	shift-expression	0
72	->		1	shift-expression	0
72	/		1	shift-expression	0
72	/=		1	shift-expression	0
72	:		1	shift-expression	0
72	;		1	shift-expression	0
72	<		1	shift-expression	0
72	<<		1	shift-expression	0
72	<<=		1	shift-expression	0
72	<=		1	shift-expression	0
72	=		1	shift-expression	0
72	==		1	shift-expression	0
72	>		1	shift-expression	0
72	>=		1	shift-expression	0
72	>>		1	shift-expression	0
72	>>=		1	shift-expression	0
72	?		1	shift-expression	0
72	[		1	shift-expression	0
72	]		1	shift-expression	0
72	^		1	shift-expression	0
72	^=		1	shift-expression	0
72	_KULV_END_		1	shift-expression	0
72	auto		1	shift-expression	0
72	break		1	shift-expression	0
72	case		1	shift-expression	0
72	char		1	shift-expression	0
72	character-constant		1	shift-expression	0
72	const		1	shift-expression	0
72	continue		1	shift-expression	0
72	default		1	shift-expression	0
72	do		1	shift-expression	0
72	double		1	shift-expression	0
72	else		1	shift-expression	0
72	enumeration-constant		1	shift-expression	0
72	extern		1	shift-expression	0
72	float		1	shift-expression	0
72	floating-constant		1	shift-expression	0
72	for		1	shift-expression	0
72	goto		1	shift-expression	0
72	identifier		1	shift-expression	0
72	if		1	shift-expression	0
72	int		1	shift-expression	0
72	integer-constant		1	shift-expression	0
72	long		1	shift-expression	0
72	register		1	shift-expression	0
72	return		1	shift-expression	0
72	short		1	shift-expression	0
72	signed		1	shift-expression	0
72	sizeof		1	shift-expression	0
72	static		1	shift-expression	0
72	string-constant		1	shift-expression	0
72	switch		1	shift-expression	0
72	typedef		1	shift-expression	0
72	unsigned		1	shift-expression	0
72	void		1	shift-expression	0
72	volatile		1	shift-expression	0
72	while		1	shift-expression	0
72	{		1	shift-expression	0
72	|		1	shift-expression	0
72	|=		1	shift-expression	0
72	||		1	shift-expression	0
72	}		1	shift-expression	0
72	~		1	shift-expression	0
200	!		1	unary-expression	3
200	!=		1	unary-expression	3
200	%		1	unary-expression	3
200	%=		1	unary-expression	3
200	&		1	unary-expression	3
200	&&		1	unary-expression	3
200	&=		1	unary-expression	3
200	(		1	unary-expression	3
200	)		1	unary-expression	3
200	*		1	unary-expression	3
200	*=		1	unary-expression	3
200	+		1	unary-expression	3
200	++		1	unary-expression	3
200	+=		1	unary-expression	3
200	,		1	unary-expression	3
200	-		1	unary-expression	3
200	--		1	unary-expression	3
200	-=		1	unary-expression	3
200	->		1	unary-expression	3
200	/		1	unary-expression	3
200	/=		1	unary-expression	3
200	:		1	unary-expression	3
200	;		1	unary-expression	3
200	<		1	unary-expression	3
200	<<		1	unary-expression	3
200	<<=		1	unary-expression	3
200	<=		1	unary-expression	3
200	=		1	unary-expression	3
200	==		1	unary-expression	3
200	>		1	unary-expression	3
200	>=		1	unary-expression	3
200	>>		1	unary-expression	3
200	>>=		1	unary-expression	3
200	?		1	unary-expression	3
200	[		1	unary-expression	3
200	]		1	unary-expression	3
200	^		1	unary-expression	3
200	^=		1	unary-expression	3
200	_KULV_END_		1	unary-expression	3
200	auto		1	unary-expression	3
200	break		1	unary-expression	3
200	case		1	unary-expression	3
200	char		1	unary-expression	3
200	character-constant		1	unary-expression	3
200	const		1	unary-expression	3
200	continue		1	unary-expression	3
200	default		1	unary-expression	3
200	do		1	unary-expression	3
200	double		1	unary-expression	3
200	else		1	unary-expression	3
200	enumeration-constant		1	unary-expression	3
200	extern		1	unary-expression	3
200	float		1	unary-expression	3
200	floating-constant		1	unary-expression	3
200	for		1	unary-expression	3
200	goto		1	unary-expression	3
200	identifier		1	unary-expression	3
200	if		1	unary-expression	3
200	int		1	unary-expression	3
200	integer-constant		1	unary-expression	3
200	long		1	unary-expression	3
200	register		1	unary-expression	3
200	return		1	unary-expression	3
200	short		1	unary-expression	3
200	signed		1	unary-expression	3
200	sizeof		1	unary-expression	3
200	static		1	unary-expression	3
200	string-constant		1	unary-expression	3
200	switch		1	unary-expression	3
200	typedef		1	unary-expression	3
200	unsigned		1	unary-expression	3
200	void		1	unary-expression	3
200	volatile		1	unary-expression	3
200	while		1	unary-expression	3
200	{		1	unary-expression	3
200	|		1	unary-expression	3
200	|=		1	unary-expression	3
200	||		1	unary-expression	3
200	}		1	unary-expression	3
200	~		1	unary-expression	3
328	!		0	62
328	&		0	63
328	(		0	64
328	*		0	65
328	+		0	66
328	++		0	67
328	-		0	68
328	--		0	69
328	;		0	70
328	break		0	74
328	case		0	75
328	character-constant		0	77
328	continue		0	81
328	default		0	83
328	do		0	84
328	enumeration-constant		0	85
328	floating-constant		0	90
328	for		0	91
328	goto		0	92
328	identifier		0	93
328	if		0	94
328	integer-constant		0	96
328	return		0	106
328	sizeof		0	109
328	string-constant		0	112
328	switch		0	113
328	while		0	116
328	{		0	43
328	~		0	118
81	;		0	149
209	identifier		0	269
58	(		0	1
58	*		0	2
58	identifier		0	15
186	!		1	compound-statement	1
186	%=		1	compound-statement	1
186	&		1	compound-statement	1
186	&=		1	compound-statement	1
186	(		1	compound-statement	1
186	)		1	compound-statement	1
186	*		1	compound-statement	1
186	*=		1	compound-statement	1
186	+		1	compound-statement	1
186	++		1	compound-statement	1
186	+=		1	compound-statement	1
186	,		1	compound-statement	1
186	-		1	compound-statement	1
186	--		1	compound-statement	1
186	-=		1	compound-statement	1
186	/=		1	compound-statement	1
186	;		1	compound-statement	1
186	<<=		1	compound-statement	1
186	=		1	compound-statement	1
186	>>=		1	compound-statement	1
186	^=		1	compound-statement	1
186	_KULV_END_		1	compound-statement	1
186	auto		1	compound-statement	1
186	break		1	compound-statement	1
186	case		1	compound-statement	1
186	char		1	compound-statement	1
186	character-constant		1	compound-statement	1
186	const		1	compound-statement	1
186	continue		1	compound-statement	1
186	default		1	compound-statement	1
186	do		1	compound-statement	1
186	double		1	compound-statement	1
186	else		1	compound-statement	1
186	enumeration-constant		1	compound-statement	1
186	extern		1	compound-statement	1
186	float		1	compound-statement	1
186	floating-constant		1	compound-statement	1
186	for		1	compound-statement	1
186	goto		1	compound-statement	1
186	identifier		1	compound-statement	1
186	if		1	compound-statement	1
186	int		1	compound-statement	1
186	integer-constant		1	compound-statement	1
186	long		1	compound-statement	1
186	register		1	compound-statement	1
186	return		1	compound-statement	1
186	short		1	compound-statement	1
186	signed		1	compound-statement	1
186	sizeof		1	compound-statement	1
186	static		1	compound-statement	1
186	string-constant		1	compound-statement	1
186	switch		1	compound-statement	1
186	typedef		1	compound-statement	1
186	unsigned		1	compound-statement	1
186	void		1	compound-statement	1
186	volatile		1	compound-statement	1
186	while		1	compound-statement	1
186	{		1	compound-statement	1
186	|=		1	compound-statement	1
186	}		1	compound-statement	1
186	~		1	compound-statement	1
314	)		0	324
314	,		0	157
3	(		1	storage-class-specifier	0
3	)		1	storage-class-specifier	0
3	*		1	storage-class-specifier	0
3	,		1	storage-class-specifier	0
3	;		1	storage-class-specifier	0
3	[		1	storage-class-specifier	0
3	auto		1	storage-class-specifier	0
3	char		1	storage-class-specifier	0
3	const		1	storage-class-specifier	0
3	double		1	storage-class-specifier	0
3	extern		1	storage-class-specifier	0
3	float		1	storage-class-specifier	0
3	identifier		1	storage-class-specifier	0
3	int		1	storage-class-specifier	0
3	long		1	storage-class-specifier	0
3	register		1	storage-class-specifier	0
3	short		1	storage-class-specifier	0
3	signed		1	storage-class-specifier	0
3	static		1	storage-class-specifier	0
3	typedef		1	storage-class-specifier	0
3	unsigned		1	storage-class-specifier	0
3	void		1	storage-class-specifier	0
3	volatile		1	storage-class-specifier	0
131	(		1	function-definition	3
131	*		1	function-definition	3
131	;		1	function-definition	3
131	_KULV_END_		1	function-definition	3
131	auto		1	function-definition	3
131	char		1	function-definition	3
131	const		1	function-definition	3
131	double		1	function-definition	3
131	extern		1	function-definition	3
131	float		1	function-definition	3
131	identifier		1	function-definition	3
131	int		1	function-definition	3
131	long		1	function-definition	3
131	register		1	function-definition	3
131	short		1	function-definition	3
131	signed		1	function-definition	3
131	static		1	function-definition	3
131	typedef		1	function-definition	3
131	unsigned		1	function-definition	3
131	void		1	function-definition	3
131	volatile		1	function-definition	3
131	{		1	function-definition	3
259	!		1	assignment-expression	1
259	!=		1	assignment-expression	1
259	%		1	assignment-expression	1
259	%=		1	assignment-expression	1
259	&		1	assignment-expression	1
259	&&		1	assignment-expression	1
259	&=		1	assignment-expression	1
259	(		1	assignment-expression	1
259	)		1	assignment-expression	1
259	*		1	assignment-expression	1
259	*=		1	assignment-expression	1
259	+		1	assignment-expression	1
259	++		1	assignment-expression	1
259	+=		1	assignment-expression	1
259	,		1	assignment-expression	1
259	-		1	assignment-expression	1
259	--		1	assignment-expression	1
259	-=		1	assignment-expression	1
259	->		1	assignment-expression	1
259	/		1	assignment-expression	1
259	/=		1	assignment-expression	1
259	:		1	assignment-expression	1
259	;		1	assignment-expression	1
259	<		1	assignment-expression	1
259	<<		1	assignment-expression	1
259	<<=		1	assignment-expression	1
259	<=		1	assignment-expression	1
259	=		1	assignment-expression	1
259	==		1	assignment-expression	1
259	>		1	assignment-expression	1
259	>=		1	assignment-expression	1
259	>>		1	assignment-expression	1
259	>>=		1	assignment-expression	1
259	?		1	assignment-expression	1
259	[		1	assignment-expression	1
259	]		1	assignment-expression	1
259	^		1	assignment-expression	1
259	^=		1	assignment-expression	1
259	_KULV_END_		1	assignment-expression	1
259	auto		1	assignment-expression	1
259	break		1	assignment-expression	1
259	case		1	assignment-expression	1
259	char		1	assignment-expression	1
259	character-constant		1	assignment-expression	1
259	const		1	assignment-expression	1
259	continue		1	assignment-expression	1
259	default		1	assignment-expression	1
259	do		1	assignment-expression	1
259	double		1	assignment-expression	1
259	else		1	assignment-expression	1
259	enumeration-constant		1	assignment-expression	1
259	extern		1	assignment-expression	1
259	float		1	assignment-expression	1
259	floating-constant		1	assignment-expression	1
259	for		1	assignment-expression	1
259	goto		1	assignment-expression	1
259	identifier		1	assignment-expression	1
259	if		1	assignment-expression	1
259	int		1	assignment-expression	1
259	integer-constant		1	assignment-expression	1
259	long		1	assignment-expression	1
259	register		1	assignment-expression	1
259	return		1	assignment-expression	1
259	short		1	assignment-expression	1
259	signed		1	assignment-expression	1
259	sizeof		1	assignment-expression	1
259	static		1	assignment-expression	1
259	string-constant		1	assignment-expression	1
259	switch		1	assignment-expression	1
259	typedef		1	assignment-expression	1
259	unsigned		1	assignment-expression	1
259	void		1	assignment-expression	1
259	volatile		1	assignment-expression	1
259	while		1	assignment-expression	1
259	{		1	assignment-expression	1
259	|		1	assignment-expression	1
259	|=		1	assignment-expression	1
259	||		1	assignment-expression	1
259	}		1	assignment-expression	1
259	~		1	assignment-expression	1
108	!		1	relational-expression	0
108	!=		1	relational-expression	0
108	%		1	relational-expression	0
108	%=		1	relational-expression	0
108	&		1	relational-expression	0
108	&&		1	relational-expression	0
108	&=		1	relational-expression	0
108	(		1	relational-expression	0
108	)		1	relational-expression	0
108	*		1	relational-expression	0
108	*=		1	relational-expression	0
108	+		1	relational-expression	0
108	++		1	relational-expression	0
108	+=		1	relational-expression	0
108	,		1	relational-expression	0
108	-		1	relational-expression	0
108	--		1	relational-expression	0
108	-=		1	relational-expression	0
108	->		1	relational-expression	0
108	/		1	relational-expression	0
108	/=		1	relational-expression	0
108	:		1	relational-expression	0
108	;		1	relational-expression	0
108	<		1	relational-expression	0
108	<<		0	181
108	<<=		1	relational-expression	0
108	<=		1	relational-expression	0
108	=		1	relational-expression	0
108	==		1	relational-expression	0
108	>		1	relational-expression	0
108	>=		1	relational-expression	0
108	>>		0	182
108	>>=		1	relational-expression	0
108	?		1	relational-expression	0
108	[		1	relational-expression	0
108	]		1	relational-expression	0
108	^		1	relational-expression	0
108	^=		1	relational-expression	0
108	_KULV_END_		1	relational-expression	0
108	auto		1	relational-expression	0
108	break		1	relational-expression	0
108	case		1	relational-expression	0
108	char		1	relational-expression	0
108	character-constant		1	relational-expression	0
108	const		1	relational-expression	0
108	continue		1	relational-expression	0
108	default		1	relational-expression	0
108	do		1	relational-expression	0
108	double		1	relational-expression	0
108	else		1	relational-expression	0
108	enumeration-constant		1	relational-expression	0
108	extern		1	relational-expression	0
108	float		1	relational-expression	0
108	floating-constant		1	relational-expression	0
108	for		1	relational-expression	0
108	goto		1	relational-expression	0
108	identifier		1	relational-expression	0
108	if		1	relational-expression	0
108	int		1	relational-expression	0
108	integer-constant		1	relational-expression	0
108	long		1	relational-expression	0
108	register		1	relational-expression	0
108	return		1	relational-expression	0
108	short		1	relational-expression	0
108	signed		1	relational-expression	0
108	sizeof		1	relational-expression	0
108	static		1	relational-expression	0
108	string-constant		1	relational-expression	0
108	switch		1	relational-expression	0
108	typedef		1	relational-expression	0
108	unsigned		1	relational-expression	0
108	void		1	relational-expression	0
108	volatile		1	relational-expression	0
108	while		1	relational-expression	0
108	{		1	relational-expression	0
108	|		1	relational-expression	0
108	|=		1	relational-expression	0
108	||		1	relational-expression	0
108	}		1	relational-expression	0
108	~		1	relational-expression	0
236	!		1	labeled-statement	0
236	%=		1	labeled-statement	0
236	&		1	labeled-statement	0
236	&=		1	labeled-statement	0
236	(		1	labeled-statement	0
236	)		1	labeled-statement	0
236	*		1	labeled-statement	0
236	*=		1	labeled-statement	0
236	+		1	labeled-statement	0
236	++		1	labeled-statement	0
236	+=		1	labeled-statement	0
236	,		1	labeled-statement	0
236	-		1	labeled-statement	0
236	--		1	labeled-statement	0
236	-=		1	labeled-statement	0
236	/=		1	labeled-statement	0
236	;		1	labeled-statement	0
236	<<=		1	labeled-statement	0
236	=		1	labeled-statement	0
236	>>=		1	labeled-statement	0
236	^=		1	labeled-statement	0
236	_KULV_END_		1	labeled-statement	0
236	auto		1	labeled-statement	0
236	break		1	labeled-statement	0
236	case		1	labeled-statement	0
236	char		1	labeled-statement	0
236	character-constant		1	labeled-statement	0
236	const		1	labeled-statement	0
236	continue		1	labeled-statement	0
236	default		1	labeled-statement	0
236	do		1	labeled-statement	0
236	double		1	labeled-statement	0
236	else		1	labeled-statement	0
236	enumeration-constant		1	labeled-statement	0
236	extern		1	labeled-statement	0
236	float		1	labeled-statement	0
236	floating-constant		1	labeled-statement	0
236	for		1	labeled-statement	0
236	goto		1	labeled-statement	0
236	identifier		1	labeled-statement	0
236	if		1	labeled-statement	0
236	int		1	labeled-statement	0
236	integer-constant		1	labeled-statement	0
236	long		1	labeled-statement	0
236	register		1	labeled-statement	0
236	return		1	labeled-statement	0
236	short		1	labeled-statement	0
236	signed		1	labeled-statement	0
236	sizeof		1	labeled-statement	0
236	static		1	labeled-statement	0
236	string-constant		1	labeled-statement	0
236	switch		1	labeled-statement	0
236	typedef		1	labeled-statement	0
236	unsigned		1	labeled-statement	0
236	void		1	labeled-statement	0
236	volatile		1	labeled-statement	0
236	while		1	labeled-statement	0
236	{		1	labeled-statement	0
236	|=		1	labeled-statement	0
236	}		1	labeled-statement	0
236	~		1	labeled-statement	0
117	!		1	compound-statement	0
117	%=		1	compound-statement	0
117	&		1	compound-statement	0
117	&=		1	compound-statement	0
117	(		1	compound-statement	0
117	)		1	compound-statement	0
117	*		1	compound-statement	0
117	*=		1	compound-statement	0
117	+		1	compound-statement	0
117	++		1	compound-statement	0
117	+=		1	compound-statement	0
117	,		1	compound-statement	0
117	-		1	compound-statement	0
117	--		1	compound-statement	0
117	-=		1	compound-statement	0
117	/=		1	compound-statement	0
117	;		1	compound-statement	0
117	<<=		1	compound-statement	0
117	=		1	compound-statement	0
117	>>=		1	compound-statement	0
117	^=		1	compound-statement	0
117	_KULV_END_		1	compound-statement	0
117	auto		1	compound-statement	0
117	break		1	compound-statement	0
117	case		1	compound-statement	0
117	char		1	compound-statement	0
117	character-constant		1	compound-statement	0
117	const		1	compound-statement	0
117	continue		1	compound-statement	0
117	default		1	compound-statement	0
117	do		1	compound-statement	0
117	double		1	compound-statement	0
117	else		1	compound-statement	0
117	enumeration-constant		1	compound-statement	0
117	extern		1	compound-statement	0
117	float		1	compound-statement	0
117	floating-constant		1	compound-statement	0
117	for		1	compound-statement	0
117	goto		1	compound-statement	0
117	identifier		1	compound-statement	0
117	if		1	compound-statement	0
117	int		1	compound-statement	0
117	integer-constant		1	compound-statement	0
117	long		1	compound-statement	0
117	register		1	compound-statement	0
117	return		1	compound-statement	0
117	short		1	compound-statement	0
117	signed		1	compound-statement	0
117	sizeof		1	compound-statement	0
117	static		1	compound-statement	0
117	string-constant		1	compound-statement	0
117	switch		1	compound-statement	0
117	typedef		1	compound-statement	0
117	unsigned		1	compound-statement	0
117	void		1	compound-statement	0
117	volatile		1	compound-statement	0
117	while		1	compound-statement	0
117	{		1	compound-statement	0
117	|=		1	compound-statement	0
117	}		1	compound-statement	0
117	~		1	compound-statement	0
245	)		0	283
245	,		0	282
94	(		0	162
222	!		1	AND-expression	1
222	!=		0	154
222	%		1	AND-expression	1
222	%=		1	AND-expression	1
222	&		1	AND-expression	1
222	&&		1	AND-expression	1
222	&=		1	AND-expression	1
222	(		1	AND-expression	1
222	)		1	AND-expression	1
222	*		1	AND-expression	1
222	*=		1	AND-expression	1
222	+		1	AND-expression	1
222	++		1	AND-expression	1
222	+=		1	AND-expression	1
222	,		1	AND-expression	1
222	-		1	AND-expression	1
222	--		1	AND-expression	1
222	-=		1	AND-expression	1
222	->		1	AND-expression	1
222	/		1	AND-expression	1
222	/=		1	AND-expression	1
222	:		1	AND-expression	1
222	;		1	AND-expression	1
222	<		1	AND-expression	1
222	<<		1	AND-expression	1
222	<<=		1	AND-expression	1
222	<=		1	AND-expression	1
222	=		1	AND-expression	1
222	==		0	155
222	>		1	AND-expression	1
222	>=		1	AND-expression	1
222	>>		1	AND-expression	1
222	>>=		1	AND-expression	1
222	?		1	AND-expression	1
222	[		1	AND-expression	1
222	]		1	AND-expression	1
222	^		1	AND-expression	1
222	^=		1	AND-expression	1
222	_KULV_END_		1	AND-expression	1
222	auto		1	AND-expression	1
222	break		1	AND-expression	1
222	case		1	AND-expression	1
222	char		1	AND-expression	1
222	character-constant		1	AND-expression	1
222	const		1	AND-expression	1
222	continue		1	AND-expression	1
222	default		1	AND-expression	1
222	do		1	AND-expression	1
222	double		1	AND-expression	1
222	else		1	AND-expression	1
222	enumeration-constant		1	AND-expression	1
222	extern		1	AND-expression	1
222	float		1	AND-expression	1
222	floating-constant		1	AND-expression	1
222	for		1	AND-expression	1
222	goto		1	AND-expression	1
222	identifier		1	AND-expression	1
222	if		1	AND-expression	1
222	int		1	AND-expression	1
222	integer-constant		1	AND-expression	1
222	long		1	AND-expression	1
222	register		1	AND-expression	1
222	return		1	AND-expression	1
222	short		1	AND-expression	1
222	signed		1	AND-expression	1
222	sizeof		1	AND-expression	1
222	static		1	AND-expression	1
222	string-constant		1	AND-expression	1
222	switch		1	AND-expression	1
222	typedef		1	AND-expression	1
222	unsigned		1	AND-expression	1
222	void		1	AND-expression	1
222	volatile		1	AND-expression	1
222	while		1	AND-expression	1
222	{		1	AND-expression	1
222	|		1	AND-expression	1
222	|=		1	AND-expression	1
222	||		1	AND-expression	1
222	}		1	AND-expression	1
222	~		1	AND-expression	1
39	!		1	declaration-list	0
39	&		1	declaration-list	0
39	(		1	declaration-list	0
39	*		1	declaration-list	0
39	+		1	declaration-list	0
39	++		1	declaration-list	0
39	-		1	declaration-list	0
39	--		1	declaration-list	0
39	;		1	declaration-list	0
39	auto		1	declaration-list	0
39	break		1	declaration-list	0
39	case		1	declaration-list	0
39	char		1	declaration-list	0
39	character-constant		1	declaration-list	0
39	const		1	declaration-list	0
39	continue		1	declaration-list	0
39	default		1	declaration-list	0
39	do		1	declaration-list	0
39	double		1	declaration-list	0
39	enumeration-constant		1	declaration-list	0
39	extern		1	declaration-list	0
39	float		1	declaration-list	0
39	floating-constant		1	declaration-list	0
39	for		1	declaration-list	0
39	goto		1	declaration-list	0
39	identifier		1	declaration-list	0
39	if		1	declaration-list	0
39	int		1	declaration-list	0
39	integer-constant		1	declaration-list	0
39	long		1	declaration-list	0
39	register		1	declaration-list	0
39	return		1	declaration-list	0
39	short		1	declaration-list	0
39	signed		1	declaration-list	0
39	sizeof		1	declaration-list	0
39	static		1	declaration-list	0
39	string-constant		1	declaration-list	0
39	switch		1	declaration-list	0
39	typedef		1	declaration-list	0
39	unsigned		1	declaration-list	0
39	void		1	declaration-list	0
39	volatile		1	declaration-list	0
39	while		1	declaration-list	0
39	{		1	declaration-list	0
39	}		1	declaration-list	0
39	~		1	declaration-list	0
167	!		0	62
167	&		0	63
167	(		0	64
167	*		0	65
167	+		0	66
167	++		0	67
167	-		0	68
167	--		0	69
167	character-constant		0	77
167	enumeration-constant		0	85
167	floating-constant		0	90
167	identifier		0	129
167	integer-constant		0	96
167	sizeof		0	109
167	string-constant		0	112
167	~		0	118
295	!		1	initializer-list	1
295	%=		1	initializer-list	1
295	&		1	initializer-list	1
295	&=		1	initializer-list	1
295	(		1	initializer-list	1
295	)		1	initializer-list	1
295	*		1	initializer-list	1
295	*=		1	initializer-list	1
295	+		1	initializer-list	1
295	++		1	initializer-list	1
295	+=		1	initializer-list	1
295	,		1	initializer-list	1
295	-		1	initializer-list	1
295	--		1	initializer-list	1
295	-=		1	initializer-list	1
295	/=		1	initializer-list	1
295	;		1	initializer-list	1
295	<<=		1	initializer-list	1
295	=		1	initializer-list	1
295	>>=		1	initializer-list	1
295	^=		1	initializer-list	1
295	_KULV_END_		1	initializer-list	1
295	auto		1	initializer-list	1
295	break		1	initializer-list	1
295	case		1	initializer-list	1
295	char		1	initializer-list	1
295	character-constant		1	initializer-list	1
295	const		1	initializer-list	1
295	continue		1	initializer-list	1
295	default		1	initializer-list	1
295	do		1	initializer-list	1
295	double		1	initializer-list	1
295	else		1	initializer-list	1
295	enumeration-constant		1	initializer-list	1
295	extern		1	initializer-list	1
295	float		1	initializer-list	1
295	floating-constant		1	initializer-list	1
295	for		1	initializer-list	1
295	goto		1	initializer-list	1
295	identifier		1	initializer-list	1
295	if		1	initializer-list	1
295	int		1	initializer-list	1
295	integer-constant		1	initializer-list	1
295	long		1	initializer-list	1
295	register		1	initializer-list	1
295	return		1	initializer-list	1
295	short		1	initializer-list	1
295	signed		1	initializer-list	1
295	sizeof		1	initializer-list	1
295	static		1	initializer-list	1
295	string-constant		1	initializer-list	1
295	switch		1	initializer-list	1
295	typedef		1	initializer-list	1
295	unsigned		1	initializer-list	1
295	void		1	initializer-list	1
295	volatile		1	initializer-list	1
295	while		1	initializer-list	1
295	{		1	initializer-list	1
295	|=		1	initializer-list	1
295	}		1	initializer-list	1
295	~		1	initializer-list	1
48	(		1	translation-unit	1
48	*		1	translation-unit	1
48	_KULV_END_		1	translation-unit	1
48	auto		1	translation-unit	1
48	char		1	translation-unit	1
48	const		1	translation-unit	1
48	double		1	translation-unit	1
48	extern		1	translation-unit	1
48	float		1	translation-unit	1
48	identifier		1	translation-unit	1
48	int		1	translation-unit	1
48	long		1	translation-unit	1
48	register		1	translation-unit	1
48	short		1	translation-unit	1
48	signed		1	translation-unit	1
48	static		1	translation-unit	1
48	typedef		1	translation-unit	1
48	unsigned		1	translation-unit	1
48	void		1	translation-unit	1
48	volatile		1	translation-unit	1
176	!		0	62
176	&		0	63
176	(		0	64
176	*		0	65
176	+		0	66
176	++		0	67
176	-		0	68
176	--		0	69
176	character-constant		0	77
176	enumeration-constant		0	85
176	floating-constant		0	90
176	identifier		0	129
176	integer-constant		0	96
176	sizeof		0	109
176	string-constant		0	112
176	~		0	118
304	!		1	conditional-expression	1
304	!=		1	conditional-expression	1
304	%		1	conditional-expression	1
304	%=		1	conditional-expression	1
304	&		1	conditional-expression	1
304	&&		1	conditional-expression	1
304	&=		1	conditional-expression	1
304	(		1	conditional-expression	1
304	)		1	conditional-expression	1
304	*		1	conditional-expression	1
304	*=		1	conditional-expression	1
304	+		1	conditional-expression	1
304	++		1	conditional-expression	1
304	+=		1	conditional-expression	1
304	,		1	conditional-expression	1
304	-		1	conditional-expression	1
304	--		1	conditional-expression	1
304	-=		1	conditional-expression	1
304	->		1	conditional-expression	1
304	/		1	conditional-expression	1
304	/=		1	conditional-expression	1
304	:		1	conditional-expression	1
304	;		1	conditional-expression	1
304	<		1	conditional-expression	1
304	<<		1	conditional-expression	1
304	<<=		1	conditional-expression	1
304	<=		1	conditional-expression	1
304	=		1	conditional-expression	1
304	==		1	conditional-expression	1
304	>		1	conditional-expression	1
304	>=		1	conditional-expression	1
304	>>		1	conditional-expression	1
304	>>=		1	conditional-expression	1
304	?		1	conditional-expression	1
304	[		1	conditional-expression	1
304	]		1	conditional-expression	1
304	^		1	conditional-expression	1
304	^=		1	conditional-expression	1
304	_KULV_END_		1	conditional-expression	1
304	auto		1	conditional-expression	1
304	break		1	conditional-expression	1
304	case		1	conditional-expression	1
304	char		1	conditional-expression	1
304	character-constant		1	conditional-expression	1
304	const		1	conditional-expression	1
304	continue		1	conditional-expression	1
304	default		1	conditional-expression	1
304	do		1	conditional-expression	1
304	double		1	conditional-expression	1
304	else		1	conditional-expression	1
304	enumeration-constant		1	conditional-expression	1
304	extern		1	conditional-expression	1
304	float		1	conditional-expression	1
304	floating-constant		1	conditional-expression	1
304	for		1	conditional-expression	1
304	goto		1	conditional-expression	1
304	identifier		1	conditional-expression	1
304	if		1	conditional-expression	1
304	int		1	conditional-expression	1
304	integer-constant		1	conditional-expression	1
304	long		1	conditional-expression	1
304	register		1	conditional-expression	1
304	return		1	conditional-expression	1
304	short		1	conditional-expression	1
304	signed		1	conditional-expression	1
304	sizeof		1	conditional-expression	1
304	static		1	conditional-expression	1
304	string-constant		1	conditional-expression	1
304	switch		1	conditional-expression	1
304	typedef		1	conditional-expression	1
304	unsigned		1	conditional-expression	1
304	void		1	conditional-expression	1
304	volatile		1	conditional-expression	1
304	while		1	conditional-expression	1
304	{		1	conditional-expression	1
304	|		1	conditional-expression	1
304	|=		1	conditional-expression	1
304	||		1	conditional-expression	1
304	}		1	conditional-expression	1
304	~		1	conditional-expression	1
25	(		1	declaration-specifiers	4
25	)		1	declaration-specifiers	4
25	*		1	declaration-specifiers	4
25	,		1	declaration-specifiers	4
25	;		1	declaration-specifiers	4
25	[		1	declaration-specifiers	4
25	auto		0	3
25	char		0	4
25	const		0	5
25	double		0	10
25	extern		0	11
25	float		0	13
25	identifier		1	declaration-specifiers	4
25	int		0	16
25	long		0	17
25	register		0	19
25	short		0	20
25	signed		0	21
25	static		0	22
25	typedef		0	27
25	unsigned		0	28
25	void		0	29
25	volatile		0	30
153	while		0	228
281	!		0	62
281	&		0	63
281	(		0	64
281	*		0	65
281	+		0	66
281	++		0	67
281	-		0	68
281	--		0	69
281	character-constant		0	77
281	enumeration-constant		0	85
281	floating-constant		0	90
281	identifier		0	129
281	integer-constant		0	96
281	sizeof		0	109
281	string-constant		0	112
281	~		0	118
98	!		1	statement	5
98	%=		1	statement	5
98	&		1	statement	5
98	&=		1	statement	5
98	(		1	statement	5
98	)		1	statement	5
98	*		1	statement	5
98	*=		1	statement	5
98	+		1	statement	5
98	++		1	statement	5
98	+=		1	statement	5
98	,		1	statement	5
98	-		1	statement	5
98	--		1	statement	5
98	-=		1	statement	5
98	/=		1	statement	5
98	;		1	statement	5
98	<<=		1	statement	5
98	=		1	statement	5
98	>>=		1	statement	5
98	^=		1	statement	5
98	_KULV_END_		1	statement	5
98	auto		1	statement	5
98	break		1	statement	5
98	case		1	statement	5
98	char		1	statement	5
98	character-constant		1	statement	5
98	const		1	statement	5
98	continue		1	statement	5
98	default		1	statement	5
98	do		1	statement	5
98	double		1	statement	5
98	else		1	statement	5
98	enumeration-constant		1	statement	5
98	extern		1	statement	5
98	float		1	statement	5
98	floating-constant		1	statement	5
98	for		1	statement	5
98	goto		1	statement	5
98	identifier		1	statement	5
98	if		1	statement	5
98	int		1	statement	5
98	integer-constant		1	statement	5
98	long		1	statement	5
98	register		1	statement	5
98	return		1	statement	5
98	short		1	statement	5
98	signed		1	statement	5
98	sizeof		1	statement	5
98	static		1	statement	5
98	string-constant		1	statement	5
98	switch		1	statement	5
98	typedef		1	statement	5
98	unsigned		1	statement	5
98	void		1	statement	5
98	volatile		1	statement	5
98	while		1	statement	5
98	{		1	statement	5
98	|=		1	statement	5
98	}		1	statement	5
98	~		1	statement	5
226	!		1	compound-statement	3
226	%=		1	compound-statement	3
226	&		1	compound-statement	3
226	&=		1	compound-statement	3
226	(		1	compound-statement	3
226	)		1	compound-statement	3
226	*		1	compound-statement	3
226	*=		1	compound-statement	3
226	+		1	compound-statement	3
226	++		1	compound-statement	3
226	+=		1	compound-statement	3
226	,		1	compound-statement	3
226	-		1	compound-statement	3
226	--		1	compound-statement	3
226	-=		1	compound-statement	3
226	/=		1	compound-statement	3
226	;		1	compound-statement	3
226	<<=		1	compound-statement	3
226	=		1	compound-statement	3
226	>>=		1	compound-statement	3
226	^=		1	compound-statement	3
226	_KULV_END_		1	compound-statement	3
226	auto		1	compound-statement	3
226	break		1	compound-statement	3
226	case		1	compound-statement	3
226	char		1	compound-statement	3
226	character-constant		1	compound-statement	3
226	const		1	compound-statement	3
226	continue		1	compound-statement	3
226	default		1	compound-statement	3
226	do		1	compound-statement	3
226	double		1	compound-statement	3
226	else		1	compound-statement	3
226	enumeration-constant		1	compound-statement	3
226	extern		1	compound-statement	3
226	float		1	compound-statement	3
226	floating-constant		1	compound-statement	3
226	for		1	compound-statement	3
226	goto		1	compound-statement	3
226	identifier		1	compound-statement	3
226	if		1	compound-statement	3
226	int		1	compound-statement	3
226	integer-constant		1	compound-statement	3
226	long		1	compound-statement	3
226	register		1	compound-statement	3
226	return		1	compound-statement	3
226	short		1	compound-statement	3
226	signed		1	compound-statement	3
226	sizeof		1	compound-statement	3
226	static		1	compound-statement	3
226	string-constant		1	compound-statement	3
226	switch		1	compound-statement	3
226	typedef		1	compound-statement	3
226	unsigned		1	compound-statement	3
226	void		1	compound-statement	3
226	volatile		1	compound-statement	3
226	while		1	compound-statement	3
226	{		1	compound-statement	3
226	|=		1	compound-statement	3
226	}		1	compound-statement	3
226	~		1	compound-statement	3
75	!		0	62
75	&		0	63
75	(		0	64
75	*		0	65
75	+		0	66
75	++		0	67
75	-		0	68
75	--		0	69
75	character-constant		0	77
75	enumeration-constant		0	85
75	floating-constant		0	90
75	identifier		0	129
75	integer-constant		0	96
75	sizeof		0	109
75	string-constant		0	112
75	~		0	118
203	!		0	62
203	&		0	63
203	(		0	64
203	*		0	65
203	+		0	66
203	++		0	67
203	-		0	68
203	--		0	69
203	]		0	264
203	character-constant		0	77
203	enumeration-constant		0	85
203	floating-constant		0	90
203	identifier		0	129
203	integer-constant		0	96
203	sizeof		0	109
203	string-constant		0	112
203	~		0	118
331	!		1	iteration-statement	5
331	%=		1	iteration-statement	5
331	&		1	iteration-statement	5
331	&=		1	iteration-statement	5
331	(		1	iteration-statement	5
331	)		1	iteration-statement	5
331	*		1	iteration-statement	5
331	*=		1	iteration-statement	5
331	+		1	iteration-statement	5
331	++		1	iteration-statement	5
331	+=		1	iteration-statement	5
331	,		1	iteration-statement	5
331	-		1	iteration-statement	5
331	--		1	iteration-statement	5
331	-=		1	iteration-statement	5
331	/=		1	iteration-statement	5
331	;		1	iteration-statement	5
331	<<=		1	iteration-statement	5
331	=		1	iteration-statement	5
331	>>=		1	iteration-statement	5
331	^=		1	iteration-statement	5
331	_KULV_END_		1	iteration-statement	5
331	auto		1	iteration-statement	5
331	break		1	iteration-statement	5
331	case		1	iteration-statement	5
331	char		1	iteration-statement	5
331	character-constant		1	iteration-statement	5
331	const		1	iteration-statement	5
331	continue		1	iteration-statement	5
331	default		1	iteration-statement	5
331	do		1	iteration-statement	5
331	double		1	iteration-statement	5
331	else		1	iteration-statement	5
331	enumeration-constant		1	iteration-statement	5
331	extern		1	iteration-statement	5
331	float		1	iteration-statement	5
331	floating-constant		1	iteration-statement	5
331	for		1	iteration-statement	5
331	goto		1	iteration-statement	5
331	identifier		1	iteration-statement	5
331	if		1	iteration-statement	5
331	int		1	iteration-statement	5
331	integer-constant		1	iteration-statement	5
331	long		1	iteration-statement	5
331	register		1	iteration-statement	5
331	return		1	iteration-statement	5
331	short		1	iteration-statement	5
331	signed		1	iteration-statement	5
331	sizeof		1	iteration-statement	5
331	static		1	iteration-statement	5
331	string-constant		1	iteration-statement	5
331	switch		1	iteration-statement	5
331	typedef		1	iteration-statement	5
331	unsigned		1	iteration-statement	5
331	void		1	iteration-statement	5
331	volatile		1	iteration-statement	5
331	while		1	iteration-statement	5
331	{		1	iteration-statement	5
331	|=		1	iteration-statement	5
331	}		1	iteration-statement	5
331	~		1	iteration-statement	5
84	!		0	62
84	&		0	63
84	(		0	64
84	*		0	65
84	+		0	66
84	++		0	67
84	-		0	68
84	--		0	69
84	;		0	70
84	break		0	74
84	case		0	75
84	character-constant		0	77
84	continue		0	81
84	default		0	83
84	do		0	84
84	enumeration-constant		0	85
84	floating-constant		0	90
84	for		0	91
84	goto		0	92
84	identifier		0	93
84	if		0	94
84	integer-constant		0	96
84	return		0	106
84	sizeof		0	109
84	string-constant		0	112
84	switch		0	113
84	while		0	116
84	{		0	43
84	~		0	118
212	!		1	direct-declarator	3
212	%=		1	direct-declarator	3
212	&		1	direct-declarator	3
212	&=		1	direct-declarator	3
212	(		1	direct-declarator	3
212	)		1	direct-declarator	3
212	*		1	direct-declarator	3
212	*=		1	direct-declarator	3
212	+		1	direct-declarator	3
212	++		1	direct-declarator	3
212	+=		1	direct-declarator	3
212	,		1	direct-declarator	3
212	-		1	direct-declarator	3
212	--		1	direct-declarator	3
212	-=		1	direct-declarator	3
212	/=		1	direct-declarator	3
212	;		1	direct-declarator	3
212	<<=		1	direct-declarator	3
212	=		1	direct-declarator	3
212	>>=		1	direct-declarator	3
212	[		1	direct-declarator	3
212	^=		1	direct-declarator	3
212	_KULV_END_		1	direct-declarator	3
212	auto		1	direct-declarator	3
212	break		1	direct-declarator	3
212	case		1	direct-declarator	3
212	char		1	direct-declarator	3
212	character-constant		1	direct-declarator	3
212	const		1	direct-declarator	3
212	continue		1	direct-declarator	3
212	default		1	direct-declarator	3
212	do		1	direct-declarator	3
212	double		1	direct-declarator	3
212	else		1	direct-declarator	3
212	enumeration-constant		1	direct-declarator	3
212	extern		1	direct-declarator	3
212	float		1	direct-declarator	3
212	floating-constant		1	direct-declarator	3
212	for		1	direct-declarator	3
212	goto		1	direct-declarator	3
212	identifier		1	direct-declarator	3
212	if		1	direct-declarator	3
212	int		1	direct-declarator	3
212	integer-constant		1	direct-declarator	3
212	long		1	direct-declarator	3
212	register		1	direct-declarator	3
212	return		1	direct-declarator	3
212	short		1	direct-declarator	3
212	signed		1	direct-declarator	3
212	sizeof		1	direct-declarator	3
212	static		1	direct-declarator	3
212	string-constant		1	direct-declarator	3
212	switch		1	direct-declarator	3
212	typedef		1	direct-declarator	3
212	unsigned		1	direct-declarator	3
212	void		1	direct-declarator	3
212	volatile		1	direct-declarator	3
212	while		1	direct-declarator	3
212	{		1	direct-declarator	3
212	|=		1	direct-declarator	3
212	}		1	direct-declarator	3
212	~		1	direct-declarator	3
61	!		1	init-declarator	0
61	%=		1	init-declarator	0
61	&		1	init-declarator	0
61	&=		1	init-declarator	0
61	(		1	init-declarator	0
61	)		1	init-declarator	0
61	*		1	init-declarator	0
61	*=		1	init-declarator	0
61	+		1	init-declarator	0
61	++		1	init-declarator	0
61	+=		1	init-declarator	0
61	,		1	init-declarator	0
61	-		1	init-declarator	0
61	--		1	init-declarator	0
61	-=		1	init-declarator	0
61	/=		1	init-declarator	0
61	;		1	init-declarator	0
61	<<=		1	init-declarator	0
61	=		0	56
61	>>=		1	init-declarator	0
61	^=		1	init-declarator	0
61	_KULV_END_		1	init-declarator	0
61	auto		1	init-declarator	0
61	break		1	init-declarator	0
61	case		1	init-declarator	0
61	char		1	init-declarator	0
61	character-constant		1	init-declarator	0
61	const		1	init-declarator	0
61	continue		1	init-declarator	0
61	default		1	init-declarator	0
61	do		1	init-declarator	0
61	double		1	init-declarator	0
61	else		1	init-declarator	0
61	enumeration-constant		1	init-declarator	0
61	extern		1	init-declarator	0
61	float		1	init-declarator	0
61	floating-constant		1	init-declarator	0
61	for		1	init-declarator	0
61	goto		1	init-declarator	0
61	identifier		1	init-declarator	0
61	if		1	init-declarator	0
61	int		1	init-declarator	0
61	integer-constant		1	init-declarator	0
61	long		1	init-declarator	0
61	register		1	init-declarator	0
61	return		1	init-declarator	0
61	short		1	init-declarator	0
61	signed		1	init-declarator	0
61	sizeof		1	init-declarator	0
61	static		1	init-declarator	0
61	string-constant		1	init-declarator	0
61	switch		1	init-declarator	0
61	typedef		1	init-declarator	0
61	unsigned		1	init-declarator	0
61	void		1	init-declarator	0
61	volatile		1	init-declarator	0
61	while		1	init-declarator	0
61	{		1	init-declarator	0
61	|=		1	init-declarator	0
61	}		1	init-declarator	0
61	~		1	init-declarator	0
189	!		1	assignment-operator	8
189	&		1	assignment-operator	8
189	(		1	assignment-operator	8
189	*		1	assignment-operator	8
189	+		1	assignment-operator	8
189	++		1	assignment-operator	8
189	-		1	assignment-operator	8
189	--		1	assignment-operator	8
189	character-constant		1	assignment-operator	8
189	enumeration-constant		1	assignment-operator	8
189	floating-constant		1	assignment-operator	8
189	identifier		1	assignment-operator	8
189	integer-constant		1	assignment-operator	8
189	sizeof		1	assignment-operator	8
189	string-constant		1	assignment-operator	8
189	~		1	assignment-operator	8
317	!		1	iteration-statement	2
317	%=		1	iteration-statement	2
317	&		1	iteration-statement	2
317	&=		1	iteration-statement	2
317	(		1	iteration-statement	2
317	)		1	iteration-statement	2
317	*		1	iteration-statement	2
317	*=		1	iteration-statement	2
317	+		1	iteration-statement	2
317	++		1	iteration-statement	2
317	+=		1	iteration-statement	2
317	,		1	iteration-statement	2
317	-		1	iteration-statement	2
317	--		1	iteration-statement	2
317	-=		1	iteration-statement	2
317	/=		1	iteration-statement	2
317	;		1	iteration-statement	2
317	<<=		1	iteration-statement	2
317	=		1	iteration-statement	2
317	>>=		1	iteration-statement	2
317	^=		1	iteration-statement	2
317	_KULV_END_		1	iteration-statement	2
317	auto		1	iteration-statement	2
317	break		1	iteration-statement	2
317	case		1	iteration-statement	2
317	char		1	iteration-statement	2
317	character-constant		1	iteration-statement	2
317	const		1	iteration-statement	2
317	continue		1	iteration-statement	2
317	default		1	iteration-statement	2
317	do		1	iteration-statement	2
317	double		1	iteration-statement	2
317	else		1	iteration-statement	2
317	enumeration-constant		1	iteration-statement	2
317	extern		1	iteration-statement	2
317	float		1	iteration-statement	2
317	floating-constant		1	iteration-statement	2
317	for		1	iteration-statement	2
317	goto		1	iteration-statement	2
317	identifier		1	iteration-statement	2
317	if		1	iteration-statement	2
317	int		1	iteration-statement	2
317	integer-constant		1	iteration-statement	2
317	long		1	iteration-statement	2
317	register		1	iteration-statement	2
317	return		1	iteration-statement	2
317	short		1	iteration-statement	2
317	signed		1	iteration-statement	2
317	sizeof		1	iteration-statement	2
317	static		1	iteration-statement	2
317	string-constant		1	iteration-statement	2
317	switch		1	iteration-statement	2
317	typedef		1	iteration-statement	2
317	unsigned		1	iteration-statement	2
317	void		1	iteration-statement	2
317	volatile		1	iteration-statement	2
317	while		1	iteration-statement	2
317	{		1	iteration-statement	2
317	|=		1	iteration-statement	2
317	}		1	iteration-statement	2
317	~		1	iteration-statement	2
6	(		1	external-declaration	1
6	*		1	external-declaration	1
6	_KULV_END_		1	external-declaration	1
6	auto		1	external-declaration	1
6	char		1	external-declaration	1
6	const		1	external-declaration	1
6	double		1	external-declaration	1
6	extern		1	external-declaration	1
6	float		1	external-declaration	1
6	identifier		1	external-declaration	1
6	int		1	external-declaration	1
6	long		1	external-declaration	1
6	register		1	external-declaration	1
6	short		1	external-declaration	1
6	signed		1	external-declaration	1
6	static		1	external-declaration	1
6	typedef		1	external-declaration	1
6	unsigned		1	external-declaration	1
6	void		1	external-declaration	1
6	volatile		1	external-declaration	1
134	!		0	62
134	&		0	63
134	(		0	64
134	*		0	65
134	+		0	66
134	++		0	67
134	-		0	68
134	--		0	69
134	character-constant		0	77
134	enumeration-constant		0	85
134	floating-constant		0	90
134	identifier		0	129
134	integer-constant		0	96
134	sizeof		0	109
134	string-constant		0	112
134	{		0	134
134	~		0	118
262	)		0	288
111	!		0	62
111	&		0	63
111	(		0	64
111	*		0	65
111	+		0	66
111	++		0	67
111	-		0	68
111	--		0	69
111	;		0	70
111	break		0	74
111	case		0	75
111	character-constant		0	77
111	continue		0	81
111	default		0	83
111	do		0	84
111	enumeration-constant		0	85
111	floating-constant		0	90
111	for		0	91
111	goto		0	92
111	identifier		0	93
111	if		0	94
111	integer-constant		0	96
111	return		0	106
111	sizeof		0	109
111	string-constant		0	112
111	switch		0	113
111	while		0	116
111	{		0	43
111	}		0	186
111	~		0	118
239	!		1	logical-AND-expression	1
239	!=		1	logical-AND-expression	1
239	%		1	logical-AND-expression	1
239	%=		1	logical-AND-expression	1
239	&		1	logical-AND-expression	1
239	&&		1	logical-AND-expression	1
239	&=		1	logical-AND-expression	1
239	(		1	logical-AND-expression	1
239	)		1	logical-AND-expression	1
239	*		1	logical-AND-expression	1
239	*=		1	logical-AND-expression	1
239	+		1	logical-AND-expression	1
239	++		1	logical-AND-expression	1
239	+=		1	logical-AND-expression	1
239	,		1	logical-AND-expression	1
239	-		1	logical-AND-expression	1
239	--		1	logical-AND-expression	1
239	-=		1	logical-AND-expression	1
239	->		1	logical-AND-expression	1
239	/		1	logical-AND-expression	1
239	/=		1	logical-AND-expression	1
239	:		1	logical-AND-expression	1
239	;		1	logical-AND-expression	1
239	<		1	logical-AND-expression	1
239	<<		1	logical-AND-expression	1
239	<<=		1	logical-AND-expression	1
239	<=		1	logical-AND-expression	1
239	=		1	logical-AND-expression	1
239	==		1	logical-AND-expression	1
239	>		1	logical-AND-expression	1
239	>=		1	logical-AND-expression	1
239	>>		1	logical-AND-expression	1
239	>>=		1	logical-AND-expression	1
239	?		1	logical-AND-expression	1
239	[		1	logical-AND-expression	1
239	]		1	logical-AND-expression	1
239	^		1	logical-AND-expression	1
239	^=		1	logical-AND-expression	1
239	_KULV_END_		1	logical-AND-expression	1
239	auto		1	logical-AND-expression	1
239	break		1	logical-AND-expression	1
239	case		1	logical-AND-expression	1
239	char		1	logical-AND-expression	1
239	character-constant		1	logical-AND-expression	1
239	const		1	logical-AND-expression	1
239	continue		1	logical-AND-expression	1
239	default		1	logical-AND-expression	1
239	do		1	logical-AND-expression	1
239	double		1	logical-AND-expression	1
239	else		1	logical-AND-expression	1
239	enumeration-constant		1	logical-AND-expression	1
239	extern		1	logical-AND-expression	1
239	float		1	logical-AND-expression	1
239	floating-constant		1	logical-AND-expression	1
239	for		1	logical-AND-expression	1
239	goto		1	logical-AND-expression	1
239	identifier		1	logical-AND-expression	1
239	if		1	logical-AND-expression	1
239	int		1	logical-AND-expression	1
239	integer-constant		1	logical-AND-expression	1
239	long		1	logical-AND-expression	1
239	register		1	logical-AND-expression	1
239	return		1	logical-AND-expression	1
239	short		1	logical-AND-expression	1
239	signed		1	logical-AND-expression	1
239	sizeof		1	logical-AND-expression	1
239	static		1	logical-AND-expression	1
239	string-constant		1	logical-AND-expression	1
239	switch		1	logical-AND-expression	1
239	typedef		1	logical-AND-expression	1
239	unsigned		1	logical-AND-expression	1
239	void		1	logical-AND-expression	1
239	volatile		1	logical-AND-expression	1
239	while		1	logical-AND-expression	1
239	{		1	logical-AND-expression	1
239	|		0	163
239	|=		1	logical-AND-expression	1
239	||		1	logical-AND-expression	1
239	}		1	logical-AND-expression	1
239	~		1	logical-AND-expression	1
120	!		1	direct-declarator	5
120	%=		1	direct-declarator	5
120	&		1	direct-declarator	5
120	&=		1	direct-declarator	5
120	(		1	direct-declarator	5
120	)		1	direct-declarator	5
120	*		1	direct-declarator	5
120	*=		1	direct-declarator	5
120	+		1	direct-declarator	5
120	++		1	direct-declarator	5
120	+=		1	direct-declarator	5
120	,		1	direct-declarator	5
120	-		1	direct-declarator	5
120	--		1	direct-declarator	5
120	-=		1	direct-declarator	5
120	/=		1	direct-declarator	5
120	;		1	direct-declarator	5
120	<<=		1	direct-declarator	5
120	=		1	direct-declarator	5
120	>>=		1	direct-declarator	5
120	[		1	direct-declarator	5
120	^=		1	direct-declarator	5
120	_KULV_END_		1	direct-declarator	5
120	auto		1	direct-declarator	5
120	break		1	direct-declarator	5
120	case		1	direct-declarator	5
120	char		1	direct-declarator	5
120	character-constant		1	direct-declarator	5
120	const		1	direct-declarator	5
120	continue		1	direct-declarator	5
120	default		1	direct-declarator	5
120	do		1	direct-declarator	5
120	double		1	direct-declarator	5
120	else		1	direct-declarator	5
120	enumeration-constant		1	direct-declarator	5
120	extern		1	direct-declarator	5
120	float		1	direct-declarator	5
120	floating-constant		1	direct-declarator	5
120	for		1	direct-declarator	5
120	goto		1	direct-declarator	5
120	identifier		1	direct-declarator	5
120	if		1	direct-declarator	5
120	int		1	direct-declarator	5
120	integer-constant		1	direct-declarator	5
120	long		1	direct-declarator	5
120	register		1	direct-declarator	5
120	return		1	direct-declarator	5
120	short		1	direct-declarator	5
120	signed		1	direct-declarator	5
120	sizeof		1	direct-declarator	5
120	static		1	direct-declarator	5
120	string-constant		1	direct-declarator	5
120	switch		1	direct-declarator	5
120	typedef		1	direct-declarator	5
120	unsigned		1	direct-declarator	5
120	void		1	direct-declarator	5
120	volatile		1	direct-declarator	5
120	while		1	direct-declarator	5
120	{		1	direct-declarator	5
120	|=		1	direct-declarator	5
120	}		1	direct-declarator	5
120	~		1	direct-declarator	5
248	!		1	postfix-expression	4
248	!=		1	postfix-expression	4
248	%		1	postfix-expression	4
248	%=		1	postfix-expression	4
248	&		1	postfix-expression	4
248	&&		1	postfix-expression	4
248	&=		1	postfix-expression	4
248	(		1	postfix-expression	4
248	)		1	postfix-expression	4
248	*		1	postfix-expression	4
248	*=		1	postfix-expression	4
248	+		1	postfix-expression	4
248	++		1	postfix-expression	4
248	+=		1	postfix-expression	4
248	,		1	postfix-expression	4
248	-		1	postfix-expression	4
248	--		1	postfix-expression	4
248	-=		1	postfix-expression	4
248	->		1	postfix-expression	4
248	/		1	postfix-expression	4
248	/=		1	postfix-expression	4
248	:		1	postfix-expression	4
248	;		1	postfix-expression	4
248	<		1	postfix-expression	4
248	<<		1	postfix-expression	4
248	<<=		1	postfix-expression	4
248	<=		1	postfix-expression	4
248	=		1	postfix-expression	4
248	==		1	postfix-expression	4
248	>		1	postfix-expression	4
248	>=		1	postfix-expression	4
248	>>		1	postfix-expression	4
248	>>=		1	postfix-expression	4
248	?		1	postfix-expression	4
248	[		1	postfix-expression	4
248	]		1	postfix-expression	4
248	^		1	postfix-expression	4
248	^=		1	postfix-expression	4
248	_KULV_END_		1	postfix-expression	4
248	auto		1	postfix-expression	4
248	break		1	postfix-expression	4
248	case		1	postfix-expression	4
248	char		1	postfix-expression	4
248	character-constant		1	postfix-expression	4
248	const		1	postfix-expression	4
248	continue		1	postfix-expression	4
248	default		1	postfix-expression	4
248	do		1	postfix-expression	4
248	double		1	postfix-expression	4
248	else		1	postfix-expression	4
248	enumeration-constant		1	postfix-expression	4
248	extern		1	postfix-expression	4
248	float		1	postfix-expression	4
248	floating-constant		1	postfix-expression	4
248	for		1	postfix-expression	4
248	goto		1	postfix-expression	4
248	identifier		1	postfix-expression	4
248	if		1	postfix-expression	4
248	int		1	postfix-expression	4
248	integer-constant		1	postfix-expression	4
248	long		1	postfix-expression	4
248	register		1	postfix-expression	4
248	return		1	postfix-expression	4
248	short		1	postfix-expression	4
248	signed		1	postfix-expression	4
248	sizeof		1	postfix-expression	4
248	static		1	postfix-expression	4
248	string-constant		1	postfix-expression	4
248	switch		1	postfix-expression	4
248	typedef		1	postfix-expression	4
248	unsigned		1	postfix-expression	4
248	void		1	postfix-expression	4
248	volatile		1	postfix-expression	4
248	while		1	postfix-expression	4
248	{		1	postfix-expression	4
248	|		1	postfix-expression	4
248	|=		1	postfix-expression	4
248	||		1	postfix-expression	4
248	}		1	postfix-expression	4
248	~		1	postfix-expression	4
65	!		1	unary-operator	1
65	&		1	unary-operator	1
65	(		1	unary-operator	1
65	*		1	unary-operator	1
65	+		1	unary-operator	1
65	++		1	unary-operator	1
65	-		1	unary-operator	1
65	--		1	unary-operator	1
65	character-constant		1	unary-operator	1
65	enumeration-constant		1	unary-operator	1
65	floating-constant		1	unary-operator	1
65	identifier		1	unary-operator	1
65	integer-constant		1	unary-operator	1
65	sizeof		1	unary-operator	1
65	string-constant		1	unary-operator	1
65	~		1	unary-operator	1
193	!		1	assignment-operator	2
193	&		1	assignment-operator	2
193	(		1	assignment-operator	2
193	*		1	assignment-operator	2
193	+		1	assignment-operator	2
193	++		1	assignment-operator	2
193	-		1	assignment-operator	2
193	--		1	assignment-operator	2
193	character-constant		1	assignment-operator	2
193	enumeration-constant		1	assignment-operator	2
193	floating-constant		1	assignment-operator	2
193	identifier		1	assignment-operator	2
193	integer-constant		1	assignment-operator	2
193	sizeof		1	assignment-operator	2
193	string-constant		1	assignment-operator	2
193	~		1	assignment-operator	2
321	!		0	62
321	&		0	63
321	(		0	64
321	*		0	65
321	+		0	66
321	++		0	67
321	-		0	68
321	--		0	69
321	;		0	70
321	break		0	74
321	case		0	75
321	character-constant		0	77
321	continue		0	81
321	default		0	83
321	do		0	84
321	enumeration-constant		0	85
321	floating-constant		0	90
321	for		0	91
321	goto		0	92
321	identifier		0	93
321	if		0	94
321	integer-constant		0	96
321	return		0	106
321	sizeof		0	109
321	string-constant		0	112
321	switch		0	113
321	while		0	116
321	{		0	43
321	~		0	118
42	(		1	function-definition	0
42	*		1	function-definition	0
42	_KULV_END_		1	function-definition	0
42	auto		1	function-definition	0
42	char		1	function-definition	0
42	const		1	function-definition	0
42	double		1	function-definition	0
42	extern		1	function-definition	0
42	float		1	function-definition	0
42	identifier		1	function-definition	0
42	int		1	function-definition	0
42	long		1	function-definition	0
42	register		1	function-definition	0
42	short		1	function-definition	0
42	signed		1	function-definition	0
42	static		1	function-definition	0
42	typedef		1	function-definition	0
42	unsigned		1	function-definition	0
42	void		1	function-definition	0
42	volatile		1	function-definition	0
170	!		0	62
170	&		0	63
170	(		0	64
170	)		0	247
170	*		0	65
170	+		0	66
170	++		0	67
170	-		0	68
170	--		0	69
170	character-constant		0	77
170	enumeration-constant		0	85
170	floating-constant		0	90
170	identifier		0	129
170	integer-constant		0	96
170	sizeof		0	109
170	string-constant		0	112
170	~		0	118
298	,		0	157
298	;		0	311
51	!		1	direct-declarator	1
51	%=		1	direct-declarator	1
51	&		1	direct-declarator	1
51	&=		1	direct-declarator	1
51	(		1	direct-declarator	1
51	)		1	direct-declarator	1
51	*		1	direct-declarator	1
51	*=		1	direct-declarator	1
51	+		1	direct-declarator	1
51	++		1	direct-declarator	1
51	+=		1	direct-declarator	1
51	,		1	direct-declarator	1
51	-		1	direct-declarator	1
51	--		1	direct-declarator	1
51	-=		1	direct-declarator	1
51	/=		1	direct-declarator	1
51	;		1	direct-declarator	1
51	<<=		1	direct-declarator	1
51	=		1	direct-declarator	1
51	>>=		1	direct-declarator	1
51	[		1	direct-declarator	1
51	^=		1	direct-declarator	1
51	_KULV_END_		1	direct-declarator	1
51	auto		1	direct-declarator	1
51	break		1	direct-declarator	1
51	case		1	direct-declarator	1
51	char		1	direct-declarator	1
51	character-constant		1	direct-declarator	1
51	const		1	direct-declarator	1
51	continue		1	direct-declarator	1
51	default		1	direct-declarator	1
51	do		1	direct-declarator	1
51	double		1	direct-declarator	1
51	else		1	direct-declarator	1
51	enumeration-constant		1	direct-declarator	1
51	extern		1	direct-declarator	1
51	float		1	direct-declarator	1
51	floating-constant		1	direct-declarator	1
51	for		1	direct-declarator	1
51	goto		1	direct-declarator	1
51	identifier		1	direct-declarator	1
51	if		1	direct-declarator	1
51	int		1	direct-declarator	1
51	integer-constant		1	direct-declarator	1
51	long		1	direct-declarator	1
51	register		1	direct-declarator	1
51	return		1	direct-declarator	1
51	short		1	direct-declarator	1
51	signed		1	direct-declarator	1
51	sizeof		1	direct-declarator	1
51	static		1	direct-declarator	1
51	string-constant		1	direct-declarator	1
51	switch		1	direct-declarator	1
51	typedef		1	direct-declarator	1
51	unsigned		1	direct-declarator	1
51	void		1	direct-declarator	1
51	volatile		1	direct-declarator	1
51	while		1	direct-declarator	1
51	{		1	direct-declarator	1
51	|=		1	direct-declarator	1
51	}		1	direct-declarator	1
51	~		1	direct-declarator	1
179	,		0	157
179	;		0	254
307	!		1	iteration-statement	0
307	%=		1	iteration-statement	0
307	&		1	iteration-statement	0
307	&=		1	iteration-statement	0
307	(		1	iteration-statement	0
307	)		1	iteration-statement	0
307	*		1	iteration-statement	0
307	*=		1	iteration-statement	0
307	+		1	iteration-statement	0
307	++		1	iteration-statement	0
307	+=		1	iteration-statement	0
307	,		1	iteration-statement	0
307	-		1	iteration-statement	0
307	--		1	iteration-statement	0
307	-=		1	iteration-statement	0
307	/=		1	iteration-statement	0
307	;		1	iteration-statement	0
307	<<=		1	iteration-statement	0
307	=		1	iteration-statement	0
307	>>=		1	iteration-statement	0
307	^=		1	iteration-statement	0
307	_KULV_END_		1	iteration-statement	0
307	auto		1	iteration-statement	0
307	break		1	iteration-statement	0
307	case		1	iteration-statement	0
307	char		1	iteration-statement	0
307	character-constant		1	iteration-statement	0
307	const		1	iteration-statement	0
307	continue		1	iteration-statement	0
307	default		1	iteration-statement	0
307	do		1	iteration-statement	0
307	double		1	iteration-statement	0
307	else		1	iteration-statement	0
307	enumeration-constant		1	iteration-statement	0
307	extern		1	iteration-statement	0
307	float		1	iteration-statement	0
307	floating-constant		1	iteration-statement	0
307	for		1	iteration-statement	0
307	goto		1	iteration-statement	0
307	identifier		1	iteration-statement	0
307	if		1	iteration-statement	0
307	int		1	iteration-statement	0
307	integer-constant		1	iteration-statement	0
307	long		1	iteration-statement	0
307	register		1	iteration-statement	0
307	return		1	iteration-statement	0
307	short		1	iteration-statement	0
307	signed		1	iteration-statement	0
307	sizeof		1	iteration-statement	0
307	static		1	iteration-statement	0
307	string-constant		1	iteration-statement	0
307	switch		1	iteration-statement	0
307	typedef		1	iteration-statement	0
307	unsigned		1	iteration-statement	0
307	void		1	iteration-statement	0
307	volatile		1	iteration-statement	0
307	while		1	iteration-statement	0
307	{		1	iteration-statement	0
307	|=		1	iteration-statement	0
307	}		1	iteration-statement	0
307	~		1	iteration-statement	0
28	(		1	type-specifier	8
28	)		1	type-specifier	8
28	*		1	type-specifier	8
28	,		1	type-specifier	8
28	;		1	type-specifier	8
28	[		1	type-specifier	8
28	auto		1	type-specifier	8
28	char		1	type-specifier	8
28	const		1	type-specifier	8
28	double		1	type-specifier	8
28	extern		1	type-specifier	8
28	float		1	type-specifier	8
28	identifier		1	type-specifier	8
28	int		1	type-specifier	8
28	long		1	type-specifier	8
28	register		1	type-specifier	8
28	short		1	type-specifier	8
28	signed		1	type-specifier	8
28	static		1	type-specifier	8
28	typedef		1	type-specifier	8
28	unsigned		1	type-specifier	8
28	void		1	type-specifier	8
28	volatile		1	type-specifier	8
92	identifier		0	160
156	!		0	62
156	&		0	63
156	(		0	64
156	*		0	65
156	+		0	66
156	++		0	67
156	-		0	68
156	--		0	69
156	character-constant		0	77
156	enumeration-constant		0	85
156	floating-constant		0	90
156	identifier		0	129
156	integer-constant		0	96
156	sizeof		0	109
156	string-constant		0	112
156	~		0	118
220	(		1	specifier-qualifier-list	3
220	)		1	specifier-qualifier-list	3
220	*		1	specifier-qualifier-list	3
220	[		1	specifier-qualifier-list	3
284	!		1	postfix-expression	1
284	!=		1	postfix-expression	1
284	%		1	postfix-expression	1
284	%=		1	postfix-expression	1
284	&		1	postfix-expression	1
284	&&		1	postfix-expression	1
284	&=		1	postfix-expression	1
284	(		1	postfix-expression	1
284	)		1	postfix-expression	1
284	*		1	postfix-expression	1
284	*=		1	postfix-expression	1
284	+		1	postfix-expression	1
284	++		1	postfix-expression	1
284	+=		1	postfix-expression	1
284	,		1	postfix-expression	1
284	-		1	postfix-expression	1
284	--		1	postfix-expression	1
284	-=		1	postfix-expression	1
284	->		1	postfix-expression	1
284	/		1	postfix-expression	1
284	/=		1	postfix-expression	1
284	:		1	postfix-expression	1
284	;		1	postfix-expression	1
284	<		1	postfix-expression	1
284	<<		1	postfix-expression	1
284	<<=		1	postfix-expression	1
284	<=		1	postfix-expression	1
284	=		1	postfix-expression	1
284	==		1	postfix-expression	1
284	>		1	postfix-expression	1
284	>=		1	postfix-expression	1
284	>>		1	postfix-expression	1
284	>>=		1	postfix-expression	1
284	?		1	postfix-expression	1
284	[		1	postfix-expression	1
284	]		1	postfix-expression	1
284	^		1	postfix-expression	1
284	^=		1	postfix-expression	1
284	_KULV_END_		1	postfix-expression	1
284	auto		1	postfix-expression	1
284	break		1	postfix-expression	1
284	case		1	postfix-expression	1
284	char		1	postfix-expression	1
284	character-constant		1	postfix-expression	1
284	const		1	postfix-expression	1
284	continue		1	postfix-expression	1
284	default		1	postfix-expression	1
284	do		1	postfix-expression	1
284	double		1	postfix-expression	1
284	else		1	postfix-expression	1
284	enumeration-constant		1	postfix-expression	1
284	extern		1	postfix-expression	1
284	float		1	postfix-expression	1
284	floating-constant		1	postfix-expression	1
284	for		1	postfix-expression	1
284	goto		1	postfix-expression	1
284	identifier		1	postfix-expression	1
284	if		1	postfix-expression	1
284	int		1	postfix-expression	1
284	integer-constant		1	postfix-expression	1
284	long		1	postfix-expression	1
284	register		1	postfix-expression	1
284	return		1	postfix-expression	1
284	short		1	postfix-expression	1
284	signed		1	postfix-expression	1
284	sizeof		1	postfix-expression	1
284	static		1	postfix-expression	1
284	string-constant		1	postfix-expression	1
284	switch		1	postfix-expression	1
284	typedef		1	postfix-expression	1
284	unsigned		1	postfix-expression	1
284	void		1	postfix-expression	1
284	volatile		1	postfix-expression	1
284	while		1	postfix-expression	1
284	{		1	postfix-expression	1
284	|		1	postfix-expression	1
284	|=		1	postfix-expression	1
284	||		1	postfix-expression	1
284	}		1	postfix-expression	1
284	~		1	postfix-expression	1
37	,		0	58
37	;		0	57
101	!		1	conditional-expression	0
101	!=		1	conditional-expression	0
101	%		1	conditional-expression	0
101	%=		1	conditional-expression	0
101	&		1	conditional-expression	0
101	&&		1	conditional-expression	0
101	&=		1	conditional-expression	0
101	(		1	conditional-expression	0
101	)		1	conditional-expression	0
101	*		1	conditional-expression	0
101	*=		1	conditional-expression	0
101	+		1	conditional-expression	0
101	++		1	conditional-expression	0
101	+=		1	conditional-expression	0
101	,		1	conditional-expression	0
101	-		1	conditional-expression	0
101	--		1	conditional-expression	0
101	-=		1	conditional-expression	0
101	->		1	conditional-expression	0
101	/		1	conditional-expression	0
101	/=		1	conditional-expression	0
101	:		1	conditional-expression	0
101	;		1	conditional-expression	0
101	<		1	conditional-expression	0
101	<<		1	conditional-expression	0
101	<<=		1	conditional-expression	0
101	<=		1	conditional-expression	0
101	=		1	conditional-expression	0
101	==		1	conditional-expression	0
101	>		1	conditional-expression	0
101	>=		1	conditional-expression	0
101	>>		1	conditional-expression	0
101	>>=		1	conditional-expression	0
101	?		0	165
101	[		1	conditional-expression	0
101	]		1	conditional-expression	0
101	^		1	conditional-expression	0
101	^=		1	conditional-expression	0
101	_KULV_END_		1	conditional-expression	0
101	auto		1	conditional-expression	0
101	break		1	conditional-expression	0
101	case		1	conditional-expression	0
101	char		1	conditional-expression	0
101	character-constant		1	conditional-expression	0
101	const		1	conditional-expression	0
101	continue		1	conditional-expression	0
101	default		1	conditional-expression	0
101	do		1	conditional-expression	0
101	double		1	conditional-expression	0
101	else		1	conditional-expression	0
101	enumeration-constant		1	conditional-expression	0
101	extern		1	conditional-expression	0
101	float		1	conditional-expression	0
101	floating-constant		1	conditional-expression	0
101	for		1	conditional-expression	0
101	goto		1	conditional-expression	0
101	identifier		1	conditional-expression	0
101	if		1	conditional-expression	0
101	int		1	conditional-expression	0
101	integer-constant		1	conditional-expression	0
101	long		1	conditional-expression	0
101	register		1	conditional-expression	0
101	return		1	conditional-expression	0
101	short		1	conditional-expression	0
101	signed		1	conditional-expression	0
101	sizeof		1	conditional-expression	0
101	static		1	conditional-expression	0
101	string-constant		1	conditional-expression	0
101	switch		1	conditional-expression	0
101	typedef		1	conditional-expression	0
101	unsigned		1	conditional-expression	0
101	void		1	conditional-expression	0
101	volatile		1	conditional-expression	0
101	while		1	conditional-expression	0
101	{		1	conditional-expression	0
101	|		1	conditional-expression	0
101	|=		1	conditional-expression	0
101	||		0	166
101	}		1	conditional-expression	0
101	~		1	conditional-expression	0
165	!		0	62
165	&		0	63
165	(		0	64
165	*		0	65
165	+		0	66
165	++		0	67
165	-		0	68
165	--		0	69
165	character-constant		0	77
165	enumeration-constant		0	85
165	floating-constant		0	90
165	identifier		0	129
165	integer-constant		0	96
165	sizeof		0	109
165	string-constant		0	112
165	~		0	118
229	!		1	equality-expression	2
229	!=		1	equality-expression	2
229	%		1	equality-expression	2
229	%=		1	equality-expression	2
229	&		1	equality-expression	2
229	&&		1	equality-expression	2
229	&=		1	equality-expression	2
229	(		1	equality-expression	2
229	)		1	equality-expression	2
229	*		1	equality-expression	2
229	*=		1	equality-expression	2
229	+		1	equality-expression	2
229	++		1	equality-expression	2
229	+=		1	equality-expression	2
229	,		1	equality-expression	2
229	-		1	equality-expression	2
229	--		1	equality-expression	2
229	-=		1	equality-expression	2
229	->		1	equality-expression	2
229	/		1	equality-expression	2
229	/=		1	equality-expression	2
229	:		1	equality-expression	2
229	;		1	equality-expression	2
229	<		0	175
229	<<		1	equality-expression	2
229	<<=		1	equality-expression	2
229	<=		0	176
229	=		1	equality-expression	2
229	==		1	equality-expression	2
229	>		0	177
229	>=		0	178
229	>>		1	equality-expression	2
229	>>=		1	equality-expression	2
229	?		1	equality-expression	2
229	[		1	equality-expression	2
229	]		1	equality-expression	2
229	^		1	equality-expression	2
229	^=		1	equality-expression	2
229	_KULV_END_		1	equality-expression	2
229	auto		1	equality-expression	2
229	break		1	equality-expression	2
229	case		1	equality-expression	2
229	char		1	equality-expression	2
229	character-constant		1	equality-expression	2
229	const		1	equality-expression	2
229	continue		1	equality-expression	2
229	default		1	equality-expression	2
229	do		1	equality-expression	2
229	double		1	equality-expression	2
229	else		1	equality-expression	2
229	enumeration-constant		1	equality-expression	2
229	extern		1	equality-expression	2
229	float		1	equality-expression	2
229	floating-constant		1	equality-expression	2
229	for		1	equality-expression	2
229	goto		1	equality-expression	2
229	identifier		1	equality-expression	2
229	if		1	equality-expression	2
229	int		1	equality-expression	2
229	integer-constant		1	equality-expression	2
229	long		1	equality-expression	2
229	register		1	equality-expression	2
229	return		1	equality-expression	2
229	short		1	equality-expression	2
229	signed		1	equality-expression	2
229	sizeof		1	equality-expression	2
229	static		1	equality-expression	2
229	string-constant		1	equality-expression	2
229	switch		1	equality-expression	2
229	typedef		1	equality-expression	2
229	unsigned		1	equality-expression	2
229	void		1	equality-expression	2
229	volatile		1	equality-expression	2
229	while		1	equality-expression	2
229	{		1	equality-expression	2
229	|		1	equality-expression	2
229	|=		1	equality-expression	2
229	||		1	equality-expression	2
229	}		1	equality-expression	2
229	~		1	equality-expression	2
293	(		1	direct-abstract-declarator	3
293	)		1	direct-abstract-declarator	3
293	,		1	direct-abstract-declarator	3
293	[		1	direct-abstract-declarator	3
14	(		1	external-declaration	0
14	*		1	external-declaration	0
14	_KULV_END_		1	external-declaration	0
14	auto		1	external-declaration	0
14	char		1	external-declaration	0
14	const		1	external-declaration	0
14	double		1	external-declaration	0
14	extern		1	external-declaration	0
14	float		1	external-declaration	0
14	identifier		1	external-declaration	0
14	int		1	external-declaration	0
14	long		1	external-declaration	0
14	register		1	external-declaration	0
14	short		1	external-declaration	0
14	signed		1	external-declaration	0
14	static		1	external-declaration	0
14	typedef		1	external-declaration	0
14	unsigned		1	external-declaration	0
14	void		1	external-declaration	0
14	volatile		1	external-declaration	0
78	!		1	statement	2
78	%=		1	statement	2
78	&		1	statement	2
78	&=		1	statement	2
78	(		1	statement	2
78	)		1	statement	2
78	*		1	statement	2
78	*=		1	statement	2
78	+		1	statement	2
78	++		1	statement	2
78	+=		1	statement	2
78	,		1	statement	2
78	-		1	statement	2
78	--		1	statement	2
78	-=		1	statement	2
78	/=		1	statement	2
78	;		1	statement	2
78	<<=		1	statement	2
78	=		1	statement	2
78	>>=		1	statement	2
78	^=		1	statement	2
78	_KULV_END_		1	statement	2
78	auto		1	statement	2
78	break		1	statement	2
78	case		1	statement	2
78	char		1	statement	2
78	character-constant		1	statement	2
78	const		1	statement	2
78	continue		1	statement	2
78	default		1	statement	2
78	do		1	statement	2
78	double		1	statement	2
78	else		1	statement	2
78	enumeration-constant		1	statement	2
78	extern		1	statement	2
78	float		1	statement	2
78	floating-constant		1	statement	2
78	for		1	statement	2
78	goto		1	statement	2
78	identifier		1	statement	2
78	if		1	statement	2
78	int		1	statement	2
78	integer-constant		1	statement	2
78	long		1	statement	2
78	register		1	statement	2
78	return		1	statement	2
78	short		1	statement	2
78	signed		1	statement	2
78	sizeof		1	statement	2
78	static		1	statement	2
78	string-constant		1	statement	2
78	switch		1	statement	2
78	typedef		1	statement	2
78	unsigned		1	statement	2
78	void		1	statement	2
78	volatile		1	statement	2
78	while		1	statement	2
78	{		1	statement	2
78	|=		1	statement	2
78	}		1	statement	2
78	~		1	statement	2
142	!		1	unary-expression	1
142	!=		1	unary-expression	1
142	%		1	unary-expression	1
142	%=		1	unary-expression	1
142	&		1	unary-expression	1
142	&&		1	unary-expression	1
142	&=		1	unary-expression	1
142	(		1	unary-expression	1
142	)		1	unary-expression	1
142	*		1	unary-expression	1
142	*=		1	unary-expression	1
142	+		1	unary-expression	1
142	++		1	unary-expression	1
142	+=		1	unary-expression	1
142	,		1	unary-expression	1
142	-		1	unary-expression	1
142	--		1	unary-expression	1
142	-=		1	unary-expression	1
142	->		1	unary-expression	1
142	/		1	unary-expression	1
142	/=		1	unary-expression	1
142	:		1	unary-expression	1
142	;		1	unary-expression	1
142	<		1	unary-expression	1
142	<<		1	unary-expression	1
142	<<=		1	unary-expression	1
142	<=		1	unary-expression	1
142	=		1	unary-expression	1
142	==		1	unary-expression	1
142	>		1	unary-expression	1
142	>=		1	unary-expression	1
142	>>		1	unary-expression	1
142	>>=		1	unary-expression	1
142	?		1	unary-expression	1
142	[		1	unary-expression	1
142	]		1	unary-expression	1
142	^		1	unary-expression	1
142	^=		1	unary-expression	1
142	_KULV_END_		1	unary-expression	1
142	auto		1	unary-expression	1
142	break		1	unary-expression	1
142	case		1	unary-expression	1
142	char		1	unary-expression	1
142	character-constant		1	unary-expression	1
142	const		1	unary-expression	1
142	continue		1	unary-expression	1
142	default		1	unary-expression	1
142	do		1	unary-expression	1
142	double		1	unary-expression	1
142	else		1	unary-expression	1
142	enumeration-constant		1	unary-expression	1
142	extern		1	unary-expression	1
142	float		1	unary-expression	1
142	floating-constant		1	unary-expression	1
142	for		1	unary-expression	1
142	goto		1	unary-expression	1
142	identifier		1	unary-expression	1
142	if		1	unary-expression	1
142	int		1	unary-expression	1
142	integer-constant		1	unary-expression	1
142	long		1	unary-expression	1
142	register		1	unary-expression	1
142	return		1	unary-expression	1
142	short		1	unary-expression	1
142	signed		1	unary-expression	1
142	sizeof		1	unary-expression	1
142	static		1	unary-expression	1
142	string-constant		1	unary-expression	1
142	switch		1	unary-expression	1
142	typedef		1	unary-expression	1
142	unsigned		1	unary-expression	1
142	void		1	unary-expression	1
142	volatile		1	unary-expression	1
142	while		1	unary-expression	1
142	{		1	unary-expression	1
142	|		1	unary-expression	1
142	|=		1	unary-expression	1
142	||		1	unary-expression	1
142	}		1	unary-expression	1
142	~		1	unary-expression	1
206	(		0	266
206	)		1	abstract-declarator	1
206	,		1	abstract-declarator	1
206	[		0	267
270	)		1	parameter-type-list	1
270	,		1	parameter-type-list	1
23	(		1	declaration-specifiers	0
23	)		1	declaration-specifiers	0
23	*		1	declaration-specifiers	0
23	,		1	declaration-specifiers	0
23	;		1	declaration-specifiers	0
23	[		1	declaration-specifiers	0
23	auto		0	3
23	char		0	4
23	const		0	5
23	double		0	10
23	extern		0	11
23	float		0	13
23	identifier		1	declaration-specifiers	0
23	int		0	16
23	long		0	17
23	register		0	19
23	short		0	20
23	signed		0	21
23	static		0	22
23	typedef		0	27
23	unsigned		0	28
23	void		0	29
23	volatile		0	30
87	!		1	inclusive-OR-expression	0
87	!=		1	inclusive-OR-expression	0
87	%		1	inclusive-OR-expression	0
87	%=		1	inclusive-OR-expression	0
87	&		1	inclusive-OR-expression	0
87	&&		1	inclusive-OR-expression	0
87	&=		1	inclusive-OR-expression	0
87	(		1	inclusive-OR-expression	0
87	)		1	inclusive-OR-expression	0
87	*		1	inclusive-OR-expression	0
87	*=		1	inclusive-OR-expression	0
87	+		1	inclusive-OR-expression	0
87	++		1	inclusive-OR-expression	0
87	+=		1	inclusive-OR-expression	0
87	,		1	inclusive-OR-expression	0
87	-		1	inclusive-OR-expression	0
87	--		1	inclusive-OR-expression	0
87	-=		1	inclusive-OR-expression	0
87	->		1	inclusive-OR-expression	0
87	/		1	inclusive-OR-expression	0
87	/=		1	inclusive-OR-expression	0
87	:		1	inclusive-OR-expression	0
87	;		1	inclusive-OR-expression	0
87	<		1	inclusive-OR-expression	0
87	<<		1	inclusive-OR-expression	0
87	<<=		1	inclusive-OR-expression	0
87	<=		1	inclusive-OR-expression	0
87	=		1	inclusive-OR-expression	0
87	==		1	inclusive-OR-expression	0
87	>		1	inclusive-OR-expression	0
87	>=		1	inclusive-OR-expression	0
87	>>		1	inclusive-OR-expression	0
87	>>=		1	inclusive-OR-expression	0
87	?		1	inclusive-OR-expression	0
87	[		1	inclusive-OR-expression	0
87	]		1	inclusive-OR-expression	0
87	^		0	156
87	^=		1	inclusive-OR-expression	0
87	_KULV_END_		1	inclusive-OR-expression	0
87	auto		1	inclusive-OR-expression	0
87	break		1	inclusive-OR-expression	0
87	case		1	inclusive-OR-expression	0
87	char		1	inclusive-OR-expression	0
87	character-constant		1	inclusive-OR-expression	0
87	const		1	inclusive-OR-expression	0
87	continue		1	inclusive-OR-expression	0
87	default		1	inclusive-OR-expression	0
87	do		1	inclusive-OR-expression	0
87	double		1	inclusive-OR-expression	0
87	else		1	inclusive-OR-expression	0
87	enumeration-constant		1	inclusive-OR-expression	0
87	extern		1	inclusive-OR-expression	0
87	float		1	inclusive-OR-expression	0
87	floating-constant		1	inclusive-OR-expression	0
87	for		1	inclusive-OR-expression	0
87	goto		1	inclusive-OR-expression	0
87	identifier		1	inclusive-OR-expression	0
87	if		1	inclusive-OR-expression	0
87	int		1	inclusive-OR-expression	0
87	integer-constant		1	inclusive-OR-expression	0
87	long		1	inclusive-OR-expression	0
87	register		1	inclusive-OR-expression	0
87	return		1	inclusive-OR-expression	0
87	short		1	inclusive-OR-expression	0
87	signed		1	inclusive-OR-expression	0
87	sizeof		1	inclusive-OR-expression	0
87	static		1	inclusive-OR-expression	0
87	string-constant		1	inclusive-OR-expression	0
87	switch		1	inclusive-OR-expression	0
87	typedef		1	inclusive-OR-expression	0
87	unsigned		1	inclusive-OR-expression	0
87	void		1	inclusive-OR-expression	0
87	volatile		1	inclusive-OR-expression	0
87	while		1	inclusive-OR-expression	0
87	{		1	inclusive-OR-expression	0
87	|		1	inclusive-OR-expression	0
87	|=		1	inclusive-OR-expression	0
87	||		1	inclusive-OR-expression	0
87	}		1	inclusive-OR-expression	0
87	~		1	inclusive-OR-expression	0
151	!		1	compound-statement	2
151	%=		1	compound-statement	2
151	&		1	compound-statement	2
151	&=		1	compound-statement	2
151	(		1	compound-statement	2
151	)		1	compound-statement	2
151	*		1	compound-statement	2
151	*=		1	compound-statement	2
151	+		1	compound-statement	2
151	++		1	compound-statement	2
151	+=		1	compound-statement	2
151	,		1	compound-statement	2
151	-		1	compound-statement	2
151	--		1	compound-statement	2
151	-=		1	compound-statement	2
151	/=		1	compound-statement	2
151	;		1	compound-statement	2
151	<<=		1	compound-statement	2
151	=		1	compound-statement	2
151	>>=		1	compound-statement	2
151	^=		1	compound-statement	2
151	_KULV_END_		1	compound-statement	2
151	auto		1	compound-statement	2
151	break		1	compound-statement	2
151	case		1	compound-statement	2
151	char		1	compound-statement	2
151	character-constant		1	compound-statement	2
151	const		1	compound-statement	2
151	continue		1	compound-statement	2
151	default		1	compound-statement	2
151	do		1	compound-statement	2
151	double		1	compound-statement	2
151	else		1	compound-statement	2
151	enumeration-constant		1	compound-statement	2
151	extern		1	compound-statement	2
151	float		1	compound-statement	2
151	floating-constant		1	compound-statement	2
151	for		1	compound-statement	2
151	goto		1	compound-statement	2
151	identifier		1	compound-statement	2
151	if		1	compound-statement	2
151	int		1	compound-statement	2
151	integer-constant		1	compound-statement	2
151	long		1	compound-statement	2
151	register		1	compound-statement	2
151	return		1	compound-statement	2
151	short		1	compound-statement	2
151	signed		1	compound-statement	2
151	sizeof		1	compound-statement	2
151	static		1	compound-statement	2
151	string-constant		1	compound-statement	2
151	switch		1	compound-statement	2
151	typedef		1	compound-statement	2
151	unsigned		1	compound-statement	2
151	void		1	compound-statement	2
151	volatile		1	compound-statement	2
151	while		1	compound-statement	2
151	{		1	compound-statement	2
151	|=		1	compound-statement	2
151	}		1	compound-statement	2
151	~		1	compound-statement	2
215	!		1	primary-expression	2
215	!=		1	primary-expression	2
215	%		1	primary-expression	2
215	%=		1	primary-expression	2
215	&		1	primary-expression	2
215	&&		1	primary-expression	2
215	&=		1	primary-expression	2
215	(		1	primary-expression	2
215	)		1	primary-expression	2
215	*		1	primary-expression	2
215	*=		1	primary-expression	2
215	+		1	primary-expression	2
215	++		1	primary-expression	2
215	+=		1	primary-expression	2
215	,		1	primary-expression	2
215	-		1	primary-expression	2
215	--		1	primary-expression	2
215	-=		1	primary-expression	2
215	->		1	primary-expression	2
215	/		1	primary-expression	2
215	/=		1	primary-expression	2
215	:		1	primary-expression	2
215	;		1	primary-expression	2
215	<		1	primary-expression	2
215	<<		1	primary-expression	2
215	<<=		1	primary-expression	2
215	<=		1	primary-expression	2
215	=		1	primary-expression	2
215	==		1	primary-expression	2
215	>		1	primary-expression	2
215	>=		1	primary-expression	2
215	>>		1	primary-expression	2
215	>>=		1	primary-expression	2
215	?		1	primary-expression	2
215	[		1	primary-expression	2
215	]		1	primary-expression	2
215	^		1	primary-expression	2
215	^=		1	primary-expression	2
215	_KULV_END_		1	primary-expression	2
215	auto		1	primary-expression	2
215	break		1	primary-expression	2
215	case		1	primary-expression	2
215	char		1	primary-expression	2
215	character-constant		1	primary-expression	2
215	const		1	primary-expression	2
215	continue		1	primary-expression	2
215	default		1	primary-expression	2
215	do		1	primary-expression	2
215	double		1	primary-expression	2
215	else		1	primary-expression	2
215	enumeration-constant		1	primary-expression	2
215	extern		1	primary-expression	2
215	float		1	primary-expression	2
215	floating-constant		1	primary-expression	2
215	for		1	primary-expression	2
215	goto		1	primary-expression	2
215	identifier		1	primary-expression	2
215	if		1	primary-expression	2
215	int		1	primary-expression	2
215	integer-constant		1	primary-expression	2
215	long		1	primary-expression	2
215	register		1	primary-expression	2
215	return		1	primary-expression	2
215	short		1	primary-expression	2
215	signed		1	primary-expression	2
215	sizeof		1	primary-expression	2
215	static		1	primary-expression	2
215	string-constant		1	primary-expression	2
215	switch		1	primary-expression	2
215	typedef		1	primary-expression	2
215	unsigned		1	primary-expression	2
215	void		1	primary-expression	2
215	volatile		1	primary-expression	2
215	while		1	primary-expression	2
215	{		1	primary-expression	2
215	|		1	primary-expression	2
215	|=		1	primary-expression	2
215	||		1	primary-expression	2
215	}		1	primary-expression	2
215	~		1	primary-expression	2
279	!		0	62
279	&		0	63
279	(		0	64
279	)		0	302
279	*		0	65
279	+		0	66
279	++		0	67
279	-		0	68
279	--		0	69
279	character-constant		0	77
279	enumeration-constant		0	85
279	floating-constant		0	90
279	identifier		0	129
279	integer-constant		0	96
279	sizeof		0	109
279	string-constant		0	112
279	~		0	118
32	(		1	pointer	2
32	)		1	pointer	2
32	*		1	pointer	2
32	,		1	pointer	2
32	[		1	pointer	2
32	const		1	pointer	2
32	identifier		1	pointer	2
32	volatile		1	pointer	2
96	!		1	constant	0
96	!=		1	constant	0
96	%		1	constant	0
96	%=		1	constant	0
96	&		1	constant	0
96	&&		1	constant	0
96	&=		1	constant	0
96	(		1	constant	0
96	)		1	constant	0
96	*		1	constant	0
96	*=		1	constant	0
96	+		1	constant	0
96	++		1	constant	0
96	+=		1	constant	0
96	,		1	constant	0
96	-		1	constant	0
96	--		1	constant	0
96	-=		1	constant	0
96	->		1	constant	0
96	/		1	constant	0
96	/=		1	constant	0
96	:		1	constant	0
96	;		1	constant	0
96	<		1	constant	0
96	<<		1	constant	0
96	<<=		1	constant	0
96	<=		1	constant	0
96	=		1	constant	0
96	==		1	constant	0
96	>		1	constant	0
96	>=		1	constant	0
96	>>		1	constant	0
96	>>=		1	constant	0
96	?		1	constant	0
96	[		1	constant	0
96	]		1	constant	0
96	^		1	constant	0
96	^=		1	constant	0
96	_KULV_END_		1	constant	0
96	auto		1	constant	0
96	break		1	constant	0
96	case		1	constant	0
96	char		1	constant	0
96	character-constant		1	constant	0
96	const		1	constant	0
96	continue		1	constant	0
96	default		1	constant	0
96	do		1	constant	0
96	double		1	constant	0
96	else		1	constant	0
96	enumeration-constant		1	constant	0
96	extern		1	constant	0
96	float		1	constant	0
96	floating-constant		1	constant	0
96	for		1	constant	0
96	goto		1	constant	0
96	identifier		1	constant	0
96	if		1	constant	0
96	int		1	constant	0
96	integer-constant		1	constant	0
96	long		1	constant	0
96	register		1	constant	0
96	return		1	constant	0
96	short		1	constant	0
96	signed		1	constant	0
96	sizeof		1	constant	0
96	static		1	constant	0
96	string-constant		1	constant	0
96	switch		1	constant	0
96	typedef		1	constant	0
96	unsigned		1	constant	0
96	void		1	constant	0
96	volatile		1	constant	0
96	while		1	constant	0
96	{		1	constant	0
96	|		1	constant	0
96	|=		1	constant	0
96	||		1	constant	0
96	}		1	constant	0
96	~		1	constant	0
160	;		0	235
224	!		1	additive-expression	2
224	!=		1	additive-expression	2
224	%		0	167
224	%=		1	additive-expression	2
224	&		1	additive-expression	2
224	&&		1	additive-expression	2
224	&=		1	additive-expression	2
224	(		1	additive-expression	2
224	)		1	additive-expression	2
224	*		0	168
224	*=		1	additive-expression	2
224	+		1	additive-expression	2
224	++		1	additive-expression	2
224	+=		1	additive-expression	2
224	,		1	additive-expression	2
224	-		1	additive-expression	2
224	--		1	additive-expression	2
224	-=		1	additive-expression	2
224	->		1	additive-expression	2
224	/		0	169
224	/=		1	additive-expression	2
224	:		1	additive-expression	2
224	;		1	additive-expression	2
224	<		1	additive-expression	2
224	<<		1	additive-expression	2
224	<<=		1	additive-expression	2
224	<=		1	additive-expression	2
224	=		1	additive-expression	2
224	==		1	additive-expression	2
224	>		1	additive-expression	2
224	>=		1	additive-expression	2
224	>>		1	additive-expression	2
224	>>=		1	additive-expression	2
224	?		1	additive-expression	2
224	[		1	additive-expression	2
224	]		1	additive-expression	2
224	^		1	additive-expression	2
224	^=		1	additive-expression	2
224	_KULV_END_		1	additive-expression	2
224	auto		1	additive-expression	2
224	break		1	additive-expression	2
224	case		1	additive-expression	2
224	char		1	additive-expression	2
224	character-constant		1	additive-expression	2
224	const		1	additive-expression	2
224	continue		1	additive-expression	2
224	default		1	additive-expression	2
224	do		1	additive-expression	2
224	double		1	additive-expression	2
224	else		1	additive-expression	2
224	enumeration-constant		1	additive-expression	2
224	extern		1	additive-expression	2
224	float		1	additive-expression	2
224	floating-constant		1	additive-expression	2
224	for		1	additive-expression	2
224	goto		1	additive-expression	2
224	identifier		1	additive-expression	2
224	if		1	additive-expression	2
224	int		1	additive-expression	2
224	integer-constant		1	additive-expression	2
224	long		1	additive-expression	2
224	register		1	additive-expression	2
224	return		1	additive-expression	2
224	short		1	additive-expression	2
224	signed		1	additive-expression	2
224	sizeof		1	additive-expression	2
224	static		1	additive-expression	2
224	string-constant		1	additive-expression	2
224	switch		1	additive-expression	2
224	typedef		1	additive-expression	2
224	unsigned		1	additive-expression	2
224	void		1	additive-expression	2
224	volatile		1	additive-expression	2
224	while		1	additive-expression	2
224	{		1	additive-expression	2
224	|		1	additive-expression	2
224	|=		1	additive-expression	2
224	||		1	additive-expression	2
224	}		1	additive-expression	2
224	~		1	additive-expression	2
288	(		1	direct-abstract-declarator	0
288	)		1	direct-abstract-declarator	0
288	,		1	direct-abstract-declarator	0
288	[		1	direct-abstract-declarator	0
9	!		1	declarator	0
9	%=		1	declarator	0
9	&		1	declarator	0
9	&=		1	declarator	0
9	(		0	44
9	)		1	declarator	0
9	*		1	declarator	0
9	*=		1	declarator	0
9	+		1	declarator	0
9	++		1	declarator	0
9	+=		1	declarator	0
9	,		1	declarator	0
9	-		1	declarator	0
9	--		1	declarator	0
9	-=		1	declarator	0
9	/=		1	declarator	0
9	;		1	declarator	0
9	<<=		1	declarator	0
9	=		1	declarator	0
9	>>=		1	declarator	0
9	[		0	45
9	^=		1	declarator	0
9	_KULV_END_		1	declarator	0
9	auto		1	declarator	0
9	break		1	declarator	0
9	case		1	declarator	0
9	char		1	declarator	0
9	character-constant		1	declarator	0
9	const		1	declarator	0
9	continue		1	declarator	0
9	default		1	declarator	0
9	do		1	declarator	0
9	double		1	declarator	0
9	else		1	declarator	0
9	enumeration-constant		1	declarator	0
9	extern		1	declarator	0
9	float		1	declarator	0
9	floating-constant		1	declarator	0
9	for		1	declarator	0
9	goto		1	declarator	0
9	identifier		1	declarator	0
9	if		1	declarator	0
9	int		1	declarator	0
9	integer-constant		1	declarator	0
9	long		1	declarator	0
9	register		1	declarator	0
9	return		1	declarator	0
9	short		1	declarator	0
9	signed		1	declarator	0
9	sizeof		1	declarator	0
9	static		1	declarator	0
9	string-constant		1	declarator	0
9	switch		1	declarator	0
9	typedef		1	declarator	0
9	unsigned		1	declarator	0
9	void		1	declarator	0
9	volatile		1	declarator	0
9	while		1	declarator	0
9	{		1	declarator	0
9	|=		1	declarator	0
9	}		1	declarator	0
9	~		1	declarator	0
73	)		1	expression	0
73	,		1	expression	0
73	:		1	expression	0
73	;		1	expression	0
73	]		1	expression	0
137	)		0	216
201	!		0	62
201	&		0	63
201	(		0	64
201	*		0	65
201	+		0	66
201	++		0	67
201	-		0	68
201	--		0	69
201	character-constant		0	77
201	enumeration-constant		0	85
201	floating-constant		0	90
201	identifier		0	129
201	integer-constant		0	96
201	sizeof		0	109
201	string-constant		0	112
201	~		0	118
265	]		0	290
329	!		1	iteration-statement	8
329	%=		1	iteration-statement	8
329	&		1	iteration-statement	8
329	&=		1	iteration-statement	8
329	(		1	iteration-statement	8
329	)		1	iteration-statement	8
329	*		1	iteration-statement	8
329	*=		1	iteration-statement	8
329	+		1	iteration-statement	8
329	++		1	iteration-statement	8
329	+=		1	iteration-statement	8
329	,		1	iteration-statement	8
329	-		1	iteration-statement	8
329	--		1	iteration-statement	8
329	-=		1	iteration-statement	8
329	/=		1	iteration-statement	8
329	;		1	iteration-statement	8
329	<<=		1	iteration-statement	8
329	=		1	iteration-statement	8
329	>>=		1	iteration-statement	8
329	^=		1	iteration-statement	8
329	_KULV_END_		1	iteration-statement	8
329	auto		1	iteration-statement	8
329	break		1	iteration-statement	8
329	case		1	iteration-statement	8
329	char		1	iteration-statement	8
329	character-constant		1	iteration-statement	8
329	const		1	iteration-statement	8
329	continue		1	iteration-statement	8
329	default		1	iteration-statement	8
329	do		1	iteration-statement	8
329	double		1	iteration-statement	8
329	else		1	iteration-statement	8
329	enumeration-constant		1	iteration-statement	8
329	extern		1	iteration-statement	8
329	float		1	iteration-statement	8
329	floating-constant		1	iteration-statement	8
329	for		1	iteration-statement	8
329	goto		1	iteration-statement	8
329	identifier		1	iteration-statement	8
329	if		1	iteration-statement	8
329	int		1	iteration-statement	8
329	integer-constant		1	iteration-statement	8
329	long		1	iteration-statement	8
329	register		1	iteration-statement	8
329	return		1	iteration-statement	8
329	short		1	iteration-statement	8
329	signed		1	iteration-statement	8
329	sizeof		1	iteration-statement	8
329	static		1	iteration-statement	8
329	string-constant		1	iteration-statement	8
329	switch		1	iteration-statement	8
329	typedef		1	iteration-statement	8
329	unsigned		1	iteration-statement	8
329	void		1	iteration-statement	8
329	volatile		1	iteration-statement	8
329	while		1	iteration-statement	8
329	{		1	iteration-statement	8
329	|=		1	iteration-statement	8
329	}		1	iteration-statement	8
329	~		1	iteration-statement	8
18	(		0	1
18	identifier		0	15
82	!		0	62
82	&		0	63
82	(		0	64
82	*		0	65
82	+		0	66
82	++		0	67
82	-		0	68
82	--		0	69
82	;		0	70
82	auto		0	3
82	break		0	74
82	case		0	75
82	char		0	4
82	character-constant		0	77
82	const		0	5
82	continue		0	81
82	default		0	83
82	do		0	84
82	double		0	10
82	enumeration-constant		0	85
82	extern		0	11
82	float		0	13
82	floating-constant		0	90
82	for		0	91
82	goto		0	92
82	identifier		0	93
82	if		0	94
82	int		0	16
82	integer-constant		0	96
82	long		0	17
82	register		0	19
82	return		0	106
82	short		0	20
82	signed		0	21
82	sizeof		0	109
82	static		0	22
82	string-constant		0	112
82	switch		0	113
82	typedef		0	27
82	unsigned		0	28
82	void		0	29
82	volatile		0	30
82	while		0	116
82	{		0	43
82	}		0	151
82	~		0	118
146	!		0	62
146	&		0	63
146	(		0	64
146	*		0	65
146	+		0	66
146	++		0	67
146	-		0	68
146	--		0	69
146	character-constant		0	77
146	enumeration-constant		0	85
146	floating-constant		0	90
146	identifier		0	129
146	integer-constant		0	96
146	sizeof		0	109
146	string-constant		0	112
146	~		0	118
210	!		1	direct-declarator	4
210	%=		1	direct-declarator	4
210	&		1	direct-declarator	4
210	&=		1	direct-declarator	4
210	(		1	direct-declarator	4
210	)		1	direct-declarator	4
210	*		1	direct-declarator	4
210	*=		1	direct-declarator	4
210	+		1	direct-declarator	4
210	++		1	direct-declarator	4
210	+=		1	direct-declarator	4
210	,		1	direct-declarator	4
210	-		1	direct-declarator	4
210	--		1	direct-declarator	4
210	-=		1	direct-declarator	4
210	/=		1	direct-declarator	4
210	;		1	direct-declarator	4
210	<<=		1	direct-declarator	4
210	=		1	direct-declarator	4
210	>>=		1	direct-declarator	4
210	[		1	direct-declarator	4
210	^=		1	direct-declarator	4
210	_KULV_END_		1	direct-declarator	4
210	auto		1	direct-declarator	4
210	break		1	direct-declarator	4
210	case		1	direct-declarator	4
210	char		1	direct-declarator	4
210	character-constant		1	direct-declarator	4
210	const		1	direct-declarator	4
210	continue		1	direct-declarator	4
210	default		1	direct-declarator	4
210	do		1	direct-declarator	4
210	double		1	direct-declarator	4
210	else		1	direct-declarator	4
210	enumeration-constant		1	direct-declarator	4
210	extern		1	direct-declarator	4
210	float		1	direct-declarator	4
210	floating-constant		1	direct-declarator	4
210	for		1	direct-declarator	4
210	goto		1	direct-declarator	4
210	identifier		1	direct-declarator	4
210	if		1	direct-declarator	4
210	int		1	direct-declarator	4
210	integer-constant		1	direct-declarator	4
210	long		1	direct-declarator	4
210	register		1	direct-declarator	4
210	return		1	direct-declarator	4
210	short		1	direct-declarator	4
210	signed		1	direct-declarator	4
210	sizeof		1	direct-declarator	4
210	static		1	direct-declarator	4
210	string-constant		1	direct-declarator	4
210	switch		1	direct-declarator	4
210	typedef		1	direct-declarator	4
210	unsigned		1	direct-declarator	4
210	void		1	direct-declarator	4
210	volatile		1	direct-declarator	4
210	while		1	direct-declarator	4
210	{		1	direct-declarator	4
210	|=		1	direct-declarator	4
210	}		1	direct-declarator	4
210	~		1	direct-declarator	4
274	!		1	cast-expression	1
274	!=		1	cast-expression	1
274	%		1	cast-expression	1
274	%=		1	cast-expression	1
274	&		1	cast-expression	1
274	&&		1	cast-expression	1
274	&=		1	cast-expression	1
274	(		1	cast-expression	1
274	)		1	cast-expression	1
274	*		1	cast-expression	1
274	*=		1	cast-expression	1
274	+		1	cast-expression	1
274	++		1	cast-expression	1
274	+=		1	cast-expression	1
274	,		1	cast-expression	1
274	-		1	cast-expression	1
274	--		1	cast-expression	1
274	-=		1	cast-expression	1
274	->		1	cast-expression	1
274	/		1	cast-expression	1
274	/=		1	cast-expression	1
274	:		1	cast-expression	1
274	;		1	cast-expression	1
274	<		1	cast-expression	1
274	<<		1	cast-expression	1
274	<<=		1	cast-expression	1
274	<=		1	cast-expression	1
274	=		1	cast-expression	1
274	==		1	cast-expression	1
274	>		1	cast-expression	1
274	>=		1	cast-expression	1
274	>>		1	cast-expression	1
274	>>=		1	cast-expression	1
274	?		1	cast-expression	1
274	[		1	cast-expression	1
274	]		1	cast-expression	1
274	^		1	cast-expression	1
274	^=		1	cast-expression	1
274	_KULV_END_		1	cast-expression	1
274	auto		1	cast-expression	1
274	break		1	cast-expression	1
274	case		1	cast-expression	1
274	char		1	cast-expression	1
274	character-constant		1	cast-expression	1
274	const		1	cast-expression	1
274	continue		1	cast-expression	1
274	default		1	cast-expression	1
274	do		1	cast-expression	1
274	double		1	cast-expression	1
274	else		1	cast-expression	1
274	enumeration-constant		1	cast-expression	1
274	extern		1	cast-expression	1
274	float		1	cast-expression	1
274	floating-constant		1	cast-expression	1
274	for		1	cast-expression	1
274	goto		1	cast-expression	1
274	identifier		1	cast-expression	1
274	if		1	cast-expression	1
274	int		1	cast-expression	1
274	integer-constant		1	cast-expression	1
274	long		1	cast-expression	1
274	register		1	cast-expression	1
274	return		1	cast-expression	1
274	short		1	cast-expression	1
274	signed		1	cast-expression	1
274	sizeof		1	cast-expression	1
274	static		1	cast-expression	1
274	string-constant		1	cast-expression	1
274	switch		1	cast-expression	1
274	typedef		1	cast-expression	1
274	unsigned		1	cast-expression	1
274	void		1	cast-expression	1
274	volatile		1	cast-expression	1
274	while		1	cast-expression	1
274	{		1	cast-expression	1
274	|		1	cast-expression	1
274	|=		1	cast-expression	1
274	||		1	cast-expression	1
274	}		1	cast-expression	1
274	~		1	cast-expression	1
59	!		1	declaration-list	1
59	%=		1	declaration-list	1
59	&		1	declaration-list	1
59	&=		1	declaration-list	1
59	(		1	declaration-list	1
59	)		1	declaration-list	1
59	*		1	declaration-list	1
59	*=		1	declaration-list	1
59	+		1	declaration-list	1
59	++		1	declaration-list	1
59	+=		1	declaration-list	1
59	,		1	declaration-list	1
59	-		1	declaration-list	1
59	--		1	declaration-list	1
59	-=		1	declaration-list	1
59	/=		1	declaration-list	1
59	;		1	declaration-list	1
59	<<=		1	declaration-list	1
59	=		1	declaration-list	1
59	>>=		1	declaration-list	1
59	^=		1	declaration-list	1
59	_KULV_END_		1	declaration-list	1
59	auto		1	declaration-list	1
59	break		1	declaration-list	1
59	case		1	declaration-list	1
59	char		1	declaration-list	1
59	character-constant		1	declaration-list	1
59	const		1	declaration-list	1
59	continue		1	declaration-list	1
59	default		1	declaration-list	1
59	do		1	declaration-list	1
59	double		1	declaration-list	1
59	else		1	declaration-list	1
59	enumeration-constant		1	declaration-list	1
59	extern		1	declaration-list	1
59	float		1	declaration-list	1
59	floating-constant		1	declaration-list	1
59	for		1	declaration-list	1
59	goto		1	declaration-list	1
59	identifier		1	declaration-list	1
59	if		1	declaration-list	1
59	int		1	declaration-list	1
59	integer-constant		1	declaration-list	1
59	long		1	declaration-list	1
59	register		1	declaration-list	1
59	return		1	declaration-list	1
59	short		1	declaration-list	1
59	signed		1	declaration-list	1
59	sizeof		1	declaration-list	1
59	static		1	declaration-list	1
59	string-constant		1	declaration-list	1
59	switch		1	declaration-list	1
59	typedef		1	declaration-list	1
59	unsigned		1	declaration-list	1
59	void		1	declaration-list	1
59	volatile		1	declaration-list	1
59	while		1	declaration-list	1
59	{		1	declaration-list	1
59	|=		1	declaration-list	1
59	}		1	declaration-list	1
59	~		1	declaration-list	1
123	)		1	identifier-list	0
123	,		1	identifier-list	0
187	!		0	62
187	&		0	63
187	(		0	64
187	*		0	65
187	+		0	66
187	++		0	67
187	-		0	68
187	--		0	69
187	character-constant		0	77
187	enumeration-constant		0	85
187	floating-constant		0	90
187	identifier		0	129
187	integer-constant		0	96
187	sizeof		0	109
187	string-constant		0	112
187	~		0	118
251	!		1	relational-expression	3
251	!=		1	relational-expression	3
251	%		1	relational-expression	3
251	%=		1	relational-expression	3
251	&		1	relational-expression	3
251	&&		1	relational-expression	3
251	&=		1	relational-expression	3
251	(		1	relational-expression	3
251	)		1	relational-expression	3
251	*		1	relational-expression	3
251	*=		1	relational-expression	3
251	+		1	relational-expression	3
251	++		1	relational-expression	3
251	+=		1	relational-expression	3
251	,		1	relational-expression	3
251	-		1	relational-expression	3
251	--		1	relational-expression	3
251	-=		1	relational-expression	3
251	->		1	relational-expression	3
251	/		1	relational-expression	3
251	/=		1	relational-expression	3
251	:		1	relational-expression	3
251	;		1	relational-expression	3
251	<		1	relational-expression	3
251	<<		0	181
251	<<=		1	relational-expression	3
251	<=		1	relational-expression	3
251	=		1	relational-expression	3
251	==		1	relational-expression	3
251	>		1	relational-expression	3
251	>=		1	relational-expression	3
251	>>		0	182
251	>>=		1	relational-expression	3
251	?		1	relational-expression	3
251	[		1	relational-expression	3
251	]		1	relational-expression	3
251	^		1	relational-expression	3
251	^=		1	relational-expression	3
251	_KULV_END_		1	relational-expression	3
251	auto		1	relational-expression	3
251	break		1	relational-expression	3
251	case		1	relational-expression	3
251	char		1	relational-expression	3
251	character-constant		1	relational-expression	3
251	const		1	relational-expression	3
251	continue		1	relational-expression	3
251	default		1	relational-expression	3
251	do		1	relational-expression	3
251	double		1	relational-expression	3
251	else		1	relational-expression	3
251	enumeration-constant		1	relational-expression	3
251	extern		1	relational-expression	3
251	float		1	relational-expression	3
251	floating-constant		1	relational-expression	3
251	for		1	relational-expression	3
251	goto		1	relational-expression	3
251	identifier		1	relational-expression	3
251	if		1	relational-expression	3
251	int		1	relational-expression	3
251	integer-constant		1	relational-expression	3
251	long		1	relational-expression	3
251	register		1	relational-expression	3
251	return		1	relational-expression	3
251	short		1	relational-expression	3
251	signed		1	relational-expression	3
251	sizeof		1	relational-expression	3
251	static		1	relational-expression	3
251	string-constant		1	relational-expression	3
251	switch		1	relational-expression	3
251	typedef		1	relational-expression	3
251	unsigned		1	relational-expression	3
251	void		1	relational-expression	3
251	volatile		1	relational-expression	3
251	while		1	relational-expression	3
251	{		1	relational-expression	3
251	|		1	relational-expression	3
251	|=		1	relational-expression	3
251	||		1	relational-expression	3
251	}		1	relational-expression	3
251	~		1	relational-expression	3
315	!		0	62
315	&		0	63
315	(		0	64
315	*		0	65
315	+		0	66
315	++		0	67
315	-		0	68
315	--		0	69
315	;		0	70
315	break		0	74
315	case		0	75
315	character-constant		0	77
315	continue		0	81
315	default		0	83
315	do		0	84
315	enumeration-constant		0	85
315	floating-constant		0	90
315	for		0	91
315	goto		0	92
315	identifier		0	93
315	if		0	94
315	integer-constant		0	96
315	return		0	106
315	sizeof		0	109
315	string-constant		0	112
315	switch		0	113
315	while		0	116
315	{		0	43
315	~		0	118
4	(		1	type-specifier	1
4	)		1	type-specifier	1
4	*		1	type-specifier	1
4	,		1	type-specifier	1
4	;		1	type-specifier	1
4	[		1	type-specifier	1
4	auto		1	type-specifier	1
4	char		1	type-specifier	1
4	const		1	type-specifier	1
4	double		1	type-specifier	1
4	extern		1	type-specifier	1
4	float		1	type-specifier	1
4	identifier		1	type-specifier	1
4	int		1	type-specifier	1
4	long		1	type-specifier	1
4	register		1	type-specifier	1
4	short		1	type-specifier	1
4	signed		1	type-specifier	1
4	static		1	type-specifier	1
4	typedef		1	type-specifier	1
4	unsigned		1	type-specifier	1
4	void		1	type-specifier	1
4	volatile		1	type-specifier	1
68	!		1	unary-operator	3
68	&		1	unary-operator	3
68	(		1	unary-operator	3
68	*		1	unary-operator	3
68	+		1	unary-operator	3
68	++		1	unary-operator	3
68	-		1	unary-operator	3
68	--		1	unary-operator	3
68	character-constant		1	unary-operator	3
68	enumeration-constant		1	unary-operator	3
68	floating-constant		1	unary-operator	3
68	identifier		1	unary-operator	3
68	integer-constant		1	unary-operator	3
68	sizeof		1	unary-operator	3
68	string-constant		1	unary-operator	3
68	~		1	unary-operator	3
132	!		1	initializer	0
132	%=		1	initializer	0
132	&		1	initializer	0
132	&=		1	initializer	0
132	(		1	initializer	0
132	)		1	initializer	0
132	*		1	initializer	0
132	*=		1	initializer	0
132	+		1	initializer	0
132	++		1	initializer	0
132	+=		1	initializer	0
132	,		1	initializer	0
132	-		1	initializer	0
132	--		1	initializer	0
132	-=		1	initializer	0
132	/=		1	initializer	0
132	;		1	initializer	0
132	<<=		1	initializer	0
132	=		1	initializer	0
132	>>=		1	initializer	0
132	^=		1	initializer	0
132	_KULV_END_		1	initializer	0
132	auto		1	initializer	0
132	break		1	initializer	0
132	case		1	initializer	0
132	char		1	initializer	0
132	character-constant		1	initializer	0
132	const		1	initializer	0
132	continue		1	initializer	0
132	default		1	initializer	0
132	do		1	initializer	0
132	double		1	initializer	0
132	else		1	initializer	0
132	enumeration-constant		1	initializer	0
132	extern		1	initializer	0
132	float		1	initializer	0
132	floating-constant		1	initializer	0
132	for		1	initializer	0
132	goto		1	initializer	0
132	identifier		1	initializer	0
132	if		1	initializer	0
132	int		1	initializer	0
132	integer-constant		1	initializer	0
132	long		1	initializer	0
132	register		1	initializer	0
132	return		1	initializer	0
132	short		1	initializer	0
132	signed		1	initializer	0
132	sizeof		1	initializer	0
132	static		1	initializer	0
132	string-constant		1	initializer	0
132	switch		1	initializer	0
132	typedef		1	initializer	0
132	unsigned		1	initializer	0
132	void		1	initializer	0
132	volatile		1	initializer	0
132	while		1	initializer	0
132	{		1	initializer	0
132	|=		1	initializer	0
132	}		1	initializer	0
132	~		1	initializer	0
196	!		1	assignment-operator	7
196	&		1	assignment-operator	7
196	(		1	assignment-operator	7
196	*		1	assignment-operator	7
196	+		1	assignment-operator	7
196	++		1	assignment-operator	7
196	-		1	assignment-operator	7
196	--		1	assignment-operator	7
196	character-constant		1	assignment-operator	7
196	enumeration-constant		1	assignment-operator	7
196	floating-constant		1	assignment-operator	7
196	identifier		1	assignment-operator	7
196	integer-constant		1	assignment-operator	7
196	sizeof		1	assignment-operator	7
196	string-constant		1	assignment-operator	7
196	~		1	assignment-operator	7
260	)		0	287
260	,		0	157
324	!		0	62
324	&		0	63
324	(		0	64
324	*		0	65
324	+		0	66
324	++		0	67
324	-		0	68
324	--		0	69
324	;		0	70
324	break		0	74
324	case		0	75
324	character-constant		0	77
324	continue		0	81
324	default		0	83
324	do		0	84
324	enumeration-constant		0	85
324	floating-constant		0	90
324	for		0	91
324	goto		0	92
324	identifier		0	93
324	if		0	94
324	integer-constant		0	96
324	return		0	106
324	sizeof		0	109
324	string-constant		0	112
324	switch		0	113
324	while		0	116
324	{		0	43
324	~		0	118
45	!		0	62
45	&		0	63
45	(		0	64
45	*		0	65
45	+		0	66
45	++		0	67
45	-		0	68
45	--		0	69
45	]		0	127
45	character-constant		0	77
45	enumeration-constant		0	85
45	floating-constant		0	90
45	identifier		0	129
45	integer-constant		0	96
45	sizeof		0	109
45	string-constant		0	112
45	~		0	118
109	!		0	62
109	&		0	63
109	(		0	183
109	*		0	65
109	+		0	66
109	++		0	67
109	-		0	68
109	--		0	69
109	character-constant		0	77
109	enumeration-constant		0	85
109	floating-constant		0	90
109	identifier		0	129
109	integer-constant		0	96
109	sizeof		0	109
109	string-constant		0	112
109	~		0	118
173	identifier		0	248
237	)		0	280
237	,		0	157
301	)		0	316
301	,		0	157
54	auto		0	3
54	char		0	4
54	const		0	5
54	double		0	10
54	extern		0	11
54	float		0	13
54	int		0	16
54	long		0	17
54	register		0	19
54	short		0	20
54	signed		0	21
54	static		0	22
54	typedef		0	27
54	unsigned		0	28
54	void		0	29
54	volatile		0	30
54	{		0	43
118	!		1	unary-operator	4
118	&		1	unary-operator	4
118	(		1	unary-operator	4
118	*		1	unary-operator	4
118	+		1	unary-operator	4
118	++		1	unary-operator	4
118	-		1	unary-operator	4
118	--		1	unary-operator	4
118	character-constant		1	unary-operator	4
118	enumeration-constant		1	unary-operator	4
118	floating-constant		1	unary-operator	4
118	identifier		1	unary-operator	4
118	integer-constant		1	unary-operator	4
118	sizeof		1	unary-operator	4
118	string-constant		1	unary-operator	4
118	~		1	unary-operator	4
182	!		0	62
182	&		0	63
182	(		0	64
182	*		0	65
182	+		0	66
182	++		0	67
182	-		0	68
182	--		0	69
182	character-constant		0	77
182	enumeration-constant		0	85
182	floating-constant		0	90
182	identifier		0	129
182	integer-constant		0	96
182	sizeof		0	109
182	string-constant		0	112
182	~		0	118
246	)		1	argument-expression-list	0
246	,		1	argument-expression-list	0
310	;		0	319
31	)		0	51
95	!		1	logical-AND-expression	0
95	!=		1	logical-AND-expression	0
95	%		1	logical-AND-expression	0
95	%=		1	logical-AND-expression	0
95	&		1	logical-AND-expression	0
95	&&		1	logical-AND-expression	0
95	&=		1	logical-AND-expression	0
95	(		1	logical-AND-expression	0
95	)		1	logical-AND-expression	0
95	*		1	logical-AND-expression	0
95	*=		1	logical-AND-expression	0
95	+		1	logical-AND-expression	0
95	++		1	logical-AND-expression	0
95	+=		1	logical-AND-expression	0
95	,		1	logical-AND-expression	0
95	-		1	logical-AND-expression	0
95	--		1	logical-AND-expression	0
95	-=		1	logical-AND-expression	0
95	->		1	logical-AND-expression	0
95	/		1	logical-AND-expression	0
95	/=		1	logical-AND-expression	0
95	:		1	logical-AND-expression	0
95	;		1	logical-AND-expression	0
95	<		1	logical-AND-expression	0
95	<<		1	logical-AND-expression	0
95	<<=		1	logical-AND-expression	0
95	<=		1	logical-AND-expression	0
95	=		1	logical-AND-expression	0
95	==		1	logical-AND-expression	0
95	>		1	logical-AND-expression	0
95	>=		1	logical-AND-expression	0
95	>>		1	logical-AND-expression	0
95	>>=		1	logical-AND-expression	0
95	?		1	logical-AND-expression	0
95	[		1	logical-AND-expression	0
95	]		1	logical-AND-expression	0
95	^		1	logical-AND-expression	0
95	^=		1	logical-AND-expression	0
95	_KULV_END_		1	logical-AND-expression	0
95	auto		1	logical-AND-expression	0
95	break		1	logical-AND-expression	0
95	case		1	logical-AND-expression	0
95	char		1	logical-AND-expression	0
95	character-constant		1	logical-AND-expression	0
95	const		1	logical-AND-expression	0
95	continue		1	logical-AND-expression	0
95	default		1	logical-AND-expression	0
95	do		1	logical-AND-expression	0
95	double		1	logical-AND-expression	0
95	else		1	logical-AND-expression	0
95	enumeration-constant		1	logical-AND-expression	0
95	extern		1	logical-AND-expression	0
95	float		1	logical-AND-expression	0
95	floating-constant		1	logical-AND-expression	0
95	for		1	logical-AND-expression	0
95	goto		1	logical-AND-expression	0
95	identifier		1	logical-AND-expression	0
95	if		1	logical-AND-expression	0
95	int		1	logical-AND-expression	0
95	integer-constant		1	logical-AND-expression	0
95	long		1	logical-AND-expression	0
95	register		1	logical-AND-expression	0
95	return		1	logical-AND-expression	0
95	short		1	logical-AND-expression	0
95	signed		1	logical-AND-expression	0
95	sizeof		1	logical-AND-expression	0
95	static		1	logical-AND-expression	0
95	string-constant		1	logical-AND-expression	0
95	switch		1	logical-AND-expression	0
95	typedef		1	logical-AND-expression	0
95	unsigned		1	logical-AND-expression	0
95	void		1	logical-AND-expression	0
95	volatile		1	logical-AND-expression	0
95	while		1	logical-AND-expression	0
95	{		1	logical-AND-expression	0
95	|		0	163
95	|=		1	logical-AND-expression	0
95	||		1	logical-AND-expression	0
95	}		1	logical-AND-expression	0
95	~		1	logical-AND-expression	0
159	!		0	62
159	&		0	63
159	(		0	64
159	*		0	65
159	+		0	66
159	++		0	67
159	-		0	68
159	--		0	69
159	;		0	234
159	character-constant		0	77
159	enumeration-constant		0	85
159	floating-constant		0	90
159	identifier		0	129
159	integer-constant		0	96
159	sizeof		0	109
159	string-constant		0	112
159	~		0	118
223	!		1	additive-expression	1
223	!=		1	additive-expression	1
223	%		0	167
223	%=		1	additive-expression	1
223	&		1	additive-expression	1
223	&&		1	additive-expression	1
223	&=		1	additive-expression	1
223	(		1	additive-expression	1
223	)		1	additive-expression	1
223	*		0	168
223	*=		1	additive-expression	1
223	+		1	additive-expression	1
223	++		1	additive-expression	1
223	+=		1	additive-expression	1
223	,		1	additive-expression	1
223	-		1	additive-expression	1
223	--		1	additive-expression	1
223	-=		1	additive-expression	1
223	->		1	additive-expression	1
223	/		0	169
223	/=		1	additive-expression	1
223	:		1	additive-expression	1
223	;		1	additive-expression	1
223	<		1	additive-expression	1
223	<<		1	additive-expression	1
223	<<=		1	additive-expression	1
223	<=		1	additive-expression	1
223	=		1	additive-expression	1
223	==		1	additive-expression	1
223	>		1	additive-expression	1
223	>=		1	additive-expression	1
223	>>		1	additive-expression	1
223	>>=		1	additive-expression	1
223	?		1	additive-expression	1
223	[		1	additive-expression	1
223	]		1	additive-expression	1
223	^		1	additive-expression	1
223	^=		1	additive-expression	1
223	_KULV_END_		1	additive-expression	1
223	auto		1	additive-expression	1
223	break		1	additive-expression	1
223	case		1	additive-expression	1
223	char		1	additive-expression	1
223	character-constant		1	additive-expression	1
223	const		1	additive-expression	1
223	continue		1	additive-expression	1
223	default		1	additive-expression	1
223	do		1	additive-expression	1
223	double		1	additive-expression	1
223	else		1	additive-expression	1
223	enumeration-constant		1	additive-expression	1
223	extern		1	additive-expression	1
223	float		1	additive-expression	1
223	floating-constant		1	additive-expression	1
223	for		1	additive-expression	1
223	goto		1	additive-expression	1
223	identifier		1	additive-expression	1
223	if		1	additive-expression	1
223	int		1	additive-expression	1
223	integer-constant		1	additive-expression	1
223	long		1	additive-expression	1
223	register		1	additive-expression	1
223	return		1	additive-expression	1
223	short		1	additive-expression	1
223	signed		1	additive-expression	1
223	sizeof		1	additive-expression	1
223	static		1	additive-expression	1
223	string-constant		1	additive-expression	1
223	switch		1	additive-expression	1
223	typedef		1	additive-expression	1
223	unsigned		1	additive-expression	1
223	void		1	additive-expression	1
223	volatile		1	additive-expression	1
223	while		1	additive-expression	1
223	{		1	additive-expression	1
223	|		1	additive-expression	1
223	|=		1	additive-expression	1
223	||		1	additive-expression	1
223	}		1	additive-expression	1
223	~		1	additive-expression	1
287	!		0	62
287	&		0	63
287	(		0	64
287	*		0	65
287	+		0	66
287	++		0	67
287	-		0	68
287	--		0	69
287	;		0	70
287	break		0	74
287	case		0	75
287	character-constant		0	77
287	continue		0	81
287	default		0	83
287	do		0	84
287	enumeration-constant		0	85
287	floating-constant		0	90
287	for		0	91
287	goto		0	92
287	identifier		0	93
287	if		0	94
287	integer-constant		0	96
287	return		0	106
287	sizeof		0	109
287	string-constant		0	112
287	switch		0	113
287	while		0	116
287	{		0	43
287	~		0	118
40	auto		0	3
40	char		0	4
40	const		0	5
40	double		0	10
40	extern		0	11
40	float		0	13
40	int		0	16
40	long		0	17
40	register		0	19
40	short		0	20
40	signed		0	21
40	static		0	22
40	typedef		0	27
40	unsigned		0	28
40	void		0	29
40	volatile		0	30
40	{		0	43
104	!		1	postfix-expression	0
104	!=		1	postfix-expression	0
104	%		1	postfix-expression	0
104	%=		1	postfix-expression	0
104	&		1	postfix-expression	0
104	&&		1	postfix-expression	0
104	&=		1	postfix-expression	0
104	(		1	postfix-expression	0
104	)		1	postfix-expression	0
104	*		1	postfix-expression	0
104	*=		1	postfix-expression	0
104	+		1	postfix-expression	0
104	++		1	postfix-expression	0
104	+=		1	postfix-expression	0
104	,		1	postfix-expression	0
104	-		1	postfix-expression	0
104	--		1	postfix-expression	0
104	-=		1	postfix-expression	0
104	->		1	postfix-expression	0
104	/		1	postfix-expression	0
104	/=		1	postfix-expression	0
104	:		1	postfix-expression	0
104	;		1	postfix-expression	0
104	<		1	postfix-expression	0
104	<<		1	postfix-expression	0
104	<<=		1	postfix-expression	0
104	<=		1	postfix-expression	0
104	=		1	postfix-expression	0
104	==		1	postfix-expression	0
104	>		1	postfix-expression	0
104	>=		1	postfix-expression	0
104	>>		1	postfix-expression	0
104	>>=		1	postfix-expression	0
104	?		1	postfix-expression	0
104	[		1	postfix-expression	0
104	]		1	postfix-expression	0
104	^		1	postfix-expression	0
104	^=		1	postfix-expression	0
104	_KULV_END_		1	postfix-expression	0
104	auto		1	postfix-expression	0
104	break		1	postfix-expression	0
104	case		1	postfix-expression	0
104	char		1	postfix-expression	0
104	character-constant		1	postfix-expression	0
104	const		1	postfix-expression	0
104	continue		1	postfix-expression	0
104	default		1	postfix-expression	0
104	do		1	postfix-expression	0
104	double		1	postfix-expression	0
104	else		1	postfix-expression	0
104	enumeration-constant		1	postfix-expression	0
104	extern		1	postfix-expression	0
104	float		1	postfix-expression	0
104	floating-constant		1	postfix-expression	0
104	for		1	postfix-expression	0
104	goto		1	postfix-expression	0
104	identifier		1	postfix-expression	0
104	if		1	postfix-expression	0
104	int		1	postfix-expression	0
104	integer-constant		1	postfix-expression	0
104	long		1	postfix-expression	0
104	register		1	postfix-expression	0
104	return		1	postfix-expression	0
104	short		1	postfix-expression	0
104	signed		1	postfix-expression	0
104	sizeof		1	postfix-expression	0
104	static		1	postfix-expression	0
104	string-constant		1	postfix-expression	0
104	switch		1	postfix-expression	0
104	typedef		1	postfix-expression	0
104	unsigned		1	postfix-expression	0
104	void		1	postfix-expression	0
104	volatile		1	postfix-expression	0
104	while		1	postfix-expression	0
104	{		1	postfix-expression	0
104	|		1	postfix-expression	0
104	|=		1	postfix-expression	0
104	||		1	postfix-expression	0
104	}		1	postfix-expression	0
104	~		1	postfix-expression	0
168	!		0	62
168	&		0	63
168	(		0	64
168	*		0	65
168	+		0	66
168	++		0	67
168	-		0	68
168	--		0	69
168	character-constant		0	77
168	enumeration-constant		0	85
168	floating-constant		0	90
168	identifier		0	129
168	integer-constant		0	96
168	sizeof		0	109
168	string-constant		0	112
168	~		0	118
232	!		1	expression	1
232	!=		1	expression	1
232	%		1	expression	1
232	%=		1	expression	1
232	&		1	expression	1
232	&&		1	expression	1
232	&=		1	expression	1
232	(		1	expression	1
232	)		1	expression	1
232	*		1	expression	1
232	*=		1	expression	1
232	+		1	expression	1
232	++		1	expression	1
232	+=		1	expression	1
232	,		1	expression	1
232	-		1	expression	1
232	--		1	expression	1
232	-=		1	expression	1
232	->		1	expression	1
232	/		1	expression	1
232	/=		1	expression	1
232	:		1	expression	1
232	;		1	expression	1
232	<		1	expression	1
232	<<		1	expression	1
232	<<=		1	expression	1
232	<=		1	expression	1
232	=		1	expression	1
232	==		1	expression	1
232	>		1	expression	1
232	>=		1	expression	1
232	>>		1	expression	1
232	>>=		1	expression	1
232	?		1	expression	1
232	[		1	expression	1
232	]		1	expression	1
232	^		1	expression	1
232	^=		1	expression	1
232	_KULV_END_		1	expression	1
232	auto		1	expression	1
232	break		1	expression	1
232	case		1	expression	1
232	char		1	expression	1
232	character-constant		1	expression	1
232	const		1	expression	1
232	continue		1	expression	1
232	default		1	expression	1
232	do		1	expression	1
232	double		1	expression	1
232	else		1	expression	1
232	enumeration-constant		1	expression	1
232	extern		1	expression	1
232	float		1	expression	1
232	floating-constant		1	expression	1
232	for		1	expression	1
232	goto		1	expression	1
232	identifier		1	expression	1
232	if		1	expression	1
232	int		1	expression	1
232	integer-constant		1	expression	1
232	long		1	expression	1
232	register		1	expression	1
232	return		1	expression	1
232	short		1	expression	1
232	signed		1	expression	1
232	sizeof		1	expression	1
232	static		1	expression	1
232	string-constant		1	expression	1
232	switch		1	expression	1
232	typedef		1	expression	1
232	unsigned		1	expression	1
232	void		1	expression	1
232	volatile		1	expression	1
232	while		1	expression	1
232	{		1	expression	1
232	|		1	expression	1
232	|=		1	expression	1
232	||		1	expression	1
232	}		1	expression	1
232	~		1	expression	1
296	!		1	initializer	2
296	%=		1	initializer	2
296	&		1	initializer	2
296	&=		1	initializer	2
296	(		1	initializer	2
296	)		1	initializer	2
296	*		1	initializer	2
296	*=		1	initializer	2
296	+		1	initializer	2
296	++		1	initializer	2
296	+=		1	initializer	2
296	,		1	initializer	2
296	-		1	initializer	2
296	--		1	initializer	2
296	-=		1	initializer	2
296	/=		1	initializer	2
296	;		1	initializer	2
296	<<=		1	initializer	2
296	=		1	initializer	2
296	>>=		1	initializer	2
296	^=		1	initializer	2
296	_KULV_END_		1	initializer	2
296	auto		1	initializer	2
296	break		1	initializer	2
296	case		1	initializer	2
296	char		1	initializer	2
296	character-constant		1	initializer	2
296	const		1	initializer	2
296	continue		1	initializer	2
296	default		1	initializer	2
296	do		1	initializer	2
296	double		1	initializer	2
296	else		1	initializer	2
296	enumeration-constant		1	initializer	2
296	extern		1	initializer	2
296	float		1	initializer	2
296	floating-constant		1	initializer	2
296	for		1	initializer	2
296	goto		1	initializer	2
296	identifier		1	initializer	2
296	if		1	initializer	2
296	int		1	initializer	2
296	integer-constant		1	initializer	2
296	long		1	initializer	2
296	register		1	initializer	2
296	return		1	initializer	2
296	short		1	initializer	2
296	signed		1	initializer	2
296	sizeof		1	initializer	2
296	static		1	initializer	2
296	string-constant		1	initializer	2
296	switch		1	initializer	2
296	typedef		1	initializer	2
296	unsigned		1	initializer	2
296	void		1	initializer	2
296	volatile		1	initializer	2
296	while		1	initializer	2
296	{		1	initializer	2
296	|=		1	initializer	2
296	}		1	initializer	2
296	~		1	initializer	2
49	(		1	declaration-specifiers	5
49	)		1	declaration-specifiers	5
49	*		1	declaration-specifiers	5
49	,		1	declaration-specifiers	5
49	;		1	declaration-specifiers	5
49	[		1	declaration-specifiers	5
49	identifier		1	declaration-specifiers	5
113	(		0	187
177	!		0	62
177	&		0	63
177	(		0	64
177	*		0	65
177	+		0	66
177	++		0	67
177	-		0	68
177	--		0	69
177	character-constant		0	77
177	enumeration-constant		0	85
177	floating-constant		0	90
177	identifier		0	129
177	integer-constant		0	96
177	sizeof		0	109
177	string-constant		0	112
177	~		0	118
241	!		1	logical-OR-expression	1
241	!=		1	logical-OR-expression	1
241	%		1	logical-OR-expression	1
241	%=		1	logical-OR-expression	1
241	&		1	logical-OR-expression	1
241	&&		0	164
241	&=		1	logical-OR-expression	1
241	(		1	logical-OR-expression	1
241	)		1	logical-OR-expression	1
241	*		1	logical-OR-expression	1
241	*=		1	logical-OR-expression	1
241	+		1	logical-OR-expression	1
241	++		1	logical-OR-expression	1
241	+=		1	logical-OR-expression	1
241	,		1	logical-OR-expression	1
241	-		1	logical-OR-expression	1
241	--		1	logical-OR-expression	1
241	-=		1	logical-OR-expression	1
241	->		1	logical-OR-expression	1
241	/		1	logical-OR-expression	1
241	/=		1	logical-OR-expression	1
241	:		1	logical-OR-expression	1
241	;		1	logical-OR-expression	1
241	<		1	logical-OR-expression	1
241	<<		1	logical-OR-expression	1
241	<<=		1	logical-OR-expression	1
241	<=		1	logical-OR-expression	1
241	=		1	logical-OR-expression	1
241	==		1	logical-OR-expression	1
241	>		1	logical-OR-expression	1
241	>=		1	logical-OR-expression	1
241	>>		1	logical-OR-expression	1
241	>>=		1	logical-OR-expression	1
241	?		1	logical-OR-expression	1
241	[		1	logical-OR-expression	1
241	]		1	logical-OR-expression	1
241	^		1	logical-OR-expression	1
241	^=		1	logical-OR-expression	1
241	_KULV_END_		1	logical-OR-expression	1
241	auto		1	logical-OR-expression	1
241	break		1	logical-OR-expression	1
241	case		1	logical-OR-expression	1
241	char		1	logical-OR-expression	1
241	character-constant		1	logical-OR-expression	1
241	const		1	logical-OR-expression	1
241	continue		1	logical-OR-expression	1
241	default		1	logical-OR-expression	1
241	do		1	logical-OR-expression	1
241	double		1	logical-OR-expression	1
241	else		1	logical-OR-expression	1
241	enumeration-constant		1	logical-OR-expression	1
241	extern		1	logical-OR-expression	1
241	float		1	logical-OR-expression	1
241	floating-constant		1	logical-OR-expression	1
241	for		1	logical-OR-expression	1
241	goto		1	logical-OR-expression	1
241	identifier		1	logical-OR-expression	1
241	if		1	logical-OR-expression	1
241	int		1	logical-OR-expression	1
241	integer-constant		1	logical-OR-expression	1
241	long		1	logical-OR-expression	1
241	register		1	logical-OR-expression	1
241	return		1	logical-OR-expression	1
241	short		1	logical-OR-expression	1
241	signed		1	logical-OR-expression	1
241	sizeof		1	logical-OR-expression	1
241	static		1	logical-OR-expression	1
241	string-constant		1	logical-OR-expression	1
241	switch		1	logical-OR-expression	1
241	typedef		1	logical-OR-expression	1
241	unsigned		1	logical-OR-expression	1
241	void		1	logical-OR-expression	1
241	volatile		1	logical-OR-expression	1
241	while		1	logical-OR-expression	1
241	{		1	logical-OR-expression	1
241	|		1	logical-OR-expression	1
241	|=		1	logical-OR-expression	1
241	||		1	logical-OR-expression	1
241	}		1	logical-OR-expression	1
241	~		1	logical-OR-expression	1
305	!		1	argument-expression-list	1
305	!=		1	argument-expression-list	1
305	%		1	argument-expression-list	1
305	%=		1	argument-expression-list	1
305	&		1	argument-expression-list	1
305	&&		1	argument-expression-list	1
305	&=		1	argument-expression-list	1
305	(		1	argument-expression-list	1
305	)		1	argument-expression-list	1
305	*		1	argument-expression-list	1
305	*=		1	argument-expression-list	1
305	+		1	argument-expression-list	1
305	++		1	argument-expression-list	1
305	+=		1	argument-expression-list	1
305	,		1	argument-expression-list	1
305	-		1	argument-expression-list	1
305	--		1	argument-expression-list	1
305	-=		1	argument-expression-list	1
305	->		1	argument-expression-list	1
305	/		1	argument-expression-list	1
305	/=		1	argument-expression-list	1
305	:		1	argument-expression-list	1
305	;		1	argument-expression-list	1
305	<		1	argument-expression-list	1
305	<<		1	argument-expression-list	1
305	<<=		1	argument-expression-list	1
305	<=		1	argument-expression-list	1
305	=		1	argument-expression-list	1
305	==		1	argument-expression-list	1
305	>		1	argument-expression-list	1
305	>=		1	argument-expression-list	1
305	>>		1	argument-expression-list	1
305	>>=		1	argument-expression-list	1
305	?		1	argument-expression-list	1
305	[		1	argument-expression-list	1
305	]		1	argument-expression-list	1
305	^		1	argument-expression-list	1
305	^=		1	argument-expression-list	1
305	_KULV_END_		1	argument-expression-list	1
305	auto		1	argument-expression-list	1
305	break		1	argument-expression-list	1
305	case		1	argument-expression-list	1
305	char		1	argument-expression-list	1
305	character-constant		1	argument-expression-list	1
305	const		1	argument-expression-list	1
305	continue		1	argument-expression-list	1
305	default		1	argument-expression-list	1
305	do		1	argument-expression-list	1
305	double		1	argument-expression-list	1
305	else		1	argument-expression-list	1
305	enumeration-constant		1	argument-expression-list	1
305	extern		1	argument-expression-list	1
305	float		1	argument-expression-list	1
305	floating-constant		1	argument-expression-list	1
305	for		1	argument-expression-list	1
305	goto		1	argument-expression-list	1
305	identifier		1	argument-expression-list	1
305	if		1	argument-expression-list	1
305	int		1	argument-expression-list	1
305	integer-constant		1	argument-expression-list	1
305	long		1	argument-expression-list	1
305	register		1	argument-expression-list	1
305	return		1	argument-expression-list	1
305	short		1	argument-expression-list	1
305	signed		1	argument-expression-list	1
305	sizeof		1	argument-expression-list	1
305	static		1	argument-expression-list	1
305	string-constant		1	argument-expression-list	1
305	switch		1	argument-expression-list	1
305	typedef		1	argument-expression-list	1
305	unsigned		1	argument-expression-list	1
305	void		1	argument-expression-list	1
305	volatile		1	argument-expression-list	1
305	while		1	argument-expression-list	1
305	{		1	argument-expression-list	1
305	|		1	argument-expression-list	1
305	|=		1	argument-expression-list	1
305	||		1	argument-expression-list	1
305	}		1	argument-expression-list	1
305	~		1	argument-expression-list	1
26	(		1	declaration-specifiers	2
26	)		1	declaration-specifiers	2
26	*		1	declaration-specifiers	2
26	,		1	declaration-specifiers	2
26	;		1	declaration-specifiers	2
26	[		1	declaration-specifiers	2
26	auto		0	3
26	char		0	4
26	const		0	5
26	double		0	10
26	extern		0	11
26	float		0	13
26	identifier		1	declaration-specifiers	2
26	int		0	16
26	long		0	17
26	register		0	19
26	short		0	20
26	signed		0	21
26	static		0	22
26	typedef		0	27
26	unsigned		0	28
26	void		0	29
26	volatile		0	30
90	!		1	constant	2
90	!=		1	constant	2
90	%		1	constant	2
90	%=		1	constant	2
90	&		1	constant	2
90	&&		1	constant	2
90	&=		1	constant	2
90	(		1	constant	2
90	)		1	constant	2
90	*		1	constant	2
90	*=		1	constant	2
90	+		1	constant	2
90	++		1	constant	2
90	+=		1	constant	2
90	,		1	constant	2
90	-		1	constant	2
90	--		1	constant	2
90	-=		1	constant	2
90	->		1	constant	2
90	/		1	constant	2
90	/=		1	constant	2
90	:		1	constant	2
90	;		1	constant	2
90	<		1	constant	2
90	<<		1	constant	2
90	<<=		1	constant	2
90	<=		1	constant	2
90	=		1	constant	2
90	==		1	constant	2
90	>		1	constant	2
90	>=		1	constant	2
90	>>		1	constant	2
90	>>=		1	constant	2
90	?		1	constant	2
90	[		1	constant	2
90	]		1	constant	2
90	^		1	constant	2
90	^=		1	constant	2
90	_KULV_END_		1	constant	2
90	auto		1	constant	2
90	break		1	constant	2
90	case		1	constant	2
90	char		1	constant	2
90	character-constant		1	constant	2
90	const		1	constant	2
90	continue		1	constant	2
90	default		1	constant	2
90	do		1	constant	2
90	double		1	constant	2
90	else		1	constant	2
90	enumeration-constant		1	constant	2
90	extern		1	constant	2
90	float		1	constant	2
90	floating-constant		1	constant	2
90	for		1	constant	2
90	goto		1	constant	2
90	identifier		1	constant	2
90	if		1	constant	2
90	int		1	constant	2
90	integer-constant		1	constant	2
90	long		1	constant	2
90	register		1	constant	2
90	return		1	constant	2
90	short		1	constant	2
90	signed		1	constant	2
90	sizeof		1	constant	2
90	static		1	constant	2
90	string-constant		1	constant	2
90	switch		1	constant	2
90	typedef		1	constant	2
90	unsigned		1	constant	2
90	void		1	constant	2
90	volatile		1	constant	2
90	while		1	constant	2
90	{		1	constant	2
90	|		1	constant	2
90	|=		1	constant	2
90	||		1	constant	2
90	}		1	constant	2
90	~		1	constant	2
154	!		0	62
154	&		0	63
154	(		0	64
154	*		0	65
154	+		0	66
154	++		0	67
154	-		0	68
154	--		0	69
154	character-constant		0	77
154	enumeration-constant		0	85
154	floating-constant		0	90
154	identifier		0	129
154	integer-constant		0	96
154	sizeof		0	109
154	string-constant		0	112
154	~		0	118
218	(		0	217
218	)		1	abstract-declarator	0
218	[		0	203
282	!		0	62
282	&		0	63
282	(		0	64
282	*		0	65
282	+		0	66
282	++		0	67
282	-		0	68
282	--		0	69
282	character-constant		0	77
282	enumeration-constant		0	85
282	floating-constant		0	90
282	identifier		0	129
282	integer-constant		0	96
282	sizeof		0	109
282	string-constant		0	112
282	~		0	118
35	!		1	declaration	0
35	%=		1	declaration	0
35	&		1	declaration	0
35	&=		1	declaration	0
35	(		1	declaration	0
35	)		1	declaration	0
35	*		1	declaration	0
35	*=		1	declaration	0
35	+		1	declaration	0
35	++		1	declaration	0
35	+=		1	declaration	0
35	,		1	declaration	0
35	-		1	declaration	0
35	--		1	declaration	0
35	-=		1	declaration	0
35	/=		1	declaration	0
35	;		1	declaration	0
35	<<=		1	declaration	0
35	=		1	declaration	0
35	>>=		1	declaration	0
35	^=		1	declaration	0
35	_KULV_END_		1	declaration	0
35	auto		1	declaration	0
35	break		1	declaration	0
35	case		1	declaration	0
35	char		1	declaration	0
35	character-constant		1	declaration	0
35	const		1	declaration	0
35	continue		1	declaration	0
35	default		1	declaration	0
35	do		1	declaration	0
35	double		1	declaration	0
35	else		1	declaration	0
35	enumeration-constant		1	declaration	0
35	extern		1	declaration	0
35	float		1	declaration	0
35	floating-constant		1	declaration	0
35	for		1	declaration	0
35	goto		1	declaration	0
35	identifier		1	declaration	0
35	if		1	declaration	0
35	int		1	declaration	0
35	integer-constant		1	declaration	0
35	long		1	declaration	0
35	register		1	declaration	0
35	return		1	declaration	0
35	short		1	declaration	0
35	signed		1	declaration	0
35	sizeof		1	declaration	0
35	static		1	declaration	0
35	string-constant		1	declaration	0
35	switch		1	declaration	0
35	typedef		1	declaration	0
35	unsigned		1	declaration	0
35	void		1	declaration	0
35	volatile		1	declaration	0
35	while		1	declaration	0
35	{		1	declaration	0
35	|=		1	declaration	0
35	}		1	declaration	0
35	~		1	declaration	0
99	!		1	statement	0
99	%=		1	statement	0
99	&		1	statement	0
99	&=		1	statement	0
99	(		1	statement	0
99	)		1	statement	0
99	*		1	statement	0
99	*=		1	statement	0
99	+		1	statement	0
99	++		1	statement	0
99	+=		1	statement	0
99	,		1	statement	0
99	-		1	statement	0
99	--		1	statement	0
99	-=		1	statement	0
99	/=		1	statement	0
99	;		1	statement	0
99	<<=		1	statement	0
99	=		1	statement	0
99	>>=		1	statement	0
99	^=		1	statement	0
99	_KULV_END_		1	statement	0
99	auto		1	statement	0
99	break		1	statement	0
99	case		1	statement	0
99	char		1	statement	0
99	character-constant		1	statement	0
99	const		1	statement	0
99	continue		1	statement	0
99	default		1	statement	0
99	do		1	statement	0
99	double		1	statement	0
99	else		1	statement	0
99	enumeration-constant		1	statement	0
99	extern		1	statement	0
99	float		1	statement	0
99	floating-constant		1	statement	0
99	for		1	statement	0
99	goto		1	statement	0
99	identifier		1	statement	0
99	if		1	statement	0
99	int		1	statement	0
99	integer-constant		1	statement	0
99	long		1	statement	0
99	register		1	statement	0
99	return		1	statement	0
99	short		1	statement	0
99	signed		1	statement	0
99	sizeof		1	statement	0
99	static		1	statement	0
99	string-constant		1	statement	0
99	switch		1	statement	0
99	typedef		1	statement	0
99	unsigned		1	statement	0
99	void		1	statement	0
99	volatile		1	statement	0
99	while		1	statement	0
99	{		1	statement	0
99	|=		1	statement	0
99	}		1	statement	0
99	~		1	statement	0
163	!		0	62
163	&		0	63
163	(		0	64
163	*		0	65
163	+		0	66
163	++		0	67
163	-		0	68
163	--		0	69
163	character-constant		0	77
163	enumeration-constant		0	85
163	floating-constant		0	90
163	identifier		0	129
163	integer-constant		0	96
163	sizeof		0	109
163	string-constant		0	112
163	~		0	118
227	!		1	labeled-statement	2
227	%=		1	labeled-statement	2
227	&		1	labeled-statement	2
227	&=		1	labeled-statement	2
227	(		1	labeled-statement	2
227	)		1	labeled-statement	2
227	*		1	labeled-statement	2
227	*=		1	labeled-statement	2
227	+		1	labeled-statement	2
227	++		1	labeled-statement	2
227	+=		1	labeled-statement	2
227	,		1	labeled-statement	2
227	-		1	labeled-statement	2
227	--		1	labeled-statement	2
227	-=		1	labeled-statement	2
227	/=		1	labeled-statement	2
227	;		1	labeled-statement	2
227	<<=		1	labeled-statement	2
227	=		1	labeled-statement	2
227	>>=		1	labeled-statement	2
227	^=		1	labeled-statement	2
227	_KULV_END_		1	labeled-statement	2
227	auto		1	labeled-statement	2
227	break		1	labeled-statement	2
227	case		1	labeled-statement	2
227	char		1	labeled-statement	2
227	character-constant		1	labeled-statement	2
227	const		1	labeled-statement	2
227	continue		1	labeled-statement	2
227	default		1	labeled-statement	2
227	do		1	labeled-statement	2
227	double		1	labeled-statement	2
227	else		1	labeled-statement	2
227	enumeration-constant		1	labeled-statement	2
227	extern		1	labeled-statement	2
227	float		1	labeled-statement	2
227	floating-constant		1	labeled-statement	2
227	for		1	labeled-statement	2
227	goto		1	labeled-statement	2
227	identifier		1	labeled-statement	2
227	if		1	labeled-statement	2
227	int		1	labeled-statement	2
227	integer-constant		1	labeled-statement	2
227	long		1	labeled-statement	2
227	register		1	labeled-statement	2
227	return		1	labeled-statement	2
227	short		1	labeled-statement	2
227	signed		1	labeled-statement	2
227	sizeof		1	labeled-statement	2
227	static		1	labeled-statement	2
227	string-constant		1	labeled-statement	2
227	switch		1	labeled-statement	2
227	typedef		1	labeled-statement	2
227	unsigned		1	labeled-statement	2
227	void		1	labeled-statement	2
227	volatile		1	labeled-statement	2
227	while		1	labeled-statement	2
227	{		1	labeled-statement	2
227	|=		1	labeled-statement	2
227	}		1	labeled-statement	2
227	~		1	labeled-statement	2
291	(		1	direct-abstract-declarator	7
291	)		1	direct-abstract-declarator	7
291	,		1	direct-abstract-declarator	7
291	[		1	direct-abstract-declarator	7
12	(		1	translation-unit	0
12	*		1	translation-unit	0
12	_KULV_END_		1	translation-unit	0
12	auto		1	translation-unit	0
12	char		1	translation-unit	0
12	const		1	translation-unit	0
12	double		1	translation-unit	0
12	extern		1	translation-unit	0
12	float		1	translation-unit	0
12	identifier		1	translation-unit	0
12	int		1	translation-unit	0
12	long		1	translation-unit	0
12	register		1	translation-unit	0
12	short		1	translation-unit	0
12	signed		1	translation-unit	0
12	static		1	translation-unit	0
12	typedef		1	translation-unit	0
12	unsigned		1	translation-unit	0
12	void		1	translation-unit	0
12	volatile		1	translation-unit	0
76	!		1	multiplicative-expression	0
76	!=		1	multiplicative-expression	0
76	%		1	multiplicative-expression	0
76	%=		1	multiplicative-expression	0
76	&		1	multiplicative-expression	0
76	&&		1	multiplicative-expression	0
76	&=		1	multiplicative-expression	0
76	(		1	multiplicative-expression	0
76	)		1	multiplicative-expression	0
76	*		1	multiplicative-expression	0
76	*=		1	multiplicative-expression	0
76	+		1	multiplicative-expression	0
76	++		1	multiplicative-expression	0
76	+=		1	multiplicative-expression	0
76	,		1	multiplicative-expression	0
76	-		1	multiplicative-expression	0
76	--		1	multiplicative-expression	0
76	-=		1	multiplicative-expression	0
76	->		1	multiplicative-expression	0
76	/		1	multiplicative-expression	0
76	/=		1	multiplicative-expression	0
76	:		1	multiplicative-expression	0
76	;		1	multiplicative-expression	0
76	<		1	multiplicative-expression	0
76	<<		1	multiplicative-expression	0
76	<<=		1	multiplicative-expression	0
76	<=		1	multiplicative-expression	0
76	=		1	multiplicative-expression	0
76	==		1	multiplicative-expression	0
76	>		1	multiplicative-expression	0
76	>=		1	multiplicative-expression	0
76	>>		1	multiplicative-expression	0
76	>>=		1	multiplicative-expression	0
76	?		1	multiplicative-expression	0
76	[		1	multiplicative-expression	0
76	]		1	multiplicative-expression	0
76	^		1	multiplicative-expression	0
76	^=		1	multiplicative-expression	0
76	_KULV_END_		1	multiplicative-expression	0
76	auto		1	multiplicative-expression	0
76	break		1	multiplicative-expression	0
76	case		1	multiplicative-expression	0
76	char		1	multiplicative-expression	0
76	character-constant		1	multiplicative-expression	0
76	const		1	multiplicative-expression	0
76	continue		1	multiplicative-expression	0
76	default		1	multiplicative-expression	0
76	do		1	multiplicative-expression	0
76	double		1	multiplicative-expression	0
76	else		1	multiplicative-expression	0
76	enumeration-constant		1	multiplicative-expression	0
76	extern		1	multiplicative-expression	0
76	float		1	multiplicative-expression	0
76	floating-constant		1	multiplicative-expression	0
76	for		1	multiplicative-expression	0
76	goto		1	multiplicative-expression	0
76	identifier		1	multiplicative-expression	0
76	if		1	multiplicative-expression	0
76	int		1	multiplicative-expression	0
76	integer-constant		1	multiplicative-expression	0
76	long		1	multiplicative-expression	0
76	register		1	multiplicative-expression	0
76	return		1	multiplicative-expression	0
76	short		1	multiplicative-expression	0
76	signed		1	multiplicative-expression	0
76	sizeof		1	multiplicative-expression	0
76	static		1	multiplicative-expression	0
76	string-constant		1	multiplicative-expression	0
76	switch		1	multiplicative-expression	0
76	typedef		1	multiplicative-expression	0
76	unsigned		1	multiplicative-expression	0
76	void		1	multiplicative-expression	0
76	volatile		1	multiplicative-expression	0
76	while		1	multiplicative-expression	0
76	{		1	multiplicative-expression	0
76	|		1	multiplicative-expression	0
76	|=		1	multiplicative-expression	0
76	||		1	multiplicative-expression	0
76	}		1	multiplicative-expression	0
76	~		1	multiplicative-expression	0
140	(		1	specifier-qualifier-list	0
140	)		1	specifier-qualifier-list	0
140	*		1	specifier-qualifier-list	0
140	[		1	specifier-qualifier-list	0
140	char		0	4
140	const		0	5
140	double		0	10
140	float		0	13
140	int		0	16
140	long		0	17
140	short		0	20
140	signed		0	21
140	unsigned		0	28
140	void		0	29
140	volatile		0	30
204	)		1	parameter-declaration	2
204	,		1	parameter-declaration	2
268	(		0	266
268	)		1	abstract-declarator	2
268	,		1	abstract-declarator	2
268	[		0	267
332	!		1	iteration-statement	9
332	%=		1	iteration-statement	9
332	&		1	iteration-statement	9
332	&=		1	iteration-statement	9
332	(		1	iteration-statement	9
332	)		1	iteration-statement	9
332	*		1	iteration-statement	9
332	*=		1	iteration-statement	9
332	+		1	iteration-statement	9
332	++		1	iteration-statement	9
332	+=		1	iteration-statement	9
332	,		1	iteration-statement	9
332	-		1	iteration-statement	9
332	--		1	iteration-statement	9
332	-=		1	iteration-statement	9
332	/=		1	iteration-statement	9
332	;		1	iteration-statement	9
332	<<=		1	iteration-statement	9
332	=		1	iteration-statement	9
332	>>=		1	iteration-statement	9
332	^=		1	iteration-statement	9
332	_KULV_END_		1	iteration-statement	9
332	auto		1	iteration-statement	9
332	break		1	iteration-statement	9
332	case		1	iteration-statement	9
332	char		1	iteration-statement	9
332	character-constant		1	iteration-statement	9
332	const		1	iteration-statement	9
332	continue		1	iteration-statement	9
332	default		1	iteration-statement	9
332	do		1	iteration-statement	9
332	double		1	iteration-statement	9
332	else		1	iteration-statement	9
332	enumeration-constant		1	iteration-statement	9
332	extern		1	iteration-statement	9
332	float		1	iteration-statement	9
332	floating-constant		1	iteration-statement	9
332	for		1	iteration-statement	9
332	goto		1	iteration-statement	9
332	identifier		1	iteration-statement	9
332	if		1	iteration-statement	9
332	int		1	iteration-statement	9
332	integer-constant		1	iteration-statement	9
332	long		1	iteration-statement	9
332	register		1	iteration-statement	9
332	return		1	iteration-statement	9
332	short		1	iteration-statement	9
332	signed		1	iteration-statement	9
332	sizeof		1	iteration-statement	9
332	static		1	iteration-statement	9
332	string-constant		1	iteration-statement	9
332	switch		1	iteration-statement	9
332	typedef		1	iteration-statement	9
332	unsigned		1	iteration-statement	9
332	void		1	iteration-statement	9
332	volatile		1	iteration-statement	9
332	while		1	iteration-statement	9
332	{		1	iteration-statement	9
332	|=		1	iteration-statement	9
332	}		1	iteration-statement	9
332	~		1	iteration-statement	9
21	(		1	type-specifier	7
21	)		1	type-specifier	7
21	*		1	type-specifier	7
21	,		1	type-specifier	7
21	;		1	type-specifier	7
21	[		1	type-specifier	7
21	auto		1	type-specifier	7
21	char		1	type-specifier	7
21	const		1	type-specifier	7
21	double		1	type-specifier	7
21	extern		1	type-specifier	7
21	float		1	type-specifier	7
21	identifier		1	type-specifier	7
21	int		1	type-specifier	7
21	long		1	type-specifier	7
21	register		1	type-specifier	7
21	short		1	type-specifier	7
21	signed		1	type-specifier	7
21	static		1	type-specifier	7
21	typedef		1	type-specifier	7
21	unsigned		1	type-specifier	7
21	void		1	type-specifier	7
21	volatile		1	type-specifier	7
85	!		1	constant	3
85	!=		1	constant	3
85	%		1	constant	3
85	%=		1	constant	3
85	&		1	constant	3
85	&&		1	constant	3
85	&=		1	constant	3
85	(		1	constant	3
85	)		1	constant	3
85	*		1	constant	3
85	*=		1	constant	3
85	+		1	constant	3
85	++		1	constant	3
85	+=		1	constant	3
85	,		1	constant	3
85	-		1	constant	3
85	--		1	constant	3
85	-=		1	constant	3
85	->		1	constant	3
85	/		1	constant	3
85	/=		1	constant	3
85	:		1	constant	3
85	;		1	constant	3
85	<		1	constant	3
85	<<		1	constant	3
85	<<=		1	constant	3
85	<=		1	constant	3
85	=		1	constant	3
85	==		1	constant	3
85	>		1	constant	3
85	>=		1	constant	3
85	>>		1	constant	3
85	>>=		1	constant	3
85	?		1	constant	3
85	[		1	constant	3
85	]		1	constant	3
85	^		1	constant	3
85	^=		1	constant	3
85	_KULV_END_		1	constant	3
85	auto		1	constant	3
85	break		1	constant	3
85	case		1	constant	3
85	char		1	constant	3
85	character-constant		1	constant	3
85	const		1	constant	3
85	continue		1	constant	3
85	default		1	constant	3
85	do		1	constant	3
85	double		1	constant	3
85	else		1	constant	3
85	enumeration-constant		1	constant	3
85	extern		1	constant	3
85	float		1	constant	3
85	floating-constant		1	constant	3
85	for		1	constant	3
85	goto		1	constant	3
85	identifier		1	constant	3
85	if		1	constant	3
85	int		1	constant	3
85	integer-constant		1	constant	3
85	long		1	constant	3
85	register		1	constant	3
85	return		1	constant	3
85	short		1	constant	3
85	signed		1	constant	3
85	sizeof		1	constant	3
85	static		1	constant	3
85	string-constant		1	constant	3
85	switch		1	constant	3
85	typedef		1	constant	3
85	unsigned		1	constant	3
85	void		1	constant	3
85	volatile		1	constant	3
85	while		1	constant	3
85	{		1	constant	3
85	|		1	constant	3
85	|=		1	constant	3
85	||		1	constant	3
85	}		1	constant	3
85	~		1	constant	3
149	!		1	jump-statement	1
149	%=		1	jump-statement	1
149	&		1	jump-statement	1
149	&=		1	jump-statement	1
149	(		1	jump-statement	1
149	)		1	jump-statement	1
149	*		1	jump-statement	1
149	*=		1	jump-statement	1
149	+		1	jump-statement	1
149	++		1	jump-statement	1
149	+=		1	jump-statement	1
149	,		1	jump-statement	1
149	-		1	jump-statement	1
149	--		1	jump-statement	1
149	-=		1	jump-statement	1
149	/=		1	jump-statement	1
149	;		1	jump-statement	1
149	<<=		1	jump-statement	1
149	=		1	jump-statement	1
149	>>=		1	jump-statement	1
149	^=		1	jump-statement	1
149	_KULV_END_		1	jump-statement	1
149	auto		1	jump-statement	1
149	break		1	jump-statement	1
149	case		1	jump-statement	1
149	char		1	jump-statement	1
149	character-constant		1	jump-statement	1
149	const		1	jump-statement	1
149	continue		1	jump-statement	1
149	default		1	jump-statement	1
149	do		1	jump-statement	1
149	double		1	jump-statement	1
149	else		1	jump-statement	1
149	enumeration-constant		1	jump-statement	1
149	extern		1	jump-statement	1
149	float		1	jump-statement	1
149	floating-constant		1	jump-statement	1
149	for		1	jump-statement	1
149	goto		1	jump-statement	1
149	identifier		1	jump-statement	1
149	if		1	jump-statement	1
149	int		1	jump-statement	1
149	integer-constant		1	jump-statement	1
149	long		1	jump-statement	1
149	register		1	jump-statement	1
149	return		1	jump-statement	1
149	short		1	jump-statement	1
149	signed		1	jump-statement	1
149	sizeof		1	jump-statement	1
149	static		1	jump-statement	1
149	string-constant		1	jump-statement	1
149	switch		1	jump-statement	1
149	typedef		1	jump-statement	1
149	unsigned		1	jump-statement	1
149	void		1	jump-statement	1
149	volatile		1	jump-statement	1
149	while		1	jump-statement	1
149	{		1	jump-statement	1
149	|=		1	jump-statement	1
149	}		1	jump-statement	1
149	~		1	jump-statement	1
213	,		1	initializer-list	0
213	}		1	initializer-list	0
277	!		0	62
277	&		0	63
277	(		0	64
277	*		0	65
277	+		0	66
277	++		0	67
277	-		0	68
277	--		0	69
277	;		0	299
277	character-constant		0	77
277	enumeration-constant		0	85
277	floating-constant		0	90
277	identifier		0	129
277	integer-constant		0	96
277	sizeof		0	109
277	string-constant		0	112
277	~		0	118
62	!		1	unary-operator	5
62	&		1	unary-operator	5
62	(		1	unary-operator	5
62	*		1	unary-operator	5
62	+		1	unary-operator	5
62	++		1	unary-operator	5
62	-		1	unary-operator	5
62	--		1	unary-operator	5
62	character-constant		1	unary-operator	5
62	enumeration-constant		1	unary-operator	5
62	floating-constant		1	unary-operator	5
62	identifier		1	unary-operator	5
62	integer-constant		1	unary-operator	5
62	sizeof		1	unary-operator	5
62	string-constant		1	unary-operator	5
62	~		1	unary-operator	5
126	:		1	constant-expression	0
126	]		1	constant-expression	0
190	!		1	assignment-operator	1
190	&		1	assignment-operator	1
190	(		1	assignment-operator	1
190	*		1	assignment-operator	1
190	+		1	assignment-operator	1
190	++		1	assignment-operator	1
190	-		1	assignment-operator	1
190	--		1	assignment-operator	1
190	character-constant		1	assignment-operator	1
190	enumeration-constant		1	assignment-operator	1
190	floating-constant		1	assignment-operator	1
190	identifier		1	assignment-operator	1
190	integer-constant		1	assignment-operator	1
190	sizeof		1	assignment-operator	1
190	string-constant		1	assignment-operator	1
190	~		1	assignment-operator	1
254	!		1	jump-statement	4
254	%=		1	jump-statement	4
254	&		1	jump-statement	4
254	&=		1	jump-statement	4
254	(		1	jump-statement	4
254	)		1	jump-statement	4
254	*		1	jump-statement	4
254	*=		1	jump-statement	4
254	+		1	jump-statement	4
254	++		1	jump-statement	4
254	+=		1	jump-statement	4
254	,		1	jump-statement	4
254	-		1	jump-statement	4
254	--		1	jump-statement	4
254	-=		1	jump-statement	4
254	/=		1	jump-statement	4
254	;		1	jump-statement	4
254	<<=		1	jump-statement	4
254	=		1	jump-statement	4
254	>>=		1	jump-statement	4
254	^=		1	jump-statement	4
254	_KULV_END_		1	jump-statement	4
254	auto		1	jump-statement	4
254	break		1	jump-statement	4
254	case		1	jump-statement	4
254	char		1	jump-statement	4
254	character-constant		1	jump-statement	4
254	const		1	jump-statement	4
254	continue		1	jump-statement	4
254	default		1	jump-statement	4
254	do		1	jump-statement	4
254	double		1	jump-statement	4
254	else		1	jump-statement	4
254	enumeration-constant		1	jump-statement	4
254	extern		1	jump-statement	4
254	float		1	jump-statement	4
254	floating-constant		1	jump-statement	4
254	for		1	jump-statement	4
254	goto		1	jump-statement	4
254	identifier		1	jump-statement	4
254	if		1	jump-statement	4
254	int		1	jump-statement	4
254	integer-constant		1	jump-statement	4
254	long		1	jump-statement	4
254	register		1	jump-statement	4
254	return		1	jump-statement	4
254	short		1	jump-statement	4
254	signed		1	jump-statement	4
254	sizeof		1	jump-statement	4
254	static		1	jump-statement	4
254	string-constant		1	jump-statement	4
254	switch		1	jump-statement	4
254	typedef		1	jump-statement	4
254	unsigned		1	jump-statement	4
254	void		1	jump-statement	4
254	volatile		1	jump-statement	4
254	while		1	jump-statement	4
254	{		1	jump-statement	4
254	|=		1	jump-statement	4
254	}		1	jump-statement	4
254	~		1	jump-statement	4
318	!		0	62
318	&		0	63
318	(		0	64
318	*		0	65
318	+		0	66
318	++		0	67
318	-		0	68
318	--		0	69
318	;		0	70
318	break		0	74
318	case		0	75
318	character-constant		0	77
318	continue		0	81
318	default		0	83
318	do		0	84
318	enumeration-constant		0	85
318	floating-constant		0	90
318	for		0	91
318	goto		0	92
318	identifier		0	93
318	if		0	94
318	integer-constant		0	96
318	return		0	106
318	sizeof		0	109
318	string-constant		0	112
318	switch		0	113
318	while		0	116
318	{		0	43
318	~		0	118
7	(		0	1
7	*		0	2
7	;		0	35
7	identifier		0	15
71	!		1	exclusive-OR-expression	0
71	!=		1	exclusive-OR-expression	0
71	%		1	exclusive-OR-expression	0
71	%=		1	exclusive-OR-expression	0
71	&		0	144
71	&&		1	exclusive-OR-expression	0
71	&=		1	exclusive-OR-expression	0
71	(		1	exclusive-OR-expression	0
71	)		1	exclusive-OR-expression	0
71	*		1	exclusive-OR-expression	0
71	*=		1	exclusive-OR-expression	0
71	+		1	exclusive-OR-expression	0
71	++		1	exclusive-OR-expression	0
71	+=		1	exclusive-OR-expression	0
71	,		1	exclusive-OR-expression	0
71	-		1	exclusive-OR-expression	0
71	--		1	exclusive-OR-expression	0
71	-=		1	exclusive-OR-expression	0
71	->		1	exclusive-OR-expression	0
71	/		1	exclusive-OR-expression	0
71	/=		1	exclusive-OR-expression	0
71	:		1	exclusive-OR-expression	0
71	;		1	exclusive-OR-expression	0
71	<		1	exclusive-OR-expression	0
71	<<		1	exclusive-OR-expression	0
71	<<=		1	exclusive-OR-expression	0
71	<=		1	exclusive-OR-expression	0
71	=		1	exclusive-OR-expression	0
71	==		1	exclusive-OR-expression	0
71	>		1	exclusive-OR-expression	0
71	>=		1	exclusive-OR-expression	0
71	>>		1	exclusive-OR-expression	0
71	>>=		1	exclusive-OR-expression	0
71	?		1	exclusive-OR-expression	0
71	[		1	exclusive-OR-expression	0
71	]		1	exclusive-OR-expression	0
71	^		1	exclusive-OR-expression	0
71	^=		1	exclusive-OR-expression	0
71	_KULV_END_		1	exclusive-OR-expression	0
71	auto		1	exclusive-OR-expression	0
71	break		1	exclusive-OR-expression	0
71	case		1	exclusive-OR-expression	0
71	char		1	exclusive-OR-expression	0
71	character-constant		1	exclusive-OR-expression	0
71	const		1	exclusive-OR-expression	0
71	continue		1	exclusive-OR-expression	0
71	default		1	exclusive-OR-expression	0
71	do		1	exclusive-OR-expression	0
71	double		1	exclusive-OR-expression	0
71	else		1	exclusive-OR-expression	0
71	enumeration-constant		1	exclusive-OR-expression	0
71	extern		1	exclusive-OR-expression	0
71	float		1	exclusive-OR-expression	0
71	floating-constant		1	exclusive-OR-expression	0
71	for		1	exclusive-OR-expression	0
71	goto		1	exclusive-OR-expression	0
71	identifier		1	exclusive-OR-expression	0
71	if		1	exclusive-OR-expression	0
71	int		1	exclusive-OR-expression	0
71	integer-constant		1	exclusive-OR-expression	0
71	long		1	exclusive-OR-expression	0
71	register		1	exclusive-OR-expression	0
71	return		1	exclusive-OR-expression	0
71	short		1	exclusive-OR-expression	0
71	signed		1	exclusive-OR-expression	0
71	sizeof		1	exclusive-OR-expression	0
71	static		1	exclusive-OR-expression	0
71	string-constant		1	exclusive-OR-expression	0
71	switch		1	exclusive-OR-expression	0
71	typedef		1	exclusive-OR-expression	0
71	unsigned		1	exclusive-OR-expression	0
71	void		1	exclusive-OR-expression	0
71	volatile		1	exclusive-OR-expression	0
71	while		1	exclusive-OR-expression	0
71	{		1	exclusive-OR-expression	0
71	|		1	exclusive-OR-expression	0
71	|=		1	exclusive-OR-expression	0
71	||		1	exclusive-OR-expression	0
71	}		1	exclusive-OR-expression	0
71	~		1	exclusive-OR-expression	0
135	!		1	init-declarator-list	1
135	%=		1	init-declarator-list	1
135	&		1	init-declarator-list	1
135	&=		1	init-declarator-list	1
135	(		1	init-declarator-list	1
135	)		1	init-declarator-list	1
135	*		1	init-declarator-list	1
135	*=		1	init-declarator-list	1
135	+		1	init-declarator-list	1
135	++		1	init-declarator-list	1
135	+=		1	init-declarator-list	1
135	,		1	init-declarator-list	1
135	-		1	init-declarator-list	1
135	--		1	init-declarator-list	1
135	-=		1	init-declarator-list	1
135	/=		1	init-declarator-list	1
135	;		1	init-declarator-list	1
135	<<=		1	init-declarator-list	1
135	=		1	init-declarator-list	1
135	>>=		1	init-declarator-list	1
135	^=		1	init-declarator-list	1
135	_KULV_END_		1	init-declarator-list	1
135	auto		1	init-declarator-list	1
135	break		1	init-declarator-list	1
135	case		1	init-declarator-list	1
135	char		1	init-declarator-list	1
135	character-constant		1	init-declarator-list	1
135	const		1	init-declarator-list	1
135	continue		1	init-declarator-list	1
135	default		1	init-declarator-list	1
135	do		1	init-declarator-list	1
135	double		1	init-declarator-list	1
135	else		1	init-declarator-list	1
135	enumeration-constant		1	init-declarator-list	1
135	extern		1	init-declarator-list	1
135	float		1	init-declarator-list	1
135	floating-constant		1	init-declarator-list	1
135	for		1	init-declarator-list	1
135	goto		1	init-declarator-list	1
135	identifier		1	init-declarator-list	1
135	if		1	init-declarator-list	1
135	int		1	init-declarator-list	1
135	integer-constant		1	init-declarator-list	1
135	long		1	init-declarator-list	1
135	register		1	init-declarator-list	1
135	return		1	init-declarator-list	1
135	short		1	init-declarator-list	1
135	signed		1	init-declarator-list	1
135	sizeof		1	init-declarator-list	1
135	static		1	init-declarator-list	1
135	string-constant		1	init-declarator-list	1
135	switch		1	init-declarator-list	1
135	typedef		1	init-declarator-list	1
135	unsigned		1	init-declarator-list	1
135	void		1	init-declarator-list	1
135	volatile		1	init-declarator-list	1
135	while		1	init-declarator-list	1
135	{		1	init-declarator-list	1
135	|=		1	init-declarator-list	1
135	}		1	init-declarator-list	1
135	~		1	init-declarator-list	1
199	!		1	assignment-operator	10
199	&		1	assignment-operator	10
199	(		1	assignment-operator	10
199	*		1	assignment-operator	10
199	+		1	assignment-operator	10
199	++		1	assignment-operator	10
199	-		1	assignment-operator	10
199	--		1	assignment-operator	10
199	character-constant		1	assignment-operator	10
199	enumeration-constant		1	assignment-operator	10
199	floating-constant		1	assignment-operator	10
199	identifier		1	assignment-operator	10
199	integer-constant		1	assignment-operator	10
199	sizeof		1	assignment-operator	10
199	string-constant		1	assignment-operator	10
199	~		1	assignment-operator	10
263	)		0	289
327	!		1	selection-statement	1
327	%=		1	selection-statement	1
327	&		1	selection-statement	1
327	&=		1	selection-statement	1
327	(		1	selection-statement	1
327	)		1	selection-statement	1
327	*		1	selection-statement	1
327	*=		1	selection-statement	1
327	+		1	selection-statement	1
327	++		1	selection-statement	1
327	+=		1	selection-statement	1
327	,		1	selection-statement	1
327	-		1	selection-statement	1
327	--		1	selection-statement	1
327	-=		1	selection-statement	1
327	/=		1	selection-statement	1
327	;		1	selection-statement	1
327	<<=		1	selection-statement	1
327	=		1	selection-statement	1
327	>>=		1	selection-statement	1
327	^=		1	selection-statement	1
327	_KULV_END_		1	selection-statement	1
327	auto		1	selection-statement	1
327	break		1	selection-statement	1
327	case		1	selection-statement	1
327	char		1	selection-statement	1
327	character-constant		1	selection-statement	1
327	const		1	selection-statement	1
327	continue		1	selection-statement	1
327	default		1	selection-statement	1
327	do		1	selection-statement	1
327	double		1	selection-statement	1
327	else		1	selection-statement	1
327	enumeration-constant		1	selection-statement	1
327	extern		1	selection-statement	1
327	float		1	selection-statement	1
327	floating-constant		1	selection-statement	1
327	for		1	selection-statement	1
327	goto		1	selection-statement	1
327	identifier		1	selection-statement	1
327	if		1	selection-statement	1
327	int		1	selection-statement	1
327	integer-constant		1	selection-statement	1
327	long		1	selection-statement	1
327	register		1	selection-statement	1
327	return		1	selection-statement	1
327	short		1	selection-statement	1
327	signed		1	selection-statement	1
327	sizeof		1	selection-statement	1
327	static		1	selection-statement	1
327	string-constant		1	selection-statement	1
327	switch		1	selection-statement	1
327	typedef		1	selection-statement	1
327	unsigned		1	selection-statement	1
327	void		1	selection-statement	1
327	volatile		1	selection-statement	1
327	while		1	selection-statement	1
327	{		1	selection-statement	1
327	|=		1	selection-statement	1
327	}		1	selection-statement	1
327	~		1	selection-statement	1
16	(		1	type-specifier	3
16	)		1	type-specifier	3
16	*		1	type-specifier	3
16	,		1	type-specifier	3
16	;		1	type-specifier	3
16	[		1	type-specifier	3
16	auto		1	type-specifier	3
16	char		1	type-specifier	3
16	const		1	type-specifier	3
16	double		1	type-specifier	3
16	extern		1	type-specifier	3
16	float		1	type-specifier	3
16	identifier		1	type-specifier	3
16	int		1	type-specifier	3
16	long		1	type-specifier	3
16	register		1	type-specifier	3
16	short		1	type-specifier	3
16	signed		1	type-specifier	3
16	static		1	type-specifier	3
16	typedef		1	type-specifier	3
16	unsigned		1	type-specifier	3
16	void		1	type-specifier	3
16	volatile		1	type-specifier	3
80	!		1	primary-expression	1
80	!=		1	primary-expression	1
80	%		1	primary-expression	1
80	%=		1	primary-expression	1
80	&		1	primary-expression	1
80	&&		1	primary-expression	1
80	&=		1	primary-expression	1
80	(		1	primary-expression	1
80	)		1	primary-expression	1
80	*		1	primary-expression	1
80	*=		1	primary-expression	1
80	+		1	primary-expression	1
80	++		1	primary-expression	1
80	+=		1	primary-expression	1
80	,		1	primary-expression	1
80	-		1	primary-expression	1
80	--		1	primary-expression	1
80	-=		1	primary-expression	1
80	->		1	primary-expression	1
80	/		1	primary-expression	1
80	/=		1	primary-expression	1
80	:		1	primary-expression	1
80	;		1	primary-expression	1
80	<		1	primary-expression	1
80	<<		1	primary-expression	1
80	<<=		1	primary-expression	1
80	<=		1	primary-expression	1
80	=		1	primary-expression	1
80	==		1	primary-expression	1
80	>		1	primary-expression	1
80	>=		1	primary-expression	1
80	>>		1	primary-expression	1
80	>>=		1	primary-expression	1
80	?		1	primary-expression	1
80	[		1	primary-expression	1
80	]		1	primary-expression	1
80	^		1	primary-expression	1
80	^=		1	primary-expression	1
80	_KULV_END_		1	primary-expression	1
80	auto		1	primary-expression	1
80	break		1	primary-expression	1
80	case		1	primary-expression	1
80	char		1	primary-expression	1
80	character-constant		1	primary-expression	1
80	const		1	primary-expression	1
80	continue		1	primary-expression	1
80	default		1	primary-expression	1
80	do		1	primary-expression	1
80	double		1	primary-expression	1
80	else		1	primary-expression	1
80	enumeration-constant		1	primary-expression	1
80	extern		1	primary-expression	1
80	float		1	primary-expression	1
80	floating-constant		1	primary-expression	1
80	for		1	primary-expression	1
80	goto		1	primary-expression	1
80	identifier		1	primary-expression	1
80	if		1	primary-expression	1
80	int		1	primary-expression	1
80	integer-constant		1	primary-expression	1
80	long		1	primary-expression	1
80	register		1	primary-expression	1
80	return		1	primary-expression	1
80	short		1	primary-expression	1
80	signed		1	primary-expression	1
80	sizeof		1	primary-expression	1
80	static		1	primary-expression	1
80	string-constant		1	primary-expression	1
80	switch		1	primary-expression	1
80	typedef		1	primary-expression	1
80	unsigned		1	primary-expression	1
80	void		1	primary-expression	1
80	volatile		1	primary-expression	1
80	while		1	primary-expression	1
80	{		1	primary-expression	1
80	|		1	primary-expression	1
80	|=		1	primary-expression	1
80	||		1	primary-expression	1
80	}		1	primary-expression	1
80	~		1	primary-expression	1
144	!		0	62
144	&		0	63
144	(		0	64
144	*		0	65
144	+		0	66
144	++		0	67
144	-		0	68
144	--		0	69
144	character-constant		0	77
144	enumeration-constant		0	85
144	floating-constant		0	90
144	identifier		0	129
144	integer-constant		0	96
144	sizeof		0	109
144	string-constant		0	112
144	~		0	118
208	!		1	direct-declarator	6
208	%=		1	direct-declarator	6
208	&		1	direct-declarator	6
208	&=		1	direct-declarator	6
208	(		1	direct-declarator	6
208	)		1	direct-declarator	6
208	*		1	direct-declarator	6
208	*=		1	direct-declarator	6
208	+		1	direct-declarator	6
208	++		1	direct-declarator	6
208	+=		1	direct-declarator	6
208	,		1	direct-declarator	6
208	-		1	direct-declarator	6
208	--		1	direct-declarator	6
208	-=		1	direct-declarator	6
208	/=		1	direct-declarator	6
208	;		1	direct-declarator	6
208	<<=		1	direct-declarator	6
208	=		1	direct-declarator	6
208	>>=		1	direct-declarator	6
208	[		1	direct-declarator	6
208	^=		1	direct-declarator	6
208	_KULV_END_		1	direct-declarator	6
208	auto		1	direct-declarator	6
208	break		1	direct-declarator	6
208	case		1	direct-declarator	6
208	char		1	direct-declarator	6
208	character-constant		1	direct-declarator	6
208	const		1	direct-declarator	6
208	continue		1	direct-declarator	6
208	default		1	direct-declarator	6
208	do		1	direct-declarator	6
208	double		1	direct-declarator	6
208	else		1	direct-declarator	6
208	enumeration-constant		1	direct-declarator	6
208	extern		1	direct-declarator	6
208	float		1	direct-declarator	6
208	floating-constant		1	direct-declarator	6
208	for		1	direct-declarator	6
208	goto		1	direct-declarator	6
208	identifier		1	direct-declarator	6
208	if		1	direct-declarator	6
208	int		1	direct-declarator	6
208	integer-constant		1	direct-declarator	6
208	long		1	direct-declarator	6
208	register		1	direct-declarator	6
208	return		1	direct-declarator	6
208	short		1	direct-declarator	6
208	signed		1	direct-declarator	6
208	sizeof		1	direct-declarator	6
208	static		1	direct-declarator	6
208	string-constant		1	direct-declarator	6
208	switch		1	direct-declarator	6
208	typedef		1	direct-declarator	6
208	unsigned		1	direct-declarator	6
208	void		1	direct-declarator	6
208	volatile		1	direct-declarator	6
208	while		1	direct-declarator	6
208	{		1	direct-declarator	6
208	|=		1	direct-declarator	6
208	}		1	direct-declarator	6
208	~		1	direct-declarator	6
272	!		0	62
272	&		0	63
272	(		0	64
272	*		0	65
272	+		0	66
272	++		0	67
272	-		0	68
272	--		0	69
272	character-constant		0	77
272	enumeration-constant		0	85
272	floating-constant		0	90
272	identifier		0	129
272	integer-constant		0	96
272	sizeof		0	109
272	string-constant		0	112
272	{		0	134
272	}		0	296
272	~		0	118
57	!		1	declaration	1
57	%=		1	declaration	1
57	&		1	declaration	1
57	&=		1	declaration	1
57	(		1	declaration	1
57	)		1	declaration	1
57	*		1	declaration	1
57	*=		1	declaration	1
57	+		1	declaration	1
57	++		1	declaration	1
57	+=		1	declaration	1
57	,		1	declaration	1
57	-		1	declaration	1
57	--		1	declaration	1
57	-=		1	declaration	1
57	/=		1	declaration	1
57	;		1	declaration	1
57	<<=		1	declaration	1
57	=		1	declaration	1
57	>>=		1	declaration	1
57	^=		1	declaration	1
57	_KULV_END_		1	declaration	1
57	auto		1	declaration	1
57	break		1	declaration	1
57	case		1	declaration	1
57	char		1	declaration	1
57	character-constant		1	declaration	1
57	const		1	declaration	1
57	continue		1	declaration	1
57	default		1	declaration	1
57	do		1	declaration	1
57	double		1	declaration	1
57	else		1	declaration	1
57	enumeration-constant		1	declaration	1
57	extern		1	declaration	1
57	float		1	declaration	1
57	floating-constant		1	declaration	1
57	for		1	declaration	1
57	goto		1	declaration	1
57	identifier		1	declaration	1
57	if		1	declaration	1
57	int		1	declaration	1
57	integer-constant		1	declaration	1
57	long		1	declaration	1
57	register		1	declaration	1
57	return		1	declaration	1
57	short		1	declaration	1
57	signed		1	declaration	1
57	sizeof		1	declaration	1
57	static		1	declaration	1
57	string-constant		1	declaration	1
57	switch		1	declaration	1
57	typedef		1	declaration	1
57	unsigned		1	declaration	1
57	void		1	declaration	1
57	volatile		1	declaration	1
57	while		1	declaration	1
57	{		1	declaration	1
57	|=		1	declaration	1
57	}		1	declaration	1
57	~		1	declaration	1
121	)		0	208
121	,		0	209
185	!		1	statement-list	1
185	%=		1	statement-list	1
185	&		1	statement-list	1
185	&=		1	statement-list	1
185	(		1	statement-list	1
185	)		1	statement-list	1
185	*		1	statement-list	1
185	*=		1	statement-list	1
185	+		1	statement-list	1
185	++		1	statement-list	1
185	+=		1	statement-list	1
185	,		1	statement-list	1
185	-		1	statement-list	1
185	--		1	statement-list	1
185	-=		1	statement-list	1
185	/=		1	statement-list	1
185	;		1	statement-list	1
185	<<=		1	statement-list	1
185	=		1	statement-list	1
185	>>=		1	statement-list	1
185	^=		1	statement-list	1
185	_KULV_END_		1	statement-list	1
185	auto		1	statement-list	1
185	break		1	statement-list	1
185	case		1	statement-list	1
185	char		1	statement-list	1
185	character-constant		1	statement-list	1
185	const		1	statement-list	1
185	continue		1	statement-list	1
185	default		1	statement-list	1
185	do		1	statement-list	1
185	double		1	statement-list	1
185	else		1	statement-list	1
185	enumeration-constant		1	statement-list	1
185	extern		1	statement-list	1
185	float		1	statement-list	1
185	floating-constant		1	statement-list	1
185	for		1	statement-list	1
185	goto		1	statement-list	1
185	identifier		1	statement-list	1
185	if		1	statement-list	1
185	int		1	statement-list	1
185	integer-constant		1	statement-list	1
185	long		1	statement-list	1
185	register		1	statement-list	1
185	return		1	statement-list	1
185	short		1	statement-list	1
185	signed		1	statement-list	1
185	sizeof		1	statement-list	1
185	static		1	statement-list	1
185	string-constant		1	statement-list	1
185	switch		1	statement-list	1
185	typedef		1	statement-list	1
185	unsigned		1	statement-list	1
185	void		1	statement-list	1
185	volatile		1	statement-list	1
185	while		1	statement-list	1
185	{		1	statement-list	1
185	|=		1	statement-list	1
185	}		1	statement-list	1
185	~		1	statement-list	1
249	,		0	157
249	]		0	284
313	!		0	62
313	&		0	63
313	(		0	64
313	*		0	65
313	+		0	66
313	++		0	67
313	-		0	68
313	--		0	69
313	;		0	70
313	break		0	74
313	case		0	75
313	character-constant		0	77
313	continue		0	81
313	default		0	83
313	do		0	84
313	enumeration-constant		0	85
313	floating-constant		0	90
313	for		0	91
313	goto		0	92
313	identifier		0	93
313	if		0	94
313	integer-constant		0	96
313	return		0	106
313	sizeof		0	109
313	string-constant		0	112
313	switch		0	113
313	while		0	116
313	{		0	43
313	~		0	118
2	(		1	pointer	0
2	)		1	pointer	0
2	*		0	2
2	,		1	pointer	0
2	[		1	pointer	0
2	const		0	5
2	identifier		1	pointer	0
2	volatile		0	30
66	!		1	unary-operator	2
66	&		1	unary-operator	2
66	(		1	unary-operator	2
66	*		1	unary-operator	2
66	+		1	unary-operator	2
66	++		1	unary-operator	2
66	-		1	unary-operator	2
66	--		1	unary-operator	2
66	character-constant		1	unary-operator	2
66	enumeration-constant		1	unary-operator	2
66	floating-constant		1	unary-operator	2
66	identifier		1	unary-operator	2
66	integer-constant		1	unary-operator	2
66	sizeof		1	unary-operator	2
66	string-constant		1	unary-operator	2
66	~		1	unary-operator	2
130	!		1	cast-expression	0
130	!=		1	cast-expression	0
130	%		1	cast-expression	0
130	%=		1	cast-expression	0
130	&		1	cast-expression	0
130	&&		1	cast-expression	0
130	&=		1	cast-expression	0
130	(		1	cast-expression	0
130	)		1	cast-expression	0
130	*		1	cast-expression	0
130	*=		1	cast-expression	0
130	+		1	cast-expression	0
130	++		1	cast-expression	0
130	+=		1	cast-expression	0
130	,		1	cast-expression	0
130	-		1	cast-expression	0
130	--		1	cast-expression	0
130	-=		1	cast-expression	0
130	->		1	cast-expression	0
130	/		1	cast-expression	0
130	/=		1	cast-expression	0
130	:		1	cast-expression	0
130	;		1	cast-expression	0
130	<		1	cast-expression	0
130	<<		1	cast-expression	0
130	<<=		1	cast-expression	0
130	<=		1	cast-expression	0
130	=		1	cast-expression	0
130	==		1	cast-expression	0
130	>		1	cast-expression	0
130	>=		1	cast-expression	0
130	>>		1	cast-expression	0
130	>>=		1	cast-expression	0
130	?		1	cast-expression	0
130	[		1	cast-expression	0
130	]		1	cast-expression	0
130	^		1	cast-expression	0
130	^=		1	cast-expression	0
130	_KULV_END_		1	cast-expression	0
130	auto		1	cast-expression	0
130	break		1	cast-expression	0
130	case		1	cast-expression	0
130	char		1	cast-expression	0
130	character-constant		1	cast-expression	0
130	const		1	cast-expression	0
130	continue		1	cast-expression	0
130	default		1	cast-expression	0
130	do		1	cast-expression	0
130	double		1	cast-expression	0
130	else		1	cast-expression	0
130	enumeration-constant		1	cast-expression	0
130	extern		1	cast-expression	0
130	float		1	cast-expression	0
130	floating-constant		1	cast-expression	0
130	for		1	cast-expression	0
130	goto		1	cast-expression	0
130	identifier		1	cast-expression	0
130	if		1	cast-expression	0
130	int		1	cast-expression	0
130	integer-constant		1	cast-expression	0
130	long		1	cast-expression	0
130	register		1	cast-expression	0
130	return		1	cast-expression	0
130	short		1	cast-expression	0
130	signed		1	cast-expression	0
130	sizeof		1	cast-expression	0
130	static		1	cast-expression	0
130	string-constant		1	cast-expression	0
130	switch		1	cast-expression	0
130	typedef		1	cast-expression	0
130	unsigned		1	cast-expression	0
130	void		1	cast-expression	0
130	volatile		1	cast-expression	0
130	while		1	cast-expression	0
130	{		1	cast-expression	0
130	|		1	cast-expression	0
130	|=		1	cast-expression	0
130	||		1	cast-expression	0
130	}		1	cast-expression	0
130	~		1	cast-expression	0
194	!		1	assignment-operator	6
194	&		1	assignment-operator	6
194	(		1	assignment-operator	6
194	*		1	assignment-operator	6
194	+		1	assignment-operator	6
194	++		1	assignment-operator	6
194	-		1	assignment-operator	6
194	--		1	assignment-operator	6
194	character-constant		1	assignment-operator	6
194	enumeration-constant		1	assignment-operator	6
194	floating-constant		1	assignment-operator	6
194	identifier		1	assignment-operator	6
194	integer-constant		1	assignment-operator	6
194	sizeof		1	assignment-operator	6
194	string-constant		1	assignment-operator	6
194	~		1	assignment-operator	6
258	)		0	286
258	,		0	157
322	!		0	62
322	&		0	63
322	(		0	64
322	*		0	65
322	+		0	66
322	++		0	67
322	-		0	68
322	--		0	69
322	;		0	70
322	break		0	74
322	case		0	75
322	character-constant		0	77
322	continue		0	81
322	default		0	83
322	do		0	84
322	enumeration-constant		0	85
322	floating-constant		0	90
322	for		0	91
322	goto		0	92
322	identifier		0	93
322	if		0	94
322	integer-constant		0	96
322	return		0	106
322	sizeof		0	109
322	string-constant		0	112
322	switch		0	113
322	while		0	116
322	{		0	43
322	~		0	118
43	!		0	62
43	&		0	63
43	(		0	64
43	*		0	65
43	+		0	66
43	++		0	67
43	-		0	68
43	--		0	69
43	;		0	70
43	auto		0	3
43	break		0	74
43	case		0	75
43	char		0	4
43	character-constant		0	77
43	const		0	5
43	continue		0	81
43	default		0	83
43	do		0	84
43	double		0	10
43	enumeration-constant		0	85
43	extern		0	11
43	float		0	13
43	floating-constant		0	90
43	for		0	91
43	goto		0	92
43	identifier		0	93
43	if		0	94
43	int		0	16
43	integer-constant		0	96
43	long		0	17
43	register		0	19
43	return		0	106
43	short		0	20
43	signed		0	21
43	sizeof		0	109
43	static		0	22
43	string-constant		0	112
43	switch		0	113
43	typedef		0	27
43	unsigned		0	28
43	void		0	29
43	volatile		0	30
43	while		0	116
43	{		0	43
43	}		0	117
43	~		0	118
107	!		1	statement	3
107	%=		1	statement	3
107	&		1	statement	3
107	&=		1	statement	3
107	(		1	statement	3
107	)		1	statement	3
107	*		1	statement	3
107	*=		1	statement	3
107	+		1	statement	3
107	++		1	statement	3
107	+=		1	statement	3
107	,		1	statement	3
107	-		1	statement	3
107	--		1	statement	3
107	-=		1	statement	3
107	/=		1	statement	3
107	;		1	statement	3
107	<<=		1	statement	3
107	=		1	statement	3
107	>>=		1	statement	3
107	^=		1	statement	3
107	_KULV_END_		1	statement	3
107	auto		1	statement	3
107	break		1	statement	3
107	case		1	statement	3
107	char		1	statement	3
107	character-constant		1	statement	3
107	const		1	statement	3
107	continue		1	statement	3
107	default		1	statement	3
107	do		1	statement	3
107	double		1	statement	3
107	else		1	statement	3
107	enumeration-constant		1	statement	3
107	extern		1	statement	3
107	float		1	statement	3
107	floating-constant		1	statement	3
107	for		1	statement	3
107	goto		1	statement	3
107	identifier		1	statement	3
107	if		1	statement	3
107	int		1	statement	3
107	integer-constant		1	statement	3
107	long		1	statement	3
107	register		1	statement	3
107	return		1	statement	3
107	short		1	statement	3
107	signed		1	statement	3
107	sizeof		1	statement	3
107	static		1	statement	3
107	string-constant		1	statement	3
107	switch		1	statement	3
107	typedef		1	statement	3
107	unsigned		1	statement	3
107	void		1	statement	3
107	volatile		1	statement	3
107	while		1	statement	3
107	{		1	statement	3
107	|=		1	statement	3
107	}		1	statement	3
107	~		1	statement	3
171	!		1	postfix-expression	5
171	!=		1	postfix-expression	5
171	%		1	postfix-expression	5
171	%=		1	postfix-expression	5
171	&		1	postfix-expression	5
171	&&		1	postfix-expression	5
171	&=		1	postfix-expression	5
171	(		1	postfix-expression	5
171	)		1	postfix-expression	5
171	*		1	postfix-expression	5
171	*=		1	postfix-expression	5
171	+		1	postfix-expression	5
171	++		1	postfix-expression	5
171	+=		1	postfix-expression	5
171	,		1	postfix-expression	5
171	-		1	postfix-expression	5
171	--		1	postfix-expression	5
171	-=		1	postfix-expression	5
171	->		1	postfix-expression	5
171	/		1	postfix-expression	5
171	/=		1	postfix-expression	5
171	:		1	postfix-expression	5
171	;		1	postfix-expression	5
171	<		1	postfix-expression	5
171	<<		1	postfix-expression	5
171	<<=		1	postfix-expression	5
171	<=		1	postfix-expression	5
171	=		1	postfix-expression	5
171	==		1	postfix-expression	5
171	>		1	postfix-expression	5
171	>=		1	postfix-expression	5
171	>>		1	postfix-expression	5
171	>>=		1	postfix-expression	5
171	?		1	postfix-expression	5
171	[		1	postfix-expression	5
171	]		1	postfix-expression	5
171	^		1	postfix-expression	5
171	^=		1	postfix-expression	5
171	_KULV_END_		1	postfix-expression	5
171	auto		1	postfix-expression	5
171	break		1	postfix-expression	5
171	case		1	postfix-expression	5
171	char		1	postfix-expression	5
171	character-constant		1	postfix-expression	5
171	const		1	postfix-expression	5
171	continue		1	postfix-expression	5
171	default		1	postfix-expression	5
171	do		1	postfix-expression	5
171	double		1	postfix-expression	5
171	else		1	postfix-expression	5
171	enumeration-constant		1	postfix-expression	5
171	extern		1	postfix-expression	5
171	float		1	postfix-expression	5
171	floating-constant		1	postfix-expression	5
171	for		1	postfix-expression	5
171	goto		1	postfix-expression	5
171	identifier		1	postfix-expression	5
171	if		1	postfix-expression	5
171	int		1	postfix-expression	5
171	integer-constant		1	postfix-expression	5
171	long		1	postfix-expression	5
171	register		1	postfix-expression	5
171	return		1	postfix-expression	5
171	short		1	postfix-expression	5
171	signed		1	postfix-expression	5
171	sizeof		1	postfix-expression	5
171	static		1	postfix-expression	5
171	string-constant		1	postfix-expression	5
171	switch		1	postfix-expression	5
171	typedef		1	postfix-expression	5
171	unsigned		1	postfix-expression	5
171	void		1	postfix-expression	5
171	volatile		1	postfix-expression	5
171	while		1	postfix-expression	5
171	{		1	postfix-expression	5
171	|		1	postfix-expression	5
171	|=		1	postfix-expression	5
171	||		1	postfix-expression	5
171	}		1	postfix-expression	5
171	~		1	postfix-expression	5
235	!		1	jump-statement	0
235	%=		1	jump-statement	0
235	&		1	jump-statement	0
235	&=		1	jump-statement	0
235	(		1	jump-statement	0
235	)		1	jump-statement	0
235	*		1	jump-statement	0
235	*=		1	jump-statement	0
235	+		1	jump-statement	0
235	++		1	jump-statement	0
235	+=		1	jump-statement	0
235	,		1	jump-statement	0
235	-		1	jump-statement	0
235	--		1	jump-statement	0
235	-=		1	jump-statement	0
235	/=		1	jump-statement	0
235	;		1	jump-statement	0
235	<<=		1	jump-statement	0
235	=		1	jump-statement	0
235	>>=		1	jump-statement	0
235	^=		1	jump-statement	0
235	_KULV_END_		1	jump-statement	0
235	auto		1	jump-statement	0
235	break		1	jump-statement	0
235	case		1	jump-statement	0
235	char		1	jump-statement	0
235	character-constant		1	jump-statement	0
235	const		1	jump-statement	0
235	continue		1	jump-statement	0
235	default		1	jump-statement	0
235	do		1	jump-statement	0
235	double		1	jump-statement	0
235	else		1	jump-statement	0
235	enumeration-constant		1	jump-statement	0
235	extern		1	jump-statement	0
235	float		1	jump-statement	0
235	floating-constant		1	jump-statement	0
235	for		1	jump-statement	0
235	goto		1	jump-statement	0
235	identifier		1	jump-statement	0
235	if		1	jump-statement	0
235	int		1	jump-statement	0
235	integer-constant		1	jump-statement	0
235	long		1	jump-statement	0
235	register		1	jump-statement	0
235	return		1	jump-statement	0
235	short		1	jump-statement	0
235	signed		1	jump-statement	0
235	sizeof		1	jump-statement	0
235	static		1	jump-statement	0
235	string-constant		1	jump-statement	0
235	switch		1	jump-statement	0
235	typedef		1	jump-statement	0
235	unsigned		1	jump-statement	0
235	void		1	jump-statement	0
235	volatile		1	jump-statement	0
235	while		1	jump-statement	0
235	{		1	jump-statement	0
235	|=		1	jump-statement	0
235	}		1	jump-statement	0
235	~		1	jump-statement	0
299	!		0	62
299	&		0	63
299	(		0	64
299	)		0	313
299	*		0	65
299	+		0	66
299	++		0	67
299	-		0	68
299	--		0	69
299	character-constant		0	77
299	enumeration-constant		0	85
299	floating-constant		0	90
299	identifier		0	129
299	integer-constant		0	96
299	sizeof		0	109
299	string-constant		0	112
299	~		0	118
52	(		1	pointer	3
52	)		1	pointer	3
52	*		1	pointer	3
52	,		1	pointer	3
52	[		1	pointer	3
52	const		1	pointer	3
52	identifier		1	pointer	3
52	volatile		1	pointer	3
116	(		0	201
180	!		1	jump-statement	3
180	%=		1	jump-statement	3
180	&		1	jump-statement	3
180	&=		1	jump-statement	3
180	(		1	jump-statement	3
180	)		1	jump-statement	3
180	*		1	jump-statement	3
180	*=		1	jump-statement	3
180	+		1	jump-statement	3
180	++		1	jump-statement	3
180	+=		1	jump-statement	3
180	,		1	jump-statement	3
180	-		1	jump-statement	3
180	--		1	jump-statement	3
180	-=		1	jump-statement	3
180	/=		1	jump-statement	3
180	;		1	jump-statement	3
180	<<=		1	jump-statement	3
180	=		1	jump-statement	3
180	>>=		1	jump-statement	3
180	^=		1	jump-statement	3
180	_KULV_END_		1	jump-statement	3
180	auto		1	jump-statement	3
180	break		1	jump-statement	3
180	case		1	jump-statement	3
180	char		1	jump-statement	3
180	character-constant		1	jump-statement	3
180	const		1	jump-statement	3
180	continue		1	jump-statement	3
180	default		1	jump-statement	3
180	do		1	jump-statement	3
180	double		1	jump-statement	3
180	else		1	jump-statement	3
180	enumeration-constant		1	jump-statement	3
180	extern		1	jump-statement	3
180	float		1	jump-statement	3
180	floating-constant		1	jump-statement	3
180	for		1	jump-statement	3
180	goto		1	jump-statement	3
180	identifier		1	jump-statement	3
180	if		1	jump-statement	3
180	int		1	jump-statement	3
180	integer-constant		1	jump-statement	3
180	long		1	jump-statement	3
180	register		1	jump-statement	3
180	return		1	jump-statement	3
180	short		1	jump-statement	3
180	signed		1	jump-statement	3
180	sizeof		1	jump-statement	3
180	static		1	jump-statement	3
180	string-constant		1	jump-statement	3
180	switch		1	jump-statement	3
180	typedef		1	jump-statement	3
180	unsigned		1	jump-statement	3
180	void		1	jump-statement	3
180	volatile		1	jump-statement	3
180	while		1	jump-statement	3
180	{		1	jump-statement	3
180	|=		1	jump-statement	3
180	}		1	jump-statement	3
180	~		1	jump-statement	3
244	!		1	multiplicative-expression	2
244	!=		1	multiplicative-expression	2
244	%		1	multiplicative-expression	2
244	%=		1	multiplicative-expression	2
244	&		1	multiplicative-expression	2
244	&&		1	multiplicative-expression	2
244	&=		1	multiplicative-expression	2
244	(		1	multiplicative-expression	2
244	)		1	multiplicative-expression	2
244	*		1	multiplicative-expression	2
244	*=		1	multiplicative-expression	2
244	+		1	multiplicative-expression	2
244	++		1	multiplicative-expression	2
244	+=		1	multiplicative-expression	2
244	,		1	multiplicative-expression	2
244	-		1	multiplicative-expression	2
244	--		1	multiplicative-expression	2
244	-=		1	multiplicative-expression	2
244	->		1	multiplicative-expression	2
244	/		1	multiplicative-expression	2
244	/=		1	multiplicative-expression	2
244	:		1	multiplicative-expression	2
244	;		1	multiplicative-expression	2
244	<		1	multiplicative-expression	2
244	<<		1	multiplicative-expression	2
244	<<=		1	multiplicative-expression	2
244	<=		1	multiplicative-expression	2
244	=		1	multiplicative-expression	2
244	==		1	multiplicative-expression	2
244	>		1	multiplicative-expression	2
244	>=		1	multiplicative-expression	2
244	>>		1	multiplicative-expression	2
244	>>=		1	multiplicative-expression	2
244	?		1	multiplicative-expression	2
244	[		1	multiplicative-expression	2
244	]		1	multiplicative-expression	2
244	^		1	multiplicative-expression	2
244	^=		1	multiplicative-expression	2
244	_KULV_END_		1	multiplicative-expression	2
244	auto		1	multiplicative-expression	2
244	break		1	multiplicative-expression	2
244	case		1	multiplicative-expression	2
244	char		1	multiplicative-expression	2
244	character-constant		1	multiplicative-expression	2
244	const		1	multiplicative-expression	2
244	continue		1	multiplicative-expression	2
244	default		1	multiplicative-expression	2
244	do		1	multiplicative-expression	2
244	double		1	multiplicative-expression	2
244	else		1	multiplicative-expression	2
244	enumeration-constant		1	multiplicative-expression	2
244	extern		1	multiplicative-expression	2
244	float		1	multiplicative-expression	2
244	floating-constant		1	multiplicative-expression	2
244	for		1	multiplicative-expression	2
244	goto		1	multiplicative-expression	2
244	identifier		1	multiplicative-expression	2
244	if		1	multiplicative-expression	2
244	int		1	multiplicative-expression	2
244	integer-constant		1	multiplicative-expression	2
244	long		1	multiplicative-expression	2
244	register		1	multiplicative-expression	2
244	return		1	multiplicative-expression	2
244	short		1	multiplicative-expression	2
244	signed		1	multiplicative-expression	2
244	sizeof		1	multiplicative-expression	2
244	static		1	multiplicative-expression	2
244	string-constant		1	multiplicative-expression	2
244	switch		1	multiplicative-expression	2
244	typedef		1	multiplicative-expression	2
244	unsigned		1	multiplicative-expression	2
244	void		1	multiplicative-expression	2
244	volatile		1	multiplicative-expression	2
244	while		1	multiplicative-expression	2
244	{		1	multiplicative-expression	2
244	|		1	multiplicative-expression	2
244	|=		1	multiplicative-expression	2
244	||		1	multiplicative-expression	2
244	}		1	multiplicative-expression	2
244	~		1	multiplicative-expression	2
308	(		1	direct-abstract-declarator	8
308	)		1	direct-abstract-declarator	8
308	,		1	direct-abstract-declarator	8
308	[		1	direct-abstract-declarator	8
29	(		1	type-specifier	0
29	)		1	type-specifier	0
29	*		1	type-specifier	0
29	,		1	type-specifier	0
29	;		1	type-specifier	0
29	[		1	type-specifier	0
29	auto		1	type-specifier	0
29	char		1	type-specifier	0
29	const		1	type-specifier	0
29	double		1	type-specifier	0
29	extern		1	type-specifier	0
29	float		1	type-specifier	0
29	identifier		1	type-specifier	0
29	int		1	type-specifier	0
29	long		1	type-specifier	0
29	register		1	type-specifier	0
29	short		1	type-specifier	0
29	signed		1	type-specifier	0
29	static		1	type-specifier	0
29	typedef		1	type-specifier	0
29	unsigned		1	type-specifier	0
29	void		1	type-specifier	0
29	volatile		1	type-specifier	0
93	!		1	primary-expression	0
93	%=		1	primary-expression	0
93	&		1	primary-expression	0
93	&=		1	primary-expression	0
93	(		1	primary-expression	0
93	)		1	primary-expression	0
93	*		1	primary-expression	0
93	*=		1	primary-expression	0
93	+		1	primary-expression	0
93	++		1	primary-expression	0
93	+=		1	primary-expression	0
93	,		1	primary-expression	0
93	-		1	primary-expression	0
93	--		1	primary-expression	0
93	-=		1	primary-expression	0
93	/=		1	primary-expression	0
93	:		0	161
93	;		1	primary-expression	0
93	<<=		1	primary-expression	0
93	=		1	primary-expression	0
93	>>=		1	primary-expression	0
93	^=		1	primary-expression	0
93	_KULV_END_		1	primary-expression	0
93	auto		1	primary-expression	0
93	break		1	primary-expression	0
93	case		1	primary-expression	0
93	char		1	primary-expression	0
93	character-constant		1	primary-expression	0
93	const		1	primary-expression	0
93	continue		1	primary-expression	0
93	default		1	primary-expression	0
93	do		1	primary-expression	0
93	double		1	primary-expression	0
93	else		1	primary-expression	0
93	enumeration-constant		1	primary-expression	0
93	extern		1	primary-expression	0
93	float		1	primary-expression	0
93	floating-constant		1	primary-expression	0
93	for		1	primary-expression	0
93	goto		1	primary-expression	0
93	identifier		1	primary-expression	0
93	if		1	primary-expression	0
93	int		1	primary-expression	0
93	integer-constant		1	primary-expression	0
93	long		1	primary-expression	0
93	register		1	primary-expression	0
93	return		1	primary-expression	0
93	short		1	primary-expression	0
93	signed		1	primary-expression	0
93	sizeof		1	primary-expression	0
93	static		1	primary-expression	0
93	string-constant		1	primary-expression	0
93	switch		1	primary-expression	0
93	typedef		1	primary-expression	0
93	unsigned		1	primary-expression	0
93	void		1	primary-expression	0
93	volatile		1	primary-expression	0
93	while		1	primary-expression	0
93	{		1	primary-expression	0
93	|=		1	primary-expression	0
93	}		1	primary-expression	0
93	~		1	primary-expression	0
157	!		0	62
157	&		0	63
157	(		0	64
157	*		0	65
157	+		0	66
157	++		0	67
157	-		0	68
157	--		0	69
157	character-constant		0	77
157	enumeration-constant		0	85
157	floating-constant		0	90
157	identifier		0	129
157	integer-constant		0	96
157	sizeof		0	109
157	string-constant		0	112
157	~		0	118
221	(		1	specifier-qualifier-list	1
221	)		1	specifier-qualifier-list	1
221	*		1	specifier-qualifier-list	1
221	[		1	specifier-qualifier-list	1
285	!		1	unary-expression	5
285	!=		1	unary-expression	5
285	%		1	unary-expression	5
285	%=		1	unary-expression	5
285	&		1	unary-expression	5
285	&&		1	unary-expression	5
285	&=		1	unary-expression	5
285	(		1	unary-expression	5
285	)		1	unary-expression	5
285	*		1	unary-expression	5
285	*=		1	unary-expression	5
285	+		1	unary-expression	5
285	++		1	unary-expression	5
285	+=		1	unary-expression	5
285	,		1	unary-expression	5
285	-		1	unary-expression	5
285	--		1	unary-expression	5
285	-=		1	unary-expression	5
285	->		1	unary-expression	5
285	/		1	unary-expression	5
285	/=		1	unary-expression	5
285	:		1	unary-expression	5
285	;		1	unary-expression	5
285	<		1	unary-expression	5
285	<<		1	unary-expression	5
285	<<=		1	unary-expression	5
285	<=		1	unary-expression	5
285	=		1	unary-expression	5
285	==		1	unary-expression	5
285	>		1	unary-expression	5
285	>=		1	unary-expression	5
285	>>		1	unary-expression	5
285	>>=		1	unary-expression	5
285	?		1	unary-expression	5
285	[		1	unary-expression	5
285	]		1	unary-expression	5
285	^		1	unary-expression	5
285	^=		1	unary-expression	5
285	_KULV_END_		1	unary-expression	5
285	auto		1	unary-expression	5
285	break		1	unary-expression	5
285	case		1	unary-expression	5
285	char		1	unary-expression	5
285	character-constant		1	unary-expression	5
285	const		1	unary-expression	5
285	continue		1	unary-expression	5
285	default		1	unary-expression	5
285	do		1	unary-expression	5
285	double		1	unary-expression	5
285	else		1	unary-expression	5
285	enumeration-constant		1	unary-expression	5
285	extern		1	unary-expression	5
285	float		1	unary-expression	5
285	floating-constant		1	unary-expression	5
285	for		1	unary-expression	5
285	goto		1	unary-expression	5
285	identifier		1	unary-expression	5
285	if		1	unary-expression	5
285	int		1	unary-expression	5
285	integer-constant		1	unary-expression	5
285	long		1	unary-expression	5
285	register		1	unary-expression	5
285	return		1	unary-expression	5
285	short		1	unary-expression	5
285	signed		1	unary-expression	5
285	sizeof		1	unary-expression	5
285	static		1	unary-expression	5
285	string-constant		1	unary-expression	5
285	switch		1	unary-expression	5
285	typedef		1	unary-expression	5
285	unsigned		1	unary-expression	5
285	void		1	unary-expression	5
285	volatile		1	unary-expression	5
285	while		1	unary-expression	5
285	{		1	unary-expression	5
285	|		1	unary-expression	5
285	|=		1	unary-expression	5
285	||		1	unary-expression	5
285	}		1	unary-expression	5
285	~		1	unary-expression	5
38	,		1	init-declarator-list	0
38	;		1	init-declarator-list	0
102	!		1	additive-expression	0
102	!=		1	additive-expression	0
102	%		0	167
102	%=		1	additive-expression	0
102	&		1	additive-expression	0
102	&&		1	additive-expression	0
102	&=		1	additive-expression	0
102	(		1	additive-expression	0
102	)		1	additive-expression	0
102	*		0	168
102	*=		1	additive-expression	0
102	+		1	additive-expression	0
102	++		1	additive-expression	0
102	+=		1	additive-expression	0
102	,		1	additive-expression	0
102	-		1	additive-expression	0
102	--		1	additive-expression	0
102	-=		1	additive-expression	0
102	->		1	additive-expression	0
102	/		0	169
102	/=		1	additive-expression	0
102	:		1	additive-expression	0
102	;		1	additive-expression	0
102	<		1	additive-expression	0
102	<<		1	additive-expression	0
102	<<=		1	additive-expression	0
102	<=		1	additive-expression	0
102	=		1	additive-expression	0
102	==		1	additive-expression	0
102	>		1	additive-expression	0
102	>=		1	additive-expression	0
102	>>		1	additive-expression	0
102	>>=		1	additive-expression	0
102	?		1	additive-expression	0
102	[		1	additive-expression	0
102	]		1	additive-expression	0
102	^		1	additive-expression	0
102	^=		1	additive-expression	0
102	_KULV_END_		1	additive-expression	0
102	auto		1	additive-expression	0
102	break		1	additive-expression	0
102	case		1	additive-expression	0
102	char		1	additive-expression	0
102	character-constant		1	additive-expression	0
102	const		1	additive-expression	0
102	continue		1	additive-expression	0
102	default		1	additive-expression	0
102	do		1	additive-expression	0
102	double		1	additive-expression	0
102	else		1	additive-expression	0
102	enumeration-constant		1	additive-expression	0
102	extern		1	additive-expression	0
102	float		1	additive-expression	0
102	floating-constant		1	additive-expression	0
102	for		1	additive-expression	0
102	goto		1	additive-expression	0
102	identifier		1	additive-expression	0
102	if		1	additive-expression	0
102	int		1	additive-expression	0
102	integer-constant		1	additive-expression	0
102	long		1	additive-expression	0
102	register		1	additive-expression	0
102	return		1	additive-expression	0
102	short		1	additive-expression	0
102	signed		1	additive-expression	0
102	sizeof		1	additive-expression	0
102	static		1	additive-expression	0
102	string-constant		1	additive-expression	0
102	switch		1	additive-expression	0
102	typedef		1	additive-expression	0
102	unsigned		1	additive-expression	0
102	void		1	additive-expression	0
102	volatile		1	additive-expression	0
102	while		1	additive-expression	0
102	{		1	additive-expression	0
102	|		1	additive-expression	0
102	|=		1	additive-expression	0
102	||		1	additive-expression	0
102	}		1	additive-expression	0
102	~		1	additive-expression	0
166	!		0	62
166	&		0	63
166	(		0	64
166	*		0	65
166	+		0	66
166	++		0	67
166	-		0	68
166	--		0	69
166	character-constant		0	77
166	enumeration-constant		0	85
166	floating-constant		0	90
166	identifier		0	129
166	integer-constant		0	96
166	sizeof		0	109
166	string-constant		0	112
166	~		0	118
230	!		1	equality-expression	1
230	!=		1	equality-expression	1
230	%		1	equality-expression	1
230	%=		1	equality-expression	1
230	&		1	equality-expression	1
230	&&		1	equality-expression	1
230	&=		1	equality-expression	1
230	(		1	equality-expression	1
230	)		1	equality-expression	1
230	*		1	equality-expression	1
230	*=		1	equality-expression	1
230	+		1	equality-expression	1
230	++		1	equality-expression	1
230	+=		1	equality-expression	1
230	,		1	equality-expression	1
230	-		1	equality-expression	1
230	--		1	equality-expression	1
230	-=		1	equality-expression	1
230	->		1	equality-expression	1
230	/		1	equality-expression	1
230	/=		1	equality-expression	1
230	:		1	equality-expression	1
230	;		1	equality-expression	1
230	<		0	175
230	<<		1	equality-expression	1
230	<<=		1	equality-expression	1
230	<=		0	176
230	=		1	equality-expression	1
230	==		1	equality-expression	1
230	>		0	177
230	>=		0	178
230	>>		1	equality-expression	1
230	>>=		1	equality-expression	1
230	?		1	equality-expression	1
230	[		1	equality-expression	1
230	]		1	equality-expression	1
230	^		1	equality-expression	1
230	^=		1	equality-expression	1
230	_KULV_END_		1	equality-expression	1
230	auto		1	equality-expression	1
230	break		1	equality-expression	1
230	case		1	equality-expression	1
230	char		1	equality-expression	1
230	character-constant		1	equality-expression	1
230	const		1	equality-expression	1
230	continue		1	equality-expression	1
230	default		1	equality-expression	1
230	do		1	equality-expression	1
230	double		1	equality-expression	1
230	else		1	equality-expression	1
230	enumeration-constant		1	equality-expression	1
230	extern		1	equality-expression	1
230	float		1	equality-expression	1
230	floating-constant		1	equality-expression	1
230	for		1	equality-expression	1
230	goto		1	equality-expression	1
230	identifier		1	equality-expression	1
230	if		1	equality-expression	1
230	int		1	equality-expression	1
230	integer-constant		1	equality-expression	1
230	long		1	equality-expression	1
230	register		1	equality-expression	1
230	return		1	equality-expression	1
230	short		1	equality-expression	1
230	signed		1	equality-expression	1
230	sizeof		1	equality-expression	1
230	static		1	equality-expression	1
230	string-constant		1	equality-expression	1
230	switch		1	equality-expression	1
230	typedef		1	equality-expression	1
230	unsigned		1	equality-expression	1
230	void		1	equality-expression	1
230	volatile		1	equality-expression	1
230	while		1	equality-expression	1
230	{		1	equality-expression	1
230	|		1	equality-expression	1
230	|=		1	equality-expression	1
230	||		1	equality-expression	1
230	}		1	equality-expression	1
230	~		1	equality-expression	1
294	]		0	309
15	!		1	direct-declarator	0
15	%=		1	direct-declarator	0
15	&		1	direct-declarator	0
15	&=		1	direct-declarator	0
15	(		1	direct-declarator	0
15	)		1	direct-declarator	0
15	*		1	direct-declarator	0
15	*=		1	direct-declarator	0
15	+		1	direct-declarator	0
15	++		1	direct-declarator	0
15	+=		1	direct-declarator	0
15	,		1	direct-declarator	0
15	-		1	direct-declarator	0
15	--		1	direct-declarator	0
15	-=		1	direct-declarator	0
15	/=		1	direct-declarator	0
15	;		1	direct-declarator	0
15	<<=		1	direct-declarator	0
15	=		1	direct-declarator	0
15	>>=		1	direct-declarator	0
15	[		1	direct-declarator	0
15	^=		1	direct-declarator	0
15	_KULV_END_		1	direct-declarator	0
15	auto		1	direct-declarator	0
15	break		1	direct-declarator	0
15	case		1	direct-declarator	0
15	char		1	direct-declarator	0
15	character-constant		1	direct-declarator	0
15	const		1	direct-declarator	0
15	continue		1	direct-declarator	0
15	default		1	direct-declarator	0
15	do		1	direct-declarator	0
15	double		1	direct-declarator	0
15	else		1	direct-declarator	0
15	enumeration-constant		1	direct-declarator	0
15	extern		1	direct-declarator	0
15	float		1	direct-declarator	0
15	floating-constant		1	direct-declarator	0
15	for		1	direct-declarator	0
15	goto		1	direct-declarator	0
15	identifier		1	direct-declarator	0
15	if		1	direct-declarator	0
15	int		1	direct-declarator	0
15	integer-constant		1	direct-declarator	0
15	long		1	direct-declarator	0
15	register		1	direct-declarator	0
15	return		1	direct-declarator	0
15	short		1	direct-declarator	0
15	signed		1	direct-declarator	0
15	sizeof		1	direct-declarator	0
15	static		1	direct-declarator	0
15	string-constant		1	direct-declarator	0
15	switch		1	direct-declarator	0
15	typedef		1	direct-declarator	0
15	unsigned		1	direct-declarator	0
15	void		1	direct-declarator	0
15	volatile		1	direct-declarator	0
15	while		1	direct-declarator	0
15	{		1	direct-declarator	0
15	|=		1	direct-declarator	0
15	}		1	direct-declarator	0
15	~		1	direct-declarator	0
79	!		1	assignment-expression	0
79	!=		1	assignment-expression	0
79	%		1	assignment-expression	0
79	%=		1	assignment-expression	0
79	&		1	assignment-expression	0
79	&&		1	assignment-expression	0
79	&=		1	assignment-expression	0
79	(		1	assignment-expression	0
79	)		1	assignment-expression	0
79	*		1	assignment-expression	0
79	*=		1	assignment-expression	0
79	+		1	assignment-expression	0
79	++		1	assignment-expression	0
79	+=		1	assignment-expression	0
79	,		1	assignment-expression	0
79	-		1	assignment-expression	0
79	--		1	assignment-expression	0
79	-=		1	assignment-expression	0
79	->		1	assignment-expression	0
79	/		1	assignment-expression	0
79	/=		1	assignment-expression	0
79	:		1	assignment-expression	0
79	;		1	assignment-expression	0
79	<		1	assignment-expression	0
79	<<		1	assignment-expression	0
79	<<=		1	assignment-expression	0
79	<=		1	assignment-expression	0
79	=		1	assignment-expression	0
79	==		1	assignment-expression	0
79	>		1	assignment-expression	0
79	>=		1	assignment-expression	0
79	>>		1	assignment-expression	0
79	>>=		1	assignment-expression	0
79	?		1	assignment-expression	0
79	[		1	assignment-expression	0
79	]		1	assignment-expression	0
79	^		1	assignment-expression	0
79	^=		1	assignment-expression	0
79	_KULV_END_		1	assignment-expression	0
79	auto		1	assignment-expression	0
79	break		1	assignment-expression	0
79	case		1	assignment-expression	0
79	char		1	assignment-expression	0
79	character-constant		1	assignment-expression	0
79	const		1	assignment-expression	0
79	continue		1	assignment-expression	0
79	default		1	assignment-expression	0
79	do		1	assignment-expression	0
79	double		1	assignment-expression	0
79	else		1	assignment-expression	0
79	enumeration-constant		1	assignment-expression	0
79	extern		1	assignment-expression	0
79	float		1	assignment-expression	0
79	floating-constant		1	assignment-expression	0
79	for		1	assignment-expression	0
79	goto		1	assignment-expression	0
79	identifier		1	assignment-expression	0
79	if		1	assignment-expression	0
79	int		1	assignment-expression	0
79	integer-constant		1	assignment-expression	0
79	long		1	assignment-expression	0
79	register		1	assignment-expression	0
79	return		1	assignment-expression	0
79	short		1	assignment-expression	0
79	signed		1	assignment-expression	0
79	sizeof		1	assignment-expression	0
79	static		1	assignment-expression	0
79	string-constant		1	assignment-expression	0
79	switch		1	assignment-expression	0
79	typedef		1	assignment-expression	0
79	unsigned		1	assignment-expression	0
79	void		1	assignment-expression	0
79	volatile		1	assignment-expression	0
79	while		1	assignment-expression	0
79	{		1	assignment-expression	0
79	|		1	assignment-expression	0
79	|=		1	assignment-expression	0
79	||		1	assignment-expression	0
79	}		1	assignment-expression	0
79	~		1	assignment-expression	0
143	!		1	unary-expression	2
143	!=		1	unary-expression	2
143	%		1	unary-expression	2
143	%=		1	unary-expression	2
143	&		1	unary-expression	2
143	&&		1	unary-expression	2
143	&=		1	unary-expression	2
143	(		1	unary-expression	2
143	)		1	unary-expression	2
143	*		1	unary-expression	2
143	*=		1	unary-expression	2
143	+		1	unary-expression	2
143	++		1	unary-expression	2
143	+=		1	unary-expression	2
143	,		1	unary-expression	2
143	-		1	unary-expression	2
143	--		1	unary-expression	2
143	-=		1	unary-expression	2
143	->		1	unary-expression	2
143	/		1	unary-expression	2
143	/=		1	unary-expression	2
143	:		1	unary-expression	2
143	;		1	unary-expression	2
143	<		1	unary-expression	2
143	<<		1	unary-expression	2
143	<<=		1	unary-expression	2
143	<=		1	unary-expression	2
143	=		1	unary-expression	2
143	==		1	unary-expression	2
143	>		1	unary-expression	2
143	>=		1	unary-expression	2
143	>>		1	unary-expression	2
143	>>=		1	unary-expression	2
143	?		1	unary-expression	2
143	[		1	unary-expression	2
143	]		1	unary-expression	2
143	^		1	unary-expression	2
143	^=		1	unary-expression	2
143	_KULV_END_		1	unary-expression	2
143	auto		1	unary-expression	2
143	break		1	unary-expression	2
143	case		1	unary-expression	2
143	char		1	unary-expression	2
143	character-constant		1	unary-expression	2
143	const		1	unary-expression	2
143	continue		1	unary-expression	2
143	default		1	unary-expression	2
143	do		1	unary-expression	2
143	double		1	unary-expression	2
143	else		1	unary-expression	2
143	enumeration-constant		1	unary-expression	2
143	extern		1	unary-expression	2
143	float		1	unary-expression	2
143	floating-constant		1	unary-expression	2
143	for		1	unary-expression	2
143	goto		1	unary-expression	2
143	identifier		1	unary-expression	2
143	if		1	unary-expression	2
143	int		1	unary-expression	2
143	integer-constant		1	unary-expression	2
143	long		1	unary-expression	2
143	register		1	unary-expression	2
143	return		1	unary-expression	2
143	short		1	unary-expression	2
143	signed		1	unary-expression	2
143	sizeof		1	unary-expression	2
143	static		1	unary-expression	2
143	string-constant		1	unary-expression	2
143	switch		1	unary-expression	2
143	typedef		1	unary-expression	2
143	unsigned		1	unary-expression	2
143	void		1	unary-expression	2
143	volatile		1	unary-expression	2
143	while		1	unary-expression	2
143	{		1	unary-expression	2
143	|		1	unary-expression	2
143	|=		1	unary-expression	2
143	||		1	unary-expression	2
143	}		1	unary-expression	2
143	~		1	unary-expression	2
207	(		0	202
207	)		1	abstract-declarator	0
207	,		1	abstract-declarator	0
207	[		0	203
207	identifier		0	15
271	)		1	parameter-list	1
271	,		1	parameter-list	1
24	(		0	1
24	*		0	2
24	_KULV_END_		2	STARTER	0
24	auto		0	3
24	char		0	4
24	const		0	5
24	double		0	10
24	extern		0	11
24	float		0	13
24	identifier		0	15
24	int		0	16
24	long		0	17
24	register		0	19
24	short		0	20
24	signed		0	21
24	static		0	22
24	typedef		0	27
24	unsigned		0	28
24	void		0	29
24	volatile		0	30
88	,		0	157
88	;		0	158
152	!		0	62
152	&		0	63
152	(		0	64
152	*		0	65
152	+		0	66
152	++		0	67
152	-		0	68
152	--		0	69
152	;		0	70
152	break		0	74
152	case		0	75
152	character-constant		0	77
152	continue		0	81
152	default		0	83
152	do		0	84
152	enumeration-constant		0	85
152	floating-constant		0	90
152	for		0	91
152	goto		0	92
152	identifier		0	93
152	if		0	94
152	integer-constant		0	96
152	return		0	106
152	sizeof		0	109
152	string-constant		0	112
152	switch		0	113
152	while		0	116
152	{		0	43
152	~		0	118
216	!		0	62
216	&		0	63
216	(		0	64
216	*		0	65
216	+		0	66
216	++		0	67
216	-		0	68
216	--		0	69
216	character-constant		0	77
216	enumeration-constant		0	85
216	floating-constant		0	90
216	identifier		0	129
216	integer-constant		0	96
216	sizeof		0	109
216	string-constant		0	112
216	~		0	118
280	!		0	62
280	&		0	63
280	(		0	64
280	*		0	65
280	+		0	66
280	++		0	67
280	-		0	68
280	--		0	69
280	;		0	70
280	break		0	74
280	case		0	75
280	character-constant		0	77
280	continue		0	81
280	default		0	83
280	do		0	84
280	enumeration-constant		0	85
280	floating-constant		0	90
280	for		0	91
280	goto		0	92
280	identifier		0	93
280	if		0	94
280	integer-constant		0	96
280	return		0	106
280	sizeof		0	109
280	string-constant		0	112
280	switch		0	113
280	while		0	116
280	{		0	43
280	~		0	118
33	(		1	pointer	1
33	)		1	pointer	1
33	*		0	2
33	,		1	pointer	1
33	[		1	pointer	1
33	const		0	5
33	identifier		1	pointer	1
33	volatile		0	30
97	!		1	statement	4
97	%=		1	statement	4
97	&		1	statement	4
97	&=		1	statement	4
97	(		1	statement	4
97	)		1	statement	4
97	*		1	statement	4
97	*=		1	statement	4
97	+		1	statement	4
97	++		1	statement	4
97	+=		1	statement	4
97	,		1	statement	4
97	-		1	statement	4
97	--		1	statement	4
97	-=		1	statement	4
97	/=		1	statement	4
97	;		1	statement	4
97	<<=		1	statement	4
97	=		1	statement	4
97	>>=		1	statement	4
97	^=		1	statement	4
97	_KULV_END_		1	statement	4
97	auto		1	statement	4
97	break		1	statement	4
97	case		1	statement	4
97	char		1	statement	4
97	character-constant		1	statement	4
97	const		1	statement	4
97	continue		1	statement	4
97	default		1	statement	4
97	do		1	statement	4
97	double		1	statement	4
97	else		1	statement	4
97	enumeration-constant		1	statement	4
97	extern		1	statement	4
97	float		1	statement	4
97	floating-constant		1	statement	4
97	for		1	statement	4
97	goto		1	statement	4
97	identifier		1	statement	4
97	if		1	statement	4
97	int		1	statement	4
97	integer-constant		1	statement	4
97	long		1	statement	4
97	register		1	statement	4
97	return		1	statement	4
97	short		1	statement	4
97	signed		1	statement	4
97	sizeof		1	statement	4
97	static		1	statement	4
97	string-constant		1	statement	4
97	switch		1	statement	4
97	typedef		1	statement	4
97	unsigned		1	statement	4
97	void		1	statement	4
97	volatile		1	statement	4
97	while		1	statement	4
97	{		1	statement	4
97	|=		1	statement	4
97	}		1	statement	4
97	~		1	statement	4
161	!		0	62
161	&		0	63
161	(		0	64
161	*		0	65
161	+		0	66
161	++		0	67
161	-		0	68
161	--		0	69
161	;		0	70
161	break		0	74
161	case		0	75
161	character-constant		0	77
161	continue		0	81
161	default		0	83
161	do		0	84
161	enumeration-constant		0	85
161	floating-constant		0	90
161	for		0	91
161	goto		0	92
161	identifier		0	93
161	if		0	94
161	integer-constant		0	96
161	return		0	106
161	sizeof		0	109
161	string-constant		0	112
161	switch		0	113
161	while		0	116
161	{		0	43
161	~		0	118
225	!		0	62
225	&		0	63
225	(		0	64
225	*		0	65
225	+		0	66
225	++		0	67
225	-		0	68
225	--		0	69
225	;		0	70
225	break		0	74
225	case		0	75
225	character-constant		0	77
225	continue		0	81
225	default		0	83
225	do		0	84
225	enumeration-constant		0	85
225	floating-constant		0	90
225	for		0	91
225	goto		0	92
225	identifier		0	93
225	if		0	94
225	integer-constant		0	96
225	return		0	106
225	sizeof		0	109
225	string-constant		0	112
225	switch		0	113
225	while		0	116
225	{		0	43
225	~		0	118
289	(		1	direct-abstract-declarator	6
289	)		1	direct-abstract-declarator	6
289	,		1	direct-abstract-declarator	6
289	[		1	direct-abstract-declarator	6
10	(		1	type-specifier	6
10	)		1	type-specifier	6
10	*		1	type-specifier	6
10	,		1	type-specifier	6
10	;		1	type-specifier	6
10	[		1	type-specifier	6
10	auto		1	type-specifier	6
10	char		1	type-specifier	6
10	const		1	type-specifier	6
10	double		1	type-specifier	6
10	extern		1	type-specifier	6
10	float		1	type-specifier	6
10	identifier		1	type-specifier	6
10	int		1	type-specifier	6
10	long		1	type-specifier	6
10	register		1	type-specifier	6
10	short		1	type-specifier	6
10	signed		1	type-specifier	6
10	static		1	type-specifier	6
10	typedef		1	type-specifier	6
10	unsigned		1	type-specifier	6
10	void		1	type-specifier	6
10	volatile		1	type-specifier	6
74	;		0	147
138	(		0	217
138	)		1	type-name	0
138	*		0	2
138	[		0	203
202	(		0	202
202	)		0	261
202	*		0	2
202	[		0	203
202	auto		0	3
202	char		0	4
202	const		0	5
202	double		0	10
202	extern		0	11
202	float		0	13
202	identifier		0	15
202	int		0	16
202	long		0	17
202	register		0	19
202	short		0	20
202	signed		0	21
202	static		0	22
202	typedef		0	27
202	unsigned		0	28
202	void		0	29
202	volatile		0	30
266	)		0	291
266	auto		0	3
266	char		0	4
266	const		0	5
266	double		0	10
266	extern		0	11
266	float		0	13
266	int		0	16
266	long		0	17
266	register		0	19
266	short		0	20
266	signed		0	21
266	static		0	22
266	typedef		0	27
266	unsigned		0	28
266	void		0	29
266	volatile		0	30
330	!		1	iteration-statement	7
330	%=		1	iteration-statement	7
330	&		1	iteration-statement	7
330	&=		1	iteration-statement	7
330	(		1	iteration-statement	7
330	)		1	iteration-statement	7
330	*		1	iteration-statement	7
330	*=		1	iteration-statement	7
330	+		1	iteration-statement	7
330	++		1	iteration-statement	7
330	+=		1	iteration-statement	7
330	,		1	iteration-statement	7
330	-		1	iteration-statement	7
330	--		1	iteration-statement	7
330	-=		1	iteration-statement	7
330	/=		1	iteration-statement	7
330	;		1	iteration-statement	7
330	<<=		1	iteration-statement	7
330	=		1	iteration-statement	7
330	>>=		1	iteration-statement	7
330	^=		1	iteration-statement	7
330	_KULV_END_		1	iteration-statement	7
330	auto		1	iteration-statement	7
330	break		1	iteration-statement	7
330	case		1	iteration-statement	7
330	char		1	iteration-statement	7
330	character-constant		1	iteration-statement	7
330	const		1	iteration-statement	7
330	continue		1	iteration-statement	7
330	default		1	iteration-statement	7
330	do		1	iteration-statement	7
330	double		1	iteration-statement	7
330	else		1	iteration-statement	7
330	enumeration-constant		1	iteration-statement	7
330	extern		1	iteration-statement	7
330	float		1	iteration-statement	7
330	floating-constant		1	iteration-statement	7
330	for		1	iteration-statement	7
330	goto		1	iteration-statement	7
330	identifier		1	iteration-statement	7
330	if		1	iteration-statement	7
330	int		1	iteration-statement	7
330	integer-constant		1	iteration-statement	7
330	long		1	iteration-statement	7
330	register		1	iteration-statement	7
330	return		1	iteration-statement	7
330	short		1	iteration-statement	7
330	signed		1	iteration-statement	7
330	sizeof		1	iteration-statement	7
330	static		1	iteration-statement	7
330	string-constant		1	iteration-statement	7
330	switch		1	iteration-statement	7
330	typedef		1	iteration-statement	7
330	unsigned		1	iteration-statement	7
330	void		1	iteration-statement	7
330	volatile		1	iteration-statement	7
330	while		1	iteration-statement	7
330	{		1	iteration-statement	7
330	|=		1	iteration-statement	7
330	}		1	iteration-statement	7
330	~		1	iteration-statement	7
19	(		1	storage-class-specifier	1
19	)		1	storage-class-specifier	1
19	*		1	storage-class-specifier	1
19	,		1	storage-class-specifier	1
19	;		1	storage-class-specifier	1
19	[		1	storage-class-specifier	1
19	auto		1	storage-class-specifier	1
19	char		1	storage-class-specifier	1
19	const		1	storage-class-specifier	1
19	double		1	storage-class-specifier	1
19	extern		1	storage-class-specifier	1
19	float		1	storage-class-specifier	1
19	identifier		1	storage-class-specifier	1
19	int		1	storage-class-specifier	1
19	long		1	storage-class-specifier	1
19	register		1	storage-class-specifier	1
19	short		1	storage-class-specifier	1
19	signed		1	storage-class-specifier	1
19	static		1	storage-class-specifier	1
19	typedef		1	storage-class-specifier	1
19	unsigned		1	storage-class-specifier	1
19	void		1	storage-class-specifier	1
19	volatile		1	storage-class-specifier	1
83	:		0	152
147	!		1	jump-statement	2
147	%=		1	jump-statement	2
147	&		1	jump-statement	2
147	&=		1	jump-statement	2
147	(		1	jump-statement	2
147	)		1	jump-statement	2
147	*		1	jump-statement	2
147	*=		1	jump-statement	2
147	+		1	jump-statement	2
147	++		1	jump-statement	2
147	+=		1	jump-statement	2
147	,		1	jump-statement	2
147	-		1	jump-statement	2
147	--		1	jump-statement	2
147	-=		1	jump-statement	2
147	/=		1	jump-statement	2
147	;		1	jump-statement	2
147	<<=		1	jump-statement	2
147	=		1	jump-statement	2
147	>>=		1	jump-statement	2
147	^=		1	jump-statement	2
147	_KULV_END_		1	jump-statement	2
147	auto		1	jump-statement	2
147	break		1	jump-statement	2
147	case		1	jump-statement	2
147	char		1	jump-statement	2
147	character-constant		1	jump-statement	2
147	const		1	jump-statement	2
147	continue		1	jump-statement	2
147	default		1	jump-statement	2
147	do		1	jump-statement	2
147	double		1	jump-statement	2
147	else		1	jump-statement	2
147	enumeration-constant		1	jump-statement	2
147	extern		1	jump-statement	2
147	float		1	jump-statement	2
147	floating-constant		1	jump-statement	2
147	for		1	jump-statement	2
147	goto		1	jump-statement	2
147	identifier		1	jump-statement	2
147	if		1	jump-statement	2
147	int		1	jump-statement	2
147	integer-constant		1	jump-statement	2
147	long		1	jump-statement	2
147	register		1	jump-statement	2
147	return		1	jump-statement	2
147	short		1	jump-statement	2
147	signed		1	jump-statement	2
147	sizeof		1	jump-statement	2
147	static		1	jump-statement	2
147	string-constant		1	jump-statement	2
147	switch		1	jump-statement	2
147	typedef		1	jump-statement	2
147	unsigned		1	jump-statement	2
147	void		1	jump-statement	2
147	volatile		1	jump-statement	2
147	while		1	jump-statement	2
147	{		1	jump-statement	2
147	|=		1	jump-statement	2
147	}		1	jump-statement	2
147	~		1	jump-statement	2
211	...		0	270
211	auto		0	3
211	char		0	4
211	const		0	5
211	double		0	10
211	extern		0	11
211	float		0	13
211	int		0	16
211	long		0	17
211	register		0	19
211	short		0	20
211	signed		0	21
211	static		0	22
211	typedef		0	27
211	unsigned		0	28
211	void		0	29
211	volatile		0	30
275	!		1	labeled-statement	1
275	%=		1	labeled-statement	1
275	&		1	labeled-statement	1
275	&=		1	labeled-statement	1
275	(		1	labeled-statement	1
275	)		1	labeled-statement	1
275	*		1	labeled-statement	1
275	*=		1	labeled-statement	1
275	+		1	labeled-statement	1
275	++		1	labeled-statement	1
275	+=		1	labeled-statement	1
275	,		1	labeled-statement	1
275	-		1	labeled-statement	1
275	--		1	labeled-statement	1
275	-=		1	labeled-statement	1
275	/=		1	labeled-statement	1
275	;		1	labeled-statement	1
275	<<=		1	labeled-statement	1
275	=		1	labeled-statement	1
275	>>=		1	labeled-statement	1
275	^=		1	labeled-statement	1
275	_KULV_END_		1	labeled-statement	1
275	auto		1	labeled-statement	1
275	break		1	labeled-statement	1
275	case		1	labeled-statement	1
275	char		1	labeled-statement	1
275	character-constant		1	labeled-statement	1
275	const		1	labeled-statement	1
275	continue		1	labeled-statement	1
275	default		1	labeled-statement	1
275	do		1	labeled-statement	1
275	double		1	labeled-statement	1
275	else		1	labeled-statement	1
275	enumeration-constant		1	labeled-statement	1
275	extern		1	labeled-statement	1
275	float		1	labeled-statement	1
275	floating-constant		1	labeled-statement	1
275	for		1	labeled-statement	1
275	goto		1	labeled-statement	1
275	identifier		1	labeled-statement	1
275	if		1	labeled-statement	1
275	int		1	labeled-statement	1
275	integer-constant		1	labeled-statement	1
275	long		1	labeled-statement	1
275	register		1	labeled-statement	1
275	return		1	labeled-statement	1
275	short		1	labeled-statement	1
275	signed		1	labeled-statement	1
275	sizeof		1	labeled-statement	1
275	static		1	labeled-statement	1
275	string-constant		1	labeled-statement	1
275	switch		1	labeled-statement	1
275	typedef		1	labeled-statement	1
275	unsigned		1	labeled-statement	1
275	void		1	labeled-statement	1
275	volatile		1	labeled-statement	1
275	while		1	labeled-statement	1
275	{		1	labeled-statement	1
275	|=		1	labeled-statement	1
275	}		1	labeled-statement	1
275	~		1	labeled-statement	1
60	(		1	function-definition	1
60	*		1	function-definition	1
60	_KULV_END_		1	function-definition	1
60	auto		1	function-definition	1
60	char		1	function-definition	1
60	const		1	function-definition	1
60	double		1	function-definition	1
60	extern		1	function-definition	1
60	float		1	function-definition	1
60	identifier		1	function-definition	1
60	int		1	function-definition	1
60	long		1	function-definition	1
60	register		1	function-definition	1
60	short		1	function-definition	1
60	signed		1	function-definition	1
60	static		1	function-definition	1
60	typedef		1	function-definition	1
60	unsigned		1	function-definition	1
60	void		1	function-definition	1
60	volatile		1	function-definition	1
60	{		1	function-definition	1
124	)		1	parameter-list	0
124	,		1	parameter-list	0
188	!		1	assignment-operator	3
188	&		1	assignment-operator	3
188	(		1	assignment-operator	3
188	*		1	assignment-operator	3
188	+		1	assignment-operator	3
188	++		1	assignment-operator	3
188	-		1	assignment-operator	3
188	--		1	assignment-operator	3
188	character-constant		1	assignment-operator	3
188	enumeration-constant		1	assignment-operator	3
188	floating-constant		1	assignment-operator	3
188	identifier		1	assignment-operator	3
188	integer-constant		1	assignment-operator	3
188	sizeof		1	assignment-operator	3
188	string-constant		1	assignment-operator	3
188	~		1	assignment-operator	3
252	!		1	relational-expression	2
252	!=		1	relational-expression	2
252	%		1	relational-expression	2
252	%=		1	relational-expression	2
252	&		1	relational-expression	2
252	&&		1	relational-expression	2
252	&=		1	relational-expression	2
252	(		1	relational-expression	2
252	)		1	relational-expression	2
252	*		1	relational-expression	2
252	*=		1	relational-expression	2
252	+		1	relational-expression	2
252	++		1	relational-expression	2
252	+=		1	relational-expression	2
252	,		1	relational-expression	2
252	-		1	relational-expression	2
252	--		1	relational-expression	2
252	-=		1	relational-expression	2
252	->		1	relational-expression	2
252	/		1	relational-expression	2
252	/=		1	relational-expression	2
252	:		1	relational-expression	2
252	;		1	relational-expression	2
252	<		1	relational-expression	2
252	<<		0	181
252	<<=		1	relational-expression	2
252	<=		1	relational-expression	2
252	=		1	relational-expression	2
252	==		1	relational-expression	2
252	>		1	relational-expression	2
252	>=		1	relational-expression	2
252	>>		0	182
252	>>=		1	relational-expression	2
252	?		1	relational-expression	2
252	[		1	relational-expression	2
252	]		1	relational-expression	2
252	^		1	relational-expression	2
252	^=		1	relational-expression	2
252	_KULV_END_		1	relational-expression	2
252	auto		1	relational-expression	2
252	break		1	relational-expression	2
252	case		1	relational-expression	2
252	char		1	relational-expression	2
252	character-constant		1	relational-expression	2
252	const		1	relational-expression	2
252	continue		1	relational-expression	2
252	default		1	relational-expression	2
252	do		1	relational-expression	2
252	double		1	relational-expression	2
252	else		1	relational-expression	2
252	enumeration-constant		1	relational-expression	2
252	extern		1	relational-expression	2
252	float		1	relational-expression	2
252	floating-constant		1	relational-expression	2
252	for		1	relational-expression	2
252	goto		1	relational-expression	2
252	identifier		1	relational-expression	2
252	if		1	relational-expression	2
252	int		1	relational-expression	2
252	integer-constant		1	relational-expression	2
252	long		1	relational-expression	2
252	register		1	relational-expression	2
252	return		1	relational-expression	2
252	short		1	relational-expression	2
252	signed		1	relational-expression	2
252	sizeof		1	relational-expression	2
252	static		1	relational-expression	2
252	string-constant		1	relational-expression	2
252	switch		1	relational-expression	2
252	typedef		1	relational-expression	2
252	unsigned		1	relational-expression	2
252	void		1	relational-expression	2
252	volatile		1	relational-expression	2
252	while		1	relational-expression	2
252	{		1	relational-expression	2
252	|		1	relational-expression	2
252	|=		1	relational-expression	2
252	||		1	relational-expression	2
252	}		1	relational-expression	2
252	~		1	relational-expression	2
316	!		0	62
316	&		0	63
316	(		0	64
316	*		0	65
316	+		0	66
316	++		0	67
316	-		0	68
316	--		0	69
316	;		0	70
316	break		0	74
316	case		0	75
316	character-constant		0	77
316	continue		0	81
316	default		0	83
316	do		0	84
316	enumeration-constant		0	85
316	floating-constant		0	90
316	for		0	91
316	goto		0	92
316	identifier		0	93
316	if		0	94
316	integer-constant		0	96
316	return		0	106
316	sizeof		0	109
316	string-constant		0	112
316	switch		0	113
316	while		0	116
316	{		0	43
316	~		0	118
5	(		1	type-qualifier	0
5	)		1	type-qualifier	0
5	*		1	type-qualifier	0
5	,		1	type-qualifier	0
5	;		1	type-qualifier	0
5	[		1	type-qualifier	0
5	auto		1	type-qualifier	0
5	char		1	type-qualifier	0
5	const		1	type-qualifier	0
5	double		1	type-qualifier	0
5	extern		1	type-qualifier	0
5	float		1	type-qualifier	0
5	identifier		1	type-qualifier	0
5	int		1	type-qualifier	0
5	long		1	type-qualifier	0
5	register		1	type-qualifier	0
5	short		1	type-qualifier	0
5	signed		1	type-qualifier	0
5	static		1	type-qualifier	0
5	typedef		1	type-qualifier	0
5	unsigned		1	type-qualifier	0
5	void		1	type-qualifier	0
5	volatile		1	type-qualifier	0
69	!		0	62
69	&		0	63
69	(		0	141
69	*		0	65
69	+		0	66
69	++		0	67
69	-		0	68
69	--		0	69
69	character-constant		0	77
69	enumeration-constant		0	85
69	floating-constant		0	90
69	identifier		0	129
69	integer-constant		0	96
69	sizeof		0	109
69	string-constant		0	112
69	~		0	118
133	!		1	init-declarator	1
133	%=		1	init-declarator	1
133	&		1	init-declarator	1
133	&=		1	init-declarator	1
133	(		1	init-declarator	1
133	)		1	init-declarator	1
133	*		1	init-declarator	1
133	*=		1	init-declarator	1
133	+		1	init-declarator	1
133	++		1	init-declarator	1
133	+=		1	init-declarator	1
133	,		1	init-declarator	1
133	-		1	init-declarator	1
133	--		1	init-declarator	1
133	-=		1	init-declarator	1
133	/=		1	init-declarator	1
133	;		1	init-declarator	1
133	<<=		1	init-declarator	1
133	=		1	init-declarator	1
133	>>=		1	init-declarator	1
133	^=		1	init-declarator	1
133	_KULV_END_		1	init-declarator	1
133	auto		1	init-declarator	1
133	break		1	init-declarator	1
133	case		1	init-declarator	1
133	char		1	init-declarator	1
133	character-constant		1	init-declarator	1
133	const		1	init-declarator	1
133	continue		1	init-declarator	1
133	default		1	init-declarator	1
133	do		1	init-declarator	1
133	double		1	init-declarator	1
133	else		1	init-declarator	1
133	enumeration-constant		1	init-declarator	1
133	extern		1	init-declarator	1
133	float		1	init-declarator	1
133	floating-constant		1	init-declarator	1
133	for		1	init-declarator	1
133	goto		1	init-declarator	1
133	identifier		1	init-declarator	1
133	if		1	init-declarator	1
133	int		1	init-declarator	1
133	integer-constant		1	init-declarator	1
133	long		1	init-declarator	1
133	register		1	init-declarator	1
133	return		1	init-declarator	1
133	short		1	init-declarator	1
133	signed		1	init-declarator	1
133	sizeof		1	init-declarator	1
133	static		1	init-declarator	1
133	string-constant		1	init-declarator	1
133	switch		1	init-declarator	1
133	typedef		1	init-declarator	1
133	unsigned		1	init-declarator	1
133	void		1	init-declarator	1
133	volatile		1	init-declarator	1
133	while		1	init-declarator	1
133	{		1	init-declarator	1
133	|=		1	init-declarator	1
133	}		1	init-declarator	1
133	~		1	init-declarator	1
197	!		1	assignment-operator	9
197	&		1	assignment-operator	9
197	(		1	assignment-operator	9
197	*		1	assignment-operator	9
197	+		1	assignment-operator	9
197	++		1	assignment-operator	9
197	-		1	assignment-operator	9
197	--		1	assignment-operator	9
197	character-constant		1	assignment-operator	9
197	enumeration-constant		1	assignment-operator	9
197	floating-constant		1	assignment-operator	9
197	identifier		1	assignment-operator	9
197	integer-constant		1	assignment-operator	9
197	sizeof		1	assignment-operator	9
197	string-constant		1	assignment-operator	9
197	~		1	assignment-operator	9
261	(		1	direct-abstract-declarator	5
261	)		1	direct-abstract-declarator	5
261	,		1	direct-abstract-declarator	5
261	[		1	direct-abstract-declarator	5
325	!		1	iteration-statement	4
325	%=		1	iteration-statement	4
325	&		1	iteration-statement	4
325	&=		1	iteration-statement	4
325	(		1	iteration-statement	4
325	)		1	iteration-statement	4
325	*		1	iteration-statement	4
325	*=		1	iteration-statement	4
325	+		1	iteration-statement	4
325	++		1	iteration-statement	4
325	+=		1	iteration-statement	4
325	,		1	iteration-statement	4
325	-		1	iteration-statement	4
325	--		1	iteration-statement	4
325	-=		1	iteration-statement	4
325	/=		1	iteration-statement	4
325	;		1	iteration-statement	4
325	<<=		1	iteration-statement	4
325	=		1	iteration-statement	4
325	>>=		1	iteration-statement	4
325	^=		1	iteration-statement	4
325	_KULV_END_		1	iteration-statement	4
325	auto		1	iteration-statement	4
325	break		1	iteration-statement	4
325	case		1	iteration-statement	4
325	char		1	iteration-statement	4
325	character-constant		1	iteration-statement	4
325	const		1	iteration-statement	4
325	continue		1	iteration-statement	4
325	default		1	iteration-statement	4
325	do		1	iteration-statement	4
325	double		1	iteration-statement	4
325	else		1	iteration-statement	4
325	enumeration-constant		1	iteration-statement	4
325	extern		1	iteration-statement	4
325	float		1	iteration-statement	4
325	floating-constant		1	iteration-statement	4
325	for		1	iteration-statement	4
325	goto		1	iteration-statement	4
325	identifier		1	iteration-statement	4
325	if		1	iteration-statement	4
325	int		1	iteration-statement	4
325	integer-constant		1	iteration-statement	4
325	long		1	iteration-statement	4
325	register		1	iteration-statement	4
325	return		1	iteration-statement	4
325	short		1	iteration-statement	4
325	signed		1	iteration-statement	4
325	sizeof		1	iteration-statement	4
325	static		1	iteration-statement	4
325	string-constant		1	iteration-statement	4
325	switch		1	iteration-statement	4
325	typedef		1	iteration-statement	4
325	unsigned		1	iteration-statement	4
325	void		1	iteration-statement	4
325	volatile		1	iteration-statement	4
325	while		1	iteration-statement	4
325	{		1	iteration-statement	4
325	|=		1	iteration-statement	4
325	}		1	iteration-statement	4
325	~		1	iteration-statement	4
46	!		1	declarator	1
46	%=		1	declarator	1
46	&		1	declarator	1
46	&=		1	declarator	1
46	(		0	44
46	)		1	declarator	1
46	*		1	declarator	1
46	*=		1	declarator	1
46	+		1	declarator	1
46	++		1	declarator	1
46	+=		1	declarator	1
46	,		1	declarator	1
46	-		1	declarator	1
46	--		1	declarator	1
46	-=		1	declarator	1
46	/=		1	declarator	1
46	;		1	declarator	1
46	<<=		1	declarator	1
46	=		1	declarator	1
46	>>=		1	declarator	1
46	[		0	45
46	^=		1	declarator	1
46	_KULV_END_		1	declarator	1
46	auto		1	declarator	1
46	break		1	declarator	1
46	case		1	declarator	1
46	char		1	declarator	1
46	character-constant		1	declarator	1
46	const		1	declarator	1
46	continue		1	declarator	1
46	default		1	declarator	1
46	do		1	declarator	1
46	double		1	declarator	1
46	else		1	declarator	1
46	enumeration-constant		1	declarator	1
46	extern		1	declarator	1
46	float		1	declarator	1
46	floating-constant		1	declarator	1
46	for		1	declarator	1
46	goto		1	declarator	1
46	identifier		1	declarator	1
46	if		1	declarator	1
46	int		1	declarator	1
46	integer-constant		1	declarator	1
46	long		1	declarator	1
46	register		1	declarator	1
46	return		1	declarator	1
46	short		1	declarator	1
46	signed		1	declarator	1
46	sizeof		1	declarator	1
46	static		1	declarator	1
46	string-constant		1	declarator	1
46	switch		1	declarator	1
46	typedef		1	declarator	1
46	unsigned		1	declarator	1
46	void		1	declarator	1
46	volatile		1	declarator	1
46	while		1	declarator	1
46	{		1	declarator	1
46	|=		1	declarator	1
46	}		1	declarator	1
46	~		1	declarator	1
110	!		1	statement-list	0
110	&		1	statement-list	0
110	(		1	statement-list	0
110	*		1	statement-list	0
110	+		1	statement-list	0
110	++		1	statement-list	0
110	-		1	statement-list	0
110	--		1	statement-list	0
110	;		1	statement-list	0
110	break		1	statement-list	0
110	case		1	statement-list	0
110	character-constant		1	statement-list	0
110	continue		1	statement-list	0
110	default		1	statement-list	0
110	do		1	statement-list	0
110	enumeration-constant		1	statement-list	0
110	floating-constant		1	statement-list	0
110	for		1	statement-list	0
110	goto		1	statement-list	0
110	identifier		1	statement-list	0
110	if		1	statement-list	0
110	integer-constant		1	statement-list	0
110	return		1	statement-list	0
110	sizeof		1	statement-list	0
110	string-constant		1	statement-list	0
110	switch		1	statement-list	0
110	while		1	statement-list	0
110	{		1	statement-list	0
110	}		1	statement-list	0
110	~		1	statement-list	0
174	!		0	62
174	&		0	63
174	(		0	64
174	*		0	65
174	+		0	66
174	++		0	67
174	-		0	68
174	--		0	69
174	character-constant		0	77
174	enumeration-constant		0	85
174	floating-constant		0	90
174	identifier		0	129
174	integer-constant		0	96
174	sizeof		0	109
174	string-constant		0	112
174	~		0	118
238	!		1	inclusive-OR-expression	1
238	!=		1	inclusive-OR-expression	1
238	%		1	inclusive-OR-expression	1
238	%=		1	inclusive-OR-expression	1
238	&		1	inclusive-OR-expression	1
238	&&		1	inclusive-OR-expression	1
238	&=		1	inclusive-OR-expression	1
238	(		1	inclusive-OR-expression	1
238	)		1	inclusive-OR-expression	1
238	*		1	inclusive-OR-expression	1
238	*=		1	inclusive-OR-expression	1
238	+		1	inclusive-OR-expression	1
238	++		1	inclusive-OR-expression	1
238	+=		1	inclusive-OR-expression	1
238	,		1	inclusive-OR-expression	1
238	-		1	inclusive-OR-expression	1
238	--		1	inclusive-OR-expression	1
238	-=		1	inclusive-OR-expression	1
238	->		1	inclusive-OR-expression	1
238	/		1	inclusive-OR-expression	1
238	/=		1	inclusive-OR-expression	1
238	:		1	inclusive-OR-expression	1
238	;		1	inclusive-OR-expression	1
238	<		1	inclusive-OR-expression	1
238	<<		1	inclusive-OR-expression	1
238	<<=		1	inclusive-OR-expression	1
238	<=		1	inclusive-OR-expression	1
238	=		1	inclusive-OR-expression	1
238	==		1	inclusive-OR-expression	1
238	>		1	inclusive-OR-expression	1
238	>=		1	inclusive-OR-expression	1
238	>>		1	inclusive-OR-expression	1
238	>>=		1	inclusive-OR-expression	1
238	?		1	inclusive-OR-expression	1
238	[		1	inclusive-OR-expression	1
238	]		1	inclusive-OR-expression	1
238	^		0	156
238	^=		1	inclusive-OR-expression	1
238	_KULV_END_		1	inclusive-OR-expression	1
238	auto		1	inclusive-OR-expression	1
238	break		1	inclusive-OR-expression	1
238	case		1	inclusive-OR-expression	1
238	char		1	inclusive-OR-expression	1
238	character-constant		1	inclusive-OR-expression	1
238	const		1	inclusive-OR-expression	1
238	continue		1	inclusive-OR-expression	1
238	default		1	inclusive-OR-expression	1
238	do		1	inclusive-OR-expression	1
238	double		1	inclusive-OR-expression	1
238	else		1	inclusive-OR-expression	1
238	enumeration-constant		1	inclusive-OR-expression	1
238	extern		1	inclusive-OR-expression	1
238	float		1	inclusive-OR-expression	1
238	floating-constant		1	inclusive-OR-expression	1
238	for		1	inclusive-OR-expression	1
238	goto		1	inclusive-OR-expression	1
238	identifier		1	inclusive-OR-expression	1
238	if		1	inclusive-OR-expression	1
238	int		1	inclusive-OR-expression	1
238	integer-constant		1	inclusive-OR-expression	1
238	long		1	inclusive-OR-expression	1
238	register		1	inclusive-OR-expression	1
238	return		1	inclusive-OR-expression	1
238	short		1	inclusive-OR-expression	1
238	signed		1	inclusive-OR-expression	1
238	sizeof		1	inclusive-OR-expression	1
238	static		1	inclusive-OR-expression	1
238	string-constant		1	inclusive-OR-expression	1
238	switch		1	inclusive-OR-expression	1
238	typedef		1	inclusive-OR-expression	1
238	unsigned		1	inclusive-OR-expression	1
238	void		1	inclusive-OR-expression	1
238	volatile		1	inclusive-OR-expression	1
238	while		1	inclusive-OR-expression	1
238	{		1	inclusive-OR-expression	1
238	|		1	inclusive-OR-expression	1
238	|=		1	inclusive-OR-expression	1
238	||		1	inclusive-OR-expression	1
238	}		1	inclusive-OR-expression	1
238	~		1	inclusive-OR-expression	1
302	!		0	62
302	&		0	63
302	(		0	64
302	*		0	65
302	+		0	66
302	++		0	67
302	-		0	68
302	--		0	69
302	;		0	70
302	break		0	74
302	case		0	75
302	character-constant		0	77
302	continue		0	81
302	default		0	83
302	do		0	84
302	enumeration-constant		0	85
302	floating-constant		0	90
302	for		0	91
302	goto		0	92
302	identifier		0	93
302	if		0	94
302	integer-constant		0	96
302	return		0	106
302	sizeof		0	109
302	string-constant		0	112
302	switch		0	113
302	while		0	116
302	{		0	43
302	~		0	118
55	(		1	function-definition	2
55	*		1	function-definition	2
55	;		1	function-definition	2
55	_KULV_END_		1	function-definition	2
55	auto		1	function-definition	2
55	char		1	function-definition	2
55	const		1	function-definition	2
55	double		1	function-definition	2
55	extern		1	function-definition	2
55	float		1	function-definition	2
55	identifier		1	function-definition	2
55	int		1	function-definition	2
55	long		1	function-definition	2
55	register		1	function-definition	2
55	short		1	function-definition	2
55	signed		1	function-definition	2
55	static		1	function-definition	2
55	typedef		1	function-definition	2
55	unsigned		1	function-definition	2
55	void		1	function-definition	2
55	volatile		1	function-definition	2
119	(		0	202
119	)		1	parameter-declaration	0
119	*		0	2
119	,		1	parameter-declaration	0
119	[		0	203
119	identifier		0	15
183	!		0	62
183	&		0	63
183	(		0	64
183	*		0	65
183	+		0	66
183	++		0	67
183	-		0	68
183	--		0	69
183	char		0	4
183	character-constant		0	77
183	const		0	5
183	double		0	10
183	enumeration-constant		0	85
183	float		0	13
183	floating-constant		0	90
183	identifier		0	129
183	int		0	16
183	integer-constant		0	96
183	long		0	17
183	short		0	20
183	signed		0	21
183	sizeof		0	109
183	string-constant		0	112
183	unsigned		0	28
183	void		0	29
183	volatile		0	30
183	~		0	118
247	!		1	postfix-expression	2
247	!=		1	postfix-expression	2
247	%		1	postfix-expression	2
247	%=		1	postfix-expression	2
247	&		1	postfix-expression	2
247	&&		1	postfix-expression	2
247	&=		1	postfix-expression	2
247	(		1	postfix-expression	2
247	)		1	postfix-expression	2
247	*		1	postfix-expression	2
247	*=		1	postfix-expression	2
247	+		1	postfix-expression	2
247	++		1	postfix-expression	2
247	+=		1	postfix-expression	2
247	,		1	postfix-expression	2
247	-		1	postfix-expression	2
247	--		1	postfix-expression	2
247	-=		1	postfix-expression	2
247	->		1	postfix-expression	2
247	/		1	postfix-expression	2
247	/=		1	postfix-expression	2
247	:		1	postfix-expression	2
247	;		1	postfix-expression	2
247	<		1	postfix-expression	2
247	<<		1	postfix-expression	2
247	<<=		1	postfix-expression	2
247	<=		1	postfix-expression	2
247	=		1	postfix-expression	2
247	==		1	postfix-expression	2
247	>		1	postfix-expression	2
247	>=		1	postfix-expression	2
247	>>		1	postfix-expression	2
247	>>=		1	postfix-expression	2
247	?		1	postfix-expression	2
247	[		1	postfix-expression	2
247	]		1	postfix-expression	2
247	^		1	postfix-expression	2
247	^=		1	postfix-expression	2
247	_KULV_END_		1	postfix-expression	2
247	auto		1	postfix-expression	2
247	break		1	postfix-expression	2
247	case		1	postfix-expression	2
247	char		1	postfix-expression	2
247	character-constant		1	postfix-expression	2
247	const		1	postfix-expression	2
247	continue		1	postfix-expression	2
247	default		1	postfix-expression	2
247	do		1	postfix-expression	2
247	double		1	postfix-expression	2
247	else		1	postfix-expression	2
247	enumeration-constant		1	postfix-expression	2
247	extern		1	postfix-expression	2
247	float		1	postfix-expression	2
247	floating-constant		1	postfix-expression	2
247	for		1	postfix-expression	2
247	goto		1	postfix-expression	2
247	identifier		1	postfix-expression	2
247	if		1	postfix-expression	2
247	int		1	postfix-expression	2
247	integer-constant		1	postfix-expression	2
247	long		1	postfix-expression	2
247	register		1	postfix-expression	2
247	return		1	postfix-expression	2
247	short		1	postfix-expression	2
247	signed		1	postfix-expression	2
247	sizeof		1	postfix-expression	2
247	static		1	postfix-expression	2
247	string-constant		1	postfix-expression	2
247	switch		1	postfix-expression	2
247	typedef		1	postfix-expression	2
247	unsigned		1	postfix-expression	2
247	void		1	postfix-expression	2
247	volatile		1	postfix-expression	2
247	while		1	postfix-expression	2
247	{		1	postfix-expression	2
247	|		1	postfix-expression	2
247	|=		1	postfix-expression	2
247	||		1	postfix-expression	2
247	}		1	postfix-expression	2
247	~		1	postfix-expression	2
311	!		0	62
311	&		0	63
311	(		0	64
311	)		0	321
311	*		0	65
311	+		0	66
311	++		0	67
311	-		0	68
311	--		0	69
311	character-constant		0	77
311	enumeration-constant		0	85
311	floating-constant		0	90
311	identifier		0	129
311	integer-constant		0	96
311	sizeof		0	109
311	string-constant		0	112
311	~		0	118
0	(		0	1
0	*		0	2
0	auto		0	3
0	char		0	4
0	const		0	5
0	double		0	10
0	extern		0	11
0	float		0	13
0	identifier		0	15
0	int		0	16
0	long		0	17
0	register		0	19
0	short		0	20
0	signed		0	21
0	static		0	22
0	typedef		0	27
0	unsigned		0	28
0	void		0	29
0	volatile		0	30
64	!		0	62
64	&		0	63
64	(		0	64
64	*		0	65
64	+		0	66
64	++		0	67
64	-		0	68
64	--		0	69
64	char		0	4
64	character-constant		0	77
64	const		0	5
64	double		0	10
64	enumeration-constant		0	85
64	float		0	13
64	floating-constant		0	90
64	identifier		0	129
64	int		0	16
64	integer-constant		0	96
64	long		0	17
64	short		0	20
64	signed		0	21
64	sizeof		0	109
64	string-constant		0	112
64	unsigned		0	28
64	void		0	29
64	volatile		0	30
64	~		0	118
128	]		0	212
192	!		1	assignment-operator	5
192	&		1	assignment-operator	5
192	(		1	assignment-operator	5
192	*		1	assignment-operator	5
192	+		1	assignment-operator	5
192	++		1	assignment-operator	5
192	-		1	assignment-operator	5
192	--		1	assignment-operator	5
192	character-constant		1	assignment-operator	5
192	enumeration-constant		1	assignment-operator	5
192	floating-constant		1	assignment-operator	5
192	identifier		1	assignment-operator	5
192	integer-constant		1	assignment-operator	5
192	sizeof		1	assignment-operator	5
192	string-constant		1	assignment-operator	5
192	~		1	assignment-operator	5
256	!		1	shift-expression	2
256	!=		1	shift-expression	2
256	%		1	shift-expression	2
256	%=		1	shift-expression	2
256	&		1	shift-expression	2
256	&&		1	shift-expression	2
256	&=		1	shift-expression	2
256	(		1	shift-expression	2
256	)		1	shift-expression	2
256	*		1	shift-expression	2
256	*=		1	shift-expression	2
256	+		0	145
256	++		1	shift-expression	2
256	+=		1	shift-expression	2
256	,		1	shift-expression	2
256	-		0	146
256	--		1	shift-expression	2
256	-=		1	shift-expression	2
256	->		1	shift-expression	2
256	/		1	shift-expression	2
256	/=		1	shift-expression	2
256	:		1	shift-expression	2
256	;		1	shift-expression	2
256	<		1	shift-expression	2
256	<<		1	shift-expression	2
256	<<=		1	shift-expression	2
256	<=		1	shift-expression	2
256	=		1	shift-expression	2
256	==		1	shift-expression	2
256	>		1	shift-expression	2
256	>=		1	shift-expression	2
256	>>		1	shift-expression	2
256	>>=		1	shift-expression	2
256	?		1	shift-expression	2
256	[		1	shift-expression	2
256	]		1	shift-expression	2
256	^		1	shift-expression	2
256	^=		1	shift-expression	2
256	_KULV_END_		1	shift-expression	2
256	auto		1	shift-expression	2
256	break		1	shift-expression	2
256	case		1	shift-expression	2
256	char		1	shift-expression	2
256	character-constant		1	shift-expression	2
256	const		1	shift-expression	2
256	continue		1	shift-expression	2
256	default		1	shift-expression	2
256	do		1	shift-expression	2
256	double		1	shift-expression	2
256	else		1	shift-expression	2
256	enumeration-constant		1	shift-expression	2
256	extern		1	shift-expression	2
256	float		1	shift-expression	2
256	floating-constant		1	shift-expression	2
256	for		1	shift-expression	2
256	goto		1	shift-expression	2
256	identifier		1	shift-expression	2
256	if		1	shift-expression	2
256	int		1	shift-expression	2
256	integer-constant		1	shift-expression	2
256	long		1	shift-expression	2
256	register		1	shift-expression	2
256	return		1	shift-expression	2
256	short		1	shift-expression	2
256	signed		1	shift-expression	2
256	sizeof		1	shift-expression	2
256	static		1	shift-expression	2
256	string-constant		1	shift-expression	2
256	switch		1	shift-expression	2
256	typedef		1	shift-expression	2
256	unsigned		1	shift-expression	2
256	void		1	shift-expression	2
256	volatile		1	shift-expression	2
256	while		1	shift-expression	2
256	{		1	shift-expression	2
256	|		1	shift-expression	2
256	|=		1	shift-expression	2
256	||		1	shift-expression	2
256	}		1	shift-expression	2
256	~		1	shift-expression	2
320	)		0	328
320	,		0	157
41	(		0	1
41	*		0	2
41	;		0	35
41	identifier		0	15
105	!		1	equality-expression	0
105	!=		1	equality-expression	0
105	%		1	equality-expression	0
105	%=		1	equality-expression	0
105	&		1	equality-expression	0
105	&&		1	equality-expression	0
105	&=		1	equality-expression	0
105	(		1	equality-expression	0
105	)		1	equality-expression	0
105	*		1	equality-expression	0
105	*=		1	equality-expression	0
105	+		1	equality-expression	0
105	++		1	equality-expression	0
105	+=		1	equality-expression	0
105	,		1	equality-expression	0
105	-		1	equality-expression	0
105	--		1	equality-expression	0
105	-=		1	equality-expression	0
105	->		1	equality-expression	0
105	/		1	equality-expression	0
105	/=		1	equality-expression	0
105	:		1	equality-expression	0
105	;		1	equality-expression	0
105	<		0	175
105	<<		1	equality-expression	0
105	<<=		1	equality-expression	0
105	<=		0	176
105	=		1	equality-expression	0
105	==		1	equality-expression	0
105	>		0	177
105	>=		0	178
105	>>		1	equality-expression	0
105	>>=		1	equality-expression	0
105	?		1	equality-expression	0
105	[		1	equality-expression	0
105	]		1	equality-expression	0
105	^		1	equality-expression	0
105	^=		1	equality-expression	0
105	_KULV_END_		1	equality-expression	0
105	auto		1	equality-expression	0
105	break		1	equality-expression	0
105	case		1	equality-expression	0
105	char		1	equality-expression	0
105	character-constant		1	equality-expression	0
105	const		1	equality-expression	0
105	continue		1	equality-expression	0
105	default		1	equality-expression	0
105	do		1	equality-expression	0
105	double		1	equality-expression	0
105	else		1	equality-expression	0
105	enumeration-constant		1	equality-expression	0
105	extern		1	equality-expression	0
105	float		1	equality-expression	0
105	floating-constant		1	equality-expression	0
105	for		1	equality-expression	0
105	goto		1	equality-expression	0
105	identifier		1	equality-expression	0
105	if		1	equality-expression	0
105	int		1	equality-expression	0
105	integer-constant		1	equality-expression	0
105	long		1	equality-expression	0
105	register		1	equality-expression	0
105	return		1	equality-expression	0
105	short		1	equality-expression	0
105	signed		1	equality-expression	0
105	sizeof		1	equality-expression	0
105	static		1	equality-expression	0
105	string-constant		1	equality-expression	0
105	switch		1	equality-expression	0
105	typedef		1	equality-expression	0
105	unsigned		1	equality-expression	0
105	void		1	equality-expression	0
105	volatile		1	equality-expression	0
105	while		1	equality-expression	0
105	{		1	equality-expression	0
105	|		1	equality-expression	0
105	|=		1	equality-expression	0
105	||		1	equality-expression	0
105	}		1	equality-expression	0
105	~		1	equality-expression	0
169	!		0	62
169	&		0	63
169	(		0	64
169	*		0	65
169	+		0	66
169	++		0	67
169	-		0	68
169	--		0	69
169	character-constant		0	77
169	enumeration-constant		0	85
169	floating-constant		0	90
169	identifier		0	129
169	integer-constant		0	96
169	sizeof		0	109
169	string-constant		0	112
169	~		0	118
233	,		0	157
233	;		0	277
297	)		0	310
297	,		0	157
50	(		1	declaration-specifiers	3
50	)		1	declaration-specifiers	3
50	*		1	declaration-specifiers	3
50	,		1	declaration-specifiers	3
50	;		1	declaration-specifiers	3
50	[		1	declaration-specifiers	3
50	identifier		1	declaration-specifiers	3
114	!		1	cast-expression	0
114	!=		1	cast-expression	0
114	%		1	cast-expression	0
114	%=		0	188
114	&		1	cast-expression	0
114	&&		1	cast-expression	0
114	&=		0	189
114	(		1	cast-expression	0
114	)		1	cast-expression	0
114	*		1	cast-expression	0
114	*=		0	190
114	+		1	cast-expression	0
114	++		1	cast-expression	0
114	+=		0	191
114	,		1	cast-expression	0
114	-		1	cast-expression	0
114	--		1	cast-expression	0
114	-=		0	192
114	->		1	cast-expression	0
114	/		1	cast-expression	0
114	/=		0	193
114	:		1	cast-expression	0
114	;		1	cast-expression	0
114	<		1	cast-expression	0
114	<<		1	cast-expression	0
114	<<=		0	194
114	<=		1	cast-expression	0
114	=		0	195
114	==		1	cast-expression	0
114	>		1	cast-expression	0
114	>=		1	cast-expression	0
114	>>		1	cast-expression	0
114	>>=		0	196
114	?		1	cast-expression	0
114	[		1	cast-expression	0
114	]		1	cast-expression	0
114	^		1	cast-expression	0
114	^=		0	197
114	_KULV_END_		1	cast-expression	0
114	auto		1	cast-expression	0
114	break		1	cast-expression	0
114	case		1	cast-expression	0
114	char		1	cast-expression	0
114	character-constant		1	cast-expression	0
114	const		1	cast-expression	0
114	continue		1	cast-expression	0
114	default		1	cast-expression	0
114	do		1	cast-expression	0
114	double		1	cast-expression	0
114	else		1	cast-expression	0
114	enumeration-constant		1	cast-expression	0
114	extern		1	cast-expression	0
114	float		1	cast-expression	0
114	floating-constant		1	cast-expression	0
114	for		1	cast-expression	0
114	goto		1	cast-expression	0
114	identifier		1	cast-expression	0
114	if		1	cast-expression	0
114	int		1	cast-expression	0
114	integer-constant		1	cast-expression	0
114	long		1	cast-expression	0
114	register		1	cast-expression	0
114	return		1	cast-expression	0
114	short		1	cast-expression	0
114	signed		1	cast-expression	0
114	sizeof		1	cast-expression	0
114	static		1	cast-expression	0
114	string-constant		1	cast-expression	0
114	switch		1	cast-expression	0
114	typedef		1	cast-expression	0
114	unsigned		1	cast-expression	0
114	void		1	cast-expression	0
114	volatile		1	cast-expression	0
114	while		1	cast-expression	0
114	{		1	cast-expression	0
114	|		1	cast-expression	0
114	|=		0	199
114	||		1	cast-expression	0
114	}		1	cast-expression	0
114	~		1	cast-expression	0
178	!		0	62
178	&		0	63
178	(		0	64
178	*		0	65
178	+		0	66
178	++		0	67
178	-		0	68
178	--		0	69
178	character-constant		0	77
178	enumeration-constant		0	85
178	floating-constant		0	90
178	identifier		0	129
178	integer-constant		0	96
178	sizeof		0	109
178	string-constant		0	112
178	~		0	118
242	!		1	multiplicative-expression	3
242	!=		1	multiplicative-expression	3
242	%		1	multiplicative-expression	3
242	%=		1	multiplicative-expression	3
242	&		1	multiplicative-expression	3
242	&&		1	multiplicative-expression	3
242	&=		1	multiplicative-expression	3
242	(		1	multiplicative-expression	3
242	)		1	multiplicative-expression	3
242	*		1	multiplicative-expression	3
242	*=		1	multiplicative-expression	3
242	+		1	multiplicative-expression	3
242	++		1	multiplicative-expression	3
242	+=		1	multiplicative-expression	3
242	,		1	multiplicative-expression	3
242	-		1	multiplicative-expression	3
242	--		1	multiplicative-expression	3
242	-=		1	multiplicative-expression	3
242	->		1	multiplicative-expression	3
242	/		1	multiplicative-expression	3
242	/=		1	multiplicative-expression	3
242	:		1	multiplicative-expression	3
242	;		1	multiplicative-expression	3
242	<		1	multiplicative-expression	3
242	<<		1	multiplicative-expression	3
242	<<=		1	multiplicative-expression	3
242	<=		1	multiplicative-expression	3
242	=		1	multiplicative-expression	3
242	==		1	multiplicative-expression	3
242	>		1	multiplicative-expression	3
242	>=		1	multiplicative-expression	3
242	>>		1	multiplicative-expression	3
242	>>=		1	multiplicative-expression	3
242	?		1	multiplicative-expression	3
242	[		1	multiplicative-expression	3
242	]		1	multiplicative-expression	3
242	^		1	multiplicative-expression	3
242	^=		1	multiplicative-expression	3
242	_KULV_END_		1	multiplicative-expression	3
242	auto		1	multiplicative-expression	3
242	break		1	multiplicative-expression	3
242	case		1	multiplicative-expression	3
242	char		1	multiplicative-expression	3
242	character-constant		1	multiplicative-expression	3
242	const		1	multiplicative-expression	3
242	continue		1	multiplicative-expression	3
242	default		1	multiplicative-expression	3
242	do		1	multiplicative-expression	3
242	double		1	multiplicative-expression	3
242	else		1	multiplicative-expression	3
242	enumeration-constant		1	multiplicative-expression	3
242	extern		1	multiplicative-expression	3
242	float		1	multiplicative-expression	3
242	floating-constant		1	multiplicative-expression	3
242	for		1	multiplicative-expression	3
242	goto		1	multiplicative-expression	3
242	identifier		1	multiplicative-expression	3
242	if		1	multiplicative-expression	3
242	int		1	multiplicative-expression	3
242	integer-constant		1	multiplicative-expression	3
242	long		1	multiplicative-expression	3
242	register		1	multiplicative-expression	3
242	return		1	multiplicative-expression	3
242	short		1	multiplicative-expression	3
242	signed		1	multiplicative-expression	3
242	sizeof		1	multiplicative-expression	3
242	static		1	multiplicative-expression	3
242	string-constant		1	multiplicative-expression	3
242	switch		1	multiplicative-expression	3
242	typedef		1	multiplicative-expression	3
242	unsigned		1	multiplicative-expression	3
242	void		1	multiplicative-expression	3
242	volatile		1	multiplicative-expression	3
242	while		1	multiplicative-expression	3
242	{		1	multiplicative-expression	3
242	|		1	multiplicative-expression	3
242	|=		1	multiplicative-expression	3
242	||		1	multiplicative-expression	3
242	}		1	multiplicative-expression	3
242	~		1	multiplicative-expression	3
306	!		1	selection-statement	2
306	%=		1	selection-statement	2
306	&		1	selection-statement	2
306	&=		1	selection-statement	2
306	(		1	selection-statement	2
306	)		1	selection-statement	2
306	*		1	selection-statement	2
306	*=		1	selection-statement	2
306	+		1	selection-statement	2
306	++		1	selection-statement	2
306	+=		1	selection-statement	2
306	,		1	selection-statement	2
306	-		1	selection-statement	2
306	--		1	selection-statement	2
306	-=		1	selection-statement	2
306	/=		1	selection-statement	2
306	;		1	selection-statement	2
306	<<=		1	selection-statement	2
306	=		1	selection-statement	2
306	>>=		1	selection-statement	2
306	^=		1	selection-statement	2
306	_KULV_END_		1	selection-statement	2
306	auto		1	selection-statement	2
306	break		1	selection-statement	2
306	case		1	selection-statement	2
306	char		1	selection-statement	2
306	character-constant		1	selection-statement	2
306	const		1	selection-statement	2
306	continue		1	selection-statement	2
306	default		1	selection-statement	2
306	do		1	selection-statement	2
306	double		1	selection-statement	2
306	else		1	selection-statement	2
306	enumeration-constant		1	selection-statement	2
306	extern		1	selection-statement	2
306	float		1	selection-statement	2
306	floating-constant		1	selection-statement	2
306	for		1	selection-statement	2
306	goto		1	selection-statement	2
306	identifier		1	selection-statement	2
306	if		1	selection-statement	2
306	int		1	selection-statement	2
306	integer-constant		1	selection-statement	2
306	long		1	selection-statement	2
306	register		1	selection-statement	2
306	return		1	selection-statement	2
306	short		1	selection-statement	2
306	signed		1	selection-statement	2
306	sizeof		1	selection-statement	2
306	static		1	selection-statement	2
306	string-constant		1	selection-statement	2
306	switch		1	selection-statement	2
306	typedef		1	selection-statement	2
306	unsigned		1	selection-statement	2
306	void		1	selection-statement	2
306	volatile		1	selection-statement	2
306	while		1	selection-statement	2
306	{		1	selection-statement	2
306	|=		1	selection-statement	2
306	}		1	selection-statement	2
306	~		1	selection-statement	2
27	(		1	storage-class-specifier	4
27	)		1	storage-class-specifier	4
27	*		1	storage-class-specifier	4
27	,		1	storage-class-specifier	4
27	;		1	storage-class-specifier	4
27	[		1	storage-class-specifier	4
27	auto		1	storage-class-specifier	4
27	char		1	storage-class-specifier	4
27	const		1	storage-class-specifier	4
27	double		1	storage-class-specifier	4
27	extern		1	storage-class-specifier	4
27	float		1	storage-class-specifier	4
27	identifier		1	storage-class-specifier	4
27	int		1	storage-class-specifier	4
27	long		1	storage-class-specifier	4
27	register		1	storage-class-specifier	4
27	short		1	storage-class-specifier	4
27	signed		1	storage-class-specifier	4
27	static		1	storage-class-specifier	4
27	typedef		1	storage-class-specifier	4
27	unsigned		1	storage-class-specifier	4
27	void		1	storage-class-specifier	4
27	volatile		1	storage-class-specifier	4
91	(		0	159
155	!		0	62
155	&		0	63
155	(		0	64
155	*		0	65
155	+		0	66
155	++		0	67
155	-		0	68
155	--		0	69
155	character-constant		0	77
155	enumeration-constant		0	85
155	floating-constant		0	90
155	identifier		0	129
155	integer-constant		0	96
155	sizeof		0	109
155	string-constant		0	112
155	~		0	118
219	)		1	type-name	1
283	!		1	postfix-expression	3
283	!=		1	postfix-expression	3
283	%		1	postfix-expression	3
283	%=		1	postfix-expression	3
283	&		1	postfix-expression	3
283	&&		1	postfix-expression	3
283	&=		1	postfix-expression	3
283	(		1	postfix-expression	3
283	)		1	postfix-expression	3
283	*		1	postfix-expression	3
283	*=		1	postfix-expression	3
283	+		1	postfix-expression	3
283	++		1	postfix-expression	3
283	+=		1	postfix-expression	3
283	,		1	postfix-expression	3
283	-		1	postfix-expression	3
283	--		1	postfix-expression	3
283	-=		1	postfix-expression	3
283	->		1	postfix-expression	3
283	/		1	postfix-expression	3
283	/=		1	postfix-expression	3
283	:		1	postfix-expression	3
283	;		1	postfix-expression	3
283	<		1	postfix-expression	3
283	<<		1	postfix-expression	3
283	<<=		1	postfix-expression	3
283	<=		1	postfix-expression	3
283	=		1	postfix-expression	3
283	==		1	postfix-expression	3
283	>		1	postfix-expression	3
283	>=		1	postfix-expression	3
283	>>		1	postfix-expression	3
283	>>=		1	postfix-expression	3
283	?		1	postfix-expression	3
283	[		1	postfix-expression	3
283	]		1	postfix-expression	3
283	^		1	postfix-expression	3
283	^=		1	postfix-expression	3
283	_KULV_END_		1	postfix-expression	3
283	auto		1	postfix-expression	3
283	break		1	postfix-expression	3
283	case		1	postfix-expression	3
283	char		1	postfix-expression	3
283	character-constant		1	postfix-expression	3
283	const		1	postfix-expression	3
283	continue		1	postfix-expression	3
283	default		1	postfix-expression	3
283	do		1	postfix-expression	3
283	double		1	postfix-expression	3
283	else		1	postfix-expression	3
283	enumeration-constant		1	postfix-expression	3
283	extern		1	postfix-expression	3
283	float		1	postfix-expression	3
283	floating-constant		1	postfix-expression	3
283	for		1	postfix-expression	3
283	goto		1	postfix-expression	3
283	identifier		1	postfix-expression	3
283	if		1	postfix-expression	3
283	int		1	postfix-expression	3
283	integer-constant		1	postfix-expression	3
283	long		1	postfix-expression	3
283	register		1	postfix-expression	3
283	return		1	postfix-expression	3
283	short		1	postfix-expression	3
283	signed		1	postfix-expression	3
283	sizeof		1	postfix-expression	3
283	static		1	postfix-expression	3
283	string-constant		1	postfix-expression	3
283	switch		1	postfix-expression	3
283	typedef		1	postfix-expression	3
283	unsigned		1	postfix-expression	3
283	void		1	postfix-expression	3
283	volatile		1	postfix-expression	3
283	while		1	postfix-expression	3
283	{		1	postfix-expression	3
283	|		1	postfix-expression	3
283	|=		1	postfix-expression	3
283	||		1	postfix-expression	3
283	}		1	postfix-expression	3
283	~		1	postfix-expression	3
36	(		1	init-declarator	0
36	*		1	init-declarator	0
36	;		1	init-declarator	0
36	=		0	56
36	_KULV_END_		1	init-declarator	0
36	auto		0	3
36	char		0	4
36	const		0	5
36	double		0	10
36	extern		0	11
36	float		0	13
36	identifier		1	init-declarator	0
36	int		0	16
36	long		0	17
36	register		0	19
36	short		0	20
36	signed		0	21
36	static		0	22
36	typedef		0	27
36	unsigned		0	28
36	void		0	29
36	volatile		0	30
36	{		0	43
100	!		1	logical-OR-expression	0
100	!=		1	logical-OR-expression	0
100	%		1	logical-OR-expression	0
100	%=		1	logical-OR-expression	0
100	&		1	logical-OR-expression	0
100	&&		0	164
100	&=		1	logical-OR-expression	0
100	(		1	logical-OR-expression	0
100	)		1	logical-OR-expression	0
100	*		1	logical-OR-expression	0
100	*=		1	logical-OR-expression	0
100	+		1	logical-OR-expression	0
100	++		1	logical-OR-expression	0
100	+=		1	logical-OR-expression	0
100	,		1	logical-OR-expression	0
100	-		1	logical-OR-expression	0
100	--		1	logical-OR-expression	0
100	-=		1	logical-OR-expression	0
100	->		1	logical-OR-expression	0
100	/		1	logical-OR-expression	0
100	/=		1	logical-OR-expression	0
100	:		1	logical-OR-expression	0
100	;		1	logical-OR-expression	0
100	<		1	logical-OR-expression	0
100	<<		1	logical-OR-expression	0
100	<<=		1	logical-OR-expression	0
100	<=		1	logical-OR-expression	0
100	=		1	logical-OR-expression	0
100	==		1	logical-OR-expression	0
100	>		1	logical-OR-expression	0
100	>=		1	logical-OR-expression	0
100	>>		1	logical-OR-expression	0
100	>>=		1	logical-OR-expression	0
100	?		1	logical-OR-expression	0
100	[		1	logical-OR-expression	0
100	]		1	logical-OR-expression	0
100	^		1	logical-OR-expression	0
100	^=		1	logical-OR-expression	0
100	_KULV_END_		1	logical-OR-expression	0
100	auto		1	logical-OR-expression	0
100	break		1	logical-OR-expression	0
100	case		1	logical-OR-expression	0
100	char		1	logical-OR-expression	0
100	character-constant		1	logical-OR-expression	0
100	const		1	logical-OR-expression	0
100	continue		1	logical-OR-expression	0
100	default		1	logical-OR-expression	0
100	do		1	logical-OR-expression	0
100	double		1	logical-OR-expression	0
100	else		1	logical-OR-expression	0
100	enumeration-constant		1	logical-OR-expression	0
100	extern		1	logical-OR-expression	0
100	float		1	logical-OR-expression	0
100	floating-constant		1	logical-OR-expression	0
100	for		1	logical-OR-expression	0
100	goto		1	logical-OR-expression	0
100	identifier		1	logical-OR-expression	0
100	if		1	logical-OR-expression	0
100	int		1	logical-OR-expression	0
100	integer-constant		1	logical-OR-expression	0
100	long		1	logical-OR-expression	0
100	register		1	logical-OR-expression	0
100	return		1	logical-OR-expression	0
100	short		1	logical-OR-expression	0
100	signed		1	logical-OR-expression	0
100	sizeof		1	logical-OR-expression	0
100	static		1	logical-OR-expression	0
100	string-constant		1	logical-OR-expression	0
100	switch		1	logical-OR-expression	0
100	typedef		1	logical-OR-expression	0
100	unsigned		1	logical-OR-expression	0
100	void		1	logical-OR-expression	0
100	volatile		1	logical-OR-expression	0
100	while		1	logical-OR-expression	0
100	{		1	logical-OR-expression	0
100	|		1	logical-OR-expression	0
100	|=		1	logical-OR-expression	0
100	||		1	logical-OR-expression	0
100	}		1	logical-OR-expression	0
100	~		1	logical-OR-expression	0
164	!		0	62
164	&		0	63
164	(		0	64
164	*		0	65
164	+		0	66
164	++		0	67
164	-		0	68
164	--		0	69
164	character-constant		0	77
164	enumeration-constant		0	85
164	floating-constant		0	90
164	identifier		0	129
164	integer-constant		0	96
164	sizeof		0	109
164	string-constant		0	112
164	~		0	118
228	(		0	276
292	)		0	308
13	(		1	type-specifier	5
13	)		1	type-specifier	5
13	*		1	type-specifier	5
13	,		1	type-specifier	5
13	;		1	type-specifier	5
13	[		1	type-specifier	5
13	auto		1	type-specifier	5
13	char		1	type-specifier	5
13	const		1	type-specifier	5
13	double		1	type-specifier	5
13	extern		1	type-specifier	5
13	float		1	type-specifier	5
13	identifier		1	type-specifier	5
13	int		1	type-specifier	5
13	long		1	type-specifier	5
13	register		1	type-specifier	5
13	short		1	type-specifier	5
13	signed		1	type-specifier	5
13	static		1	type-specifier	5
13	typedef		1	type-specifier	5
13	unsigned		1	type-specifier	5
13	void		1	type-specifier	5
13	volatile		1	type-specifier	5
77	!		1	constant	1
77	!=		1	constant	1
77	%		1	constant	1
77	%=		1	constant	1
77	&		1	constant	1
77	&&		1	constant	1
77	&=		1	constant	1
77	(		1	constant	1
77	)		1	constant	1
77	*		1	constant	1
77	*=		1	constant	1
77	+		1	constant	1
77	++		1	constant	1
77	+=		1	constant	1
77	,		1	constant	1
77	-		1	constant	1
77	--		1	constant	1
77	-=		1	constant	1
77	->		1	constant	1
77	/		1	constant	1
77	/=		1	constant	1
77	:		1	constant	1
77	;		1	constant	1
77	<		1	constant	1
77	<<		1	constant	1
77	<<=		1	constant	1
77	<=		1	constant	1
77	=		1	constant	1
77	==		1	constant	1
77	>		1	constant	1
77	>=		1	constant	1
77	>>		1	constant	1
77	>>=		1	constant	1
77	?		1	constant	1
77	[		1	constant	1
77	]		1	constant	1
77	^		1	constant	1
77	^=		1	constant	1
77	_KULV_END_		1	constant	1
77	auto		1	constant	1
77	break		1	constant	1
77	case		1	constant	1
77	char		1	constant	1
77	character-constant		1	constant	1
77	const		1	constant	1
77	continue		1	constant	1
77	default		1	constant	1
77	do		1	constant	1
77	double		1	constant	1
77	else		1	constant	1
77	enumeration-constant		1	constant	1
77	extern		1	constant	1
77	float		1	constant	1
77	floating-constant		1	constant	1
77	for		1	constant	1
77	goto		1	constant	1
77	identifier		1	constant	1
77	if		1	constant	1
77	int		1	constant	1
77	integer-constant		1	constant	1
77	long		1	constant	1
77	register		1	constant	1
77	return		1	constant	1
77	short		1	constant	1
77	signed		1	constant	1
77	sizeof		1	constant	1
77	static		1	constant	1
77	string-constant		1	constant	1
77	switch		1	constant	1
77	typedef		1	constant	1
77	unsigned		1	constant	1
77	void		1	constant	1
77	volatile		1	constant	1
77	while		1	constant	1
77	{		1	constant	1
77	|		1	constant	1
77	|=		1	constant	1
77	||		1	constant	1
77	}		1	constant	1
77	~		1	constant	1
141	!		0	62
141	&		0	63
141	(		0	64
141	*		0	65
141	+		0	66
141	++		0	67
141	-		0	68
141	--		0	69
141	character-constant		0	77
141	enumeration-constant		0	85
141	floating-constant		0	90
141	identifier		0	129
141	integer-constant		0	96
141	sizeof		0	109
141	string-constant		0	112
141	~		0	118
205	)		1	parameter-declaration	1
205	,		1	parameter-declaration	1
269	!		1	identifier-list	1
269	%=		1	identifier-list	1
269	&		1	identifier-list	1
269	&=		1	identifier-list	1
269	(		1	identifier-list	1
269	)		1	identifier-list	1
269	*		1	identifier-list	1
269	*=		1	identifier-list	1
269	+		1	identifier-list	1
269	++		1	identifier-list	1
269	+=		1	identifier-list	1
269	,		1	identifier-list	1
269	-		1	identifier-list	1
269	--		1	identifier-list	1
269	-=		1	identifier-list	1
269	/=		1	identifier-list	1
269	;		1	identifier-list	1
269	<<=		1	identifier-list	1
269	=		1	identifier-list	1
269	>>=		1	identifier-list	1
269	[		1	identifier-list	1
269	^=		1	identifier-list	1
269	_KULV_END_		1	identifier-list	1
269	auto		1	identifier-list	1
269	break		1	identifier-list	1
269	case		1	identifier-list	1
269	char		1	identifier-list	1
269	character-constant		1	identifier-list	1
269	const		1	identifier-list	1
269	continue		1	identifier-list	1
269	default		1	identifier-list	1
269	do		1	identifier-list	1
269	double		1	identifier-list	1
269	else		1	identifier-list	1
269	enumeration-constant		1	identifier-list	1
269	extern		1	identifier-list	1
269	float		1	identifier-list	1
269	floating-constant		1	identifier-list	1
269	for		1	identifier-list	1
269	goto		1	identifier-list	1
269	identifier		1	identifier-list	1
269	if		1	identifier-list	1
269	int		1	identifier-list	1
269	integer-constant		1	identifier-list	1
269	long		1	identifier-list	1
269	register		1	identifier-list	1
269	return		1	identifier-list	1
269	short		1	identifier-list	1
269	signed		1	identifier-list	1
269	sizeof		1	identifier-list	1
269	static		1	identifier-list	1
269	string-constant		1	identifier-list	1
269	switch		1	identifier-list	1
269	typedef		1	identifier-list	1
269	unsigned		1	identifier-list	1
269	void		1	identifier-list	1
269	volatile		1	identifier-list	1
269	while		1	identifier-list	1
269	{		1	identifier-list	1
269	|=		1	identifier-list	1
269	}		1	identifier-list	1
269	~		1	identifier-list	1
22	(		1	storage-class-specifier	2
22	)		1	storage-class-specifier	2
22	*		1	storage-class-specifier	2
22	,		1	storage-class-specifier	2
22	;		1	storage-class-specifier	2
22	[		1	storage-class-specifier	2
22	auto		1	storage-class-specifier	2
22	char		1	storage-class-specifier	2
22	const		1	storage-class-specifier	2
22	double		1	storage-class-specifier	2
22	extern		1	storage-class-specifier	2
22	float		1	storage-class-specifier	2
22	identifier		1	storage-class-specifier	2
22	int		1	storage-class-specifier	2
22	long		1	storage-class-specifier	2
22	register		1	storage-class-specifier	2
22	short		1	storage-class-specifier	2
22	signed		1	storage-class-specifier	2
22	static		1	storage-class-specifier	2
22	typedef		1	storage-class-specifier	2
22	unsigned		1	storage-class-specifier	2
22	void		1	storage-class-specifier	2
22	volatile		1	storage-class-specifier	2
86	!		1	AND-expression	0
86	!=		0	154
86	%		1	AND-expression	0
86	%=		1	AND-expression	0
86	&		1	AND-expression	0
86	&&		1	AND-expression	0
86	&=		1	AND-expression	0
86	(		1	AND-expression	0
86	)		1	AND-expression	0
86	*		1	AND-expression	0
86	*=		1	AND-expression	0
86	+		1	AND-expression	0
86	++		1	AND-expression	0
86	+=		1	AND-expression	0
86	,		1	AND-expression	0
86	-		1	AND-expression	0
86	--		1	AND-expression	0
86	-=		1	AND-expression	0
86	->		1	AND-expression	0
86	/		1	AND-expression	0
86	/=		1	AND-expression	0
86	:		1	AND-expression	0
86	;		1	AND-expression	0
86	<		1	AND-expression	0
86	<<		1	AND-expression	0
86	<<=		1	AND-expression	0
86	<=		1	AND-expression	0
86	=		1	AND-expression	0
86	==		0	155
86	>		1	AND-expression	0
86	>=		1	AND-expression	0
86	>>		1	AND-expression	0
86	>>=		1	AND-expression	0
86	?		1	AND-expression	0
86	[		1	AND-expression	0
86	]		1	AND-expression	0
86	^		1	AND-expression	0
86	^=		1	AND-expression	0
86	_KULV_END_		1	AND-expression	0
86	auto		1	AND-expression	0
86	break		1	AND-expression	0
86	case		1	AND-expression	0
86	char		1	AND-expression	0
86	character-constant		1	AND-expression	0
86	const		1	AND-expression	0
86	continue		1	AND-expression	0
86	default		1	AND-expression	0
86	do		1	AND-expression	0
86	double		1	AND-expression	0
86	else		1	AND-expression	0
86	enumeration-constant		1	AND-expression	0
86	extern		1	AND-expression	0
86	float		1	AND-expression	0
86	floating-constant		1	AND-expression	0
86	for		1	AND-expression	0
86	goto		1	AND-expression	0
86	identifier		1	AND-expression	0
86	if		1	AND-expression	0
86	int		1	AND-expression	0
86	integer-constant		1	AND-expression	0
86	long		1	AND-expression	0
86	register		1	AND-expression	0
86	return		1	AND-expression	0
86	short		1	AND-expression	0
86	signed		1	AND-expression	0
86	sizeof		1	AND-expression	0
86	static		1	AND-expression	0
86	string-constant		1	AND-expression	0
86	switch		1	AND-expression	0
86	typedef		1	AND-expression	0
86	unsigned		1	AND-expression	0
86	void		1	AND-expression	0
86	volatile		1	AND-expression	0
86	while		1	AND-expression	0
86	{		1	AND-expression	0
86	|		1	AND-expression	0
86	|=		1	AND-expression	0
86	||		1	AND-expression	0
86	}		1	AND-expression	0
86	~		1	AND-expression	0
150	!		0	62
150	&		0	63
150	(		0	64
150	*		0	65
150	+		0	66
150	++		0	67
150	-		0	68
150	--		0	69
150	;		0	70
150	break		0	74
150	case		0	75
150	character-constant		0	77
150	continue		0	81
150	default		0	83
150	do		0	84
150	enumeration-constant		0	85
150	floating-constant		0	90
150	for		0	91
150	goto		0	92
150	identifier		0	93
150	if		0	94
150	integer-constant		0	96
150	return		0	106
150	sizeof		0	109
150	string-constant		0	112
150	switch		0	113
150	while		0	116
150	{		0	43
150	}		0	226
150	~		0	118
214	,		0	272
214	}		0	273
278	,		0	157
278	;		0	300
63	!		1	unary-operator	0
63	&		1	unary-operator	0
63	(		1	unary-operator	0
63	*		1	unary-operator	0
63	+		1	unary-operator	0
63	++		1	unary-operator	0
63	-		1	unary-operator	0
63	--		1	unary-operator	0
63	character-constant		1	unary-operator	0
63	enumeration-constant		1	unary-operator	0
63	floating-constant		1	unary-operator	0
63	identifier		1	unary-operator	0
63	integer-constant		1	unary-operator	0
63	sizeof		1	unary-operator	0
63	string-constant		1	unary-operator	0
63	~		1	unary-operator	0
127	!		1	direct-declarator	2
127	%=		1	direct-declarator	2
127	&		1	direct-declarator	2
127	&=		1	direct-declarator	2
127	(		1	direct-declarator	2
127	)		1	direct-declarator	2
127	*		1	direct-declarator	2
127	*=		1	direct-declarator	2
127	+		1	direct-declarator	2
127	++		1	direct-declarator	2
127	+=		1	direct-declarator	2
127	,		1	direct-declarator	2
127	-		1	direct-declarator	2
127	--		1	direct-declarator	2
127	-=		1	direct-declarator	2
127	/=		1	direct-declarator	2
127	;		1	direct-declarator	2
127	<<=		1	direct-declarator	2
127	=		1	direct-declarator	2
127	>>=		1	direct-declarator	2
127	[		1	direct-declarator	2
127	^=		1	direct-declarator	2
127	_KULV_END_		1	direct-declarator	2
127	auto		1	direct-declarator	2
127	break		1	direct-declarator	2
127	case		1	direct-declarator	2
127	char		1	direct-declarator	2
127	character-constant		1	direct-declarator	2
127	const		1	direct-declarator	2
127	continue		1	direct-declarator	2
127	default		1	direct-declarator	2
127	do		1	direct-declarator	2
127	double		1	direct-declarator	2
127	else		1	direct-declarator	2
127	enumeration-constant		1	direct-declarator	2
127	extern		1	direct-declarator	2
127	float		1	direct-declarator	2
127	floating-constant		1	direct-declarator	2
127	for		1	direct-declarator	2
127	goto		1	direct-declarator	2
127	identifier		1	direct-declarator	2
127	if		1	direct-declarator	2
127	int		1	direct-declarator	2
127	integer-constant		1	direct-declarator	2
127	long		1	direct-declarator	2
127	register		1	direct-declarator	2
127	return		1	direct-declarator	2
127	short		1	direct-declarator	2
127	signed		1	direct-declarator	2
127	sizeof		1	direct-declarator	2
127	static		1	direct-declarator	2
127	string-constant		1	direct-declarator	2
127	switch		1	direct-declarator	2
127	typedef		1	direct-declarator	2
127	unsigned		1	direct-declarator	2
127	void		1	direct-declarator	2
127	volatile		1	direct-declarator	2
127	while		1	direct-declarator	2
127	{		1	direct-declarator	2
127	|=		1	direct-declarator	2
127	}		1	direct-declarator	2
127	~		1	direct-declarator	2
191	!		1	assignment-operator	4
191	&		1	assignment-operator	4
191	(		1	assignment-operator	4
191	*		1	assignment-operator	4
191	+		1	assignment-operator	4
191	++		1	assignment-operator	4
191	-		1	assignment-operator	4
191	--		1	assignment-operator	4
191	character-constant		1	assignment-operator	4
191	enumeration-constant		1	assignment-operator	4
191	floating-constant		1	assignment-operator	4
191	identifier		1	assignment-operator	4
191	integer-constant		1	assignment-operator	4
191	sizeof		1	assignment-operator	4
191	string-constant		1	assignment-operator	4
191	~		1	assignment-operator	4
255	!		1	shift-expression	1
255	!=		1	shift-expression	1
255	%		1	shift-expression	1
255	%=		1	shift-expression	1
255	&		1	shift-expression	1
255	&&		1	shift-expression	1
255	&=		1	shift-expression	1
255	(		1	shift-expression	1
255	)		1	shift-expression	1
255	*		1	shift-expression	1
255	*=		1	shift-expression	1
255	+		0	145
255	++		1	shift-expression	1
255	+=		1	shift-expression	1
255	,		1	shift-expression	1
255	-		0	146
255	--		1	shift-expression	1
255	-=		1	shift-expression	1
255	->		1	shift-expression	1
255	/		1	shift-expression	1
255	/=		1	shift-expression	1
255	:		1	shift-expression	1
255	;		1	shift-expression	1
255	<		1	shift-expression	1
255	<<		1	shift-expression	1
255	<<=		1	shift-expression	1
255	<=		1	shift-expression	1
255	=		1	shift-expression	1
255	==		1	shift-expression	1
255	>		1	shift-expression	1
255	>=		1	shift-expression	1
255	>>		1	shift-expression	1
255	>>=		1	shift-expression	1
255	?		1	shift-expression	1
255	[		1	shift-expression	1
255	]		1	shift-expression	1
255	^		1	shift-expression	1
255	^=		1	shift-expression	1
255	_KULV_END_		1	shift-expression	1
255	auto		1	shift-expression	1
255	break		1	shift-expression	1
255	case		1	shift-expression	1
255	char		1	shift-expression	1
255	character-constant		1	shift-expression	1
255	const		1	shift-expression	1
255	continue		1	shift-expression	1
255	default		1	shift-expression	1
255	do		1	shift-expression	1
255	double		1	shift-expression	1
255	else		1	shift-expression	1
255	enumeration-constant		1	shift-expression	1
255	extern		1	shift-expression	1
255	float		1	shift-expression	1
255	floating-constant		1	shift-expression	1
255	for		1	shift-expression	1
255	goto		1	shift-expression	1
255	identifier		1	shift-expression	1
255	if		1	shift-expression	1
255	int		1	shift-expression	1
255	integer-constant		1	shift-expression	1
255	long		1	shift-expression	1
255	register		1	shift-expression	1
255	return		1	shift-expression	1
255	short		1	shift-expression	1
255	signed		1	shift-expression	1
255	sizeof		1	shift-expression	1
255	static		1	shift-expression	1
255	string-constant		1	shift-expression	1
255	switch		1	shift-expression	1
255	typedef		1	shift-expression	1
255	unsigned		1	shift-expression	1
255	void		1	shift-expression	1
255	volatile		1	shift-expression	1
255	while		1	shift-expression	1
255	{		1	shift-expression	1
255	|		1	shift-expression	1
255	|=		1	shift-expression	1
255	||		1	shift-expression	1
255	}		1	shift-expression	1
255	~		1	shift-expression	1
319	!		1	iteration-statement	1
319	%=		1	iteration-statement	1
319	&		1	iteration-statement	1
319	&=		1	iteration-statement	1
319	(		1	iteration-statement	1
319	)		1	iteration-statement	1
319	*		1	iteration-statement	1
319	*=		1	iteration-statement	1
319	+		1	iteration-statement	1
319	++		1	iteration-statement	1
319	+=		1	iteration-statement	1
319	,		1	iteration-statement	1
319	-		1	iteration-statement	1
319	--		1	iteration-statement	1
319	-=		1	iteration-statement	1
319	/=		1	iteration-statement	1
319	;		1	iteration-statement	1
319	<<=		1	iteration-statement	1
319	=		1	iteration-statement	1
319	>>=		1	iteration-statement	1
319	^=		1	iteration-statement	1
319	_KULV_END_		1	iteration-statement	1
319	auto		1	iteration-statement	1
319	break		1	iteration-statement	1
319	case		1	iteration-statement	1
319	char		1	iteration-statement	1
319	character-constant		1	iteration-statement	1
319	const		1	iteration-statement	1
319	continue		1	iteration-statement	1
319	default		1	iteration-statement	1
319	do		1	iteration-statement	1
319	double		1	iteration-statement	1
319	else		1	iteration-statement	1
319	enumeration-constant		1	iteration-statement	1
319	extern		1	iteration-statement	1
319	float		1	iteration-statement	1
319	floating-constant		1	iteration-statement	1
319	for		1	iteration-statement	1
319	goto		1	iteration-statement	1
319	identifier		1	iteration-statement	1
319	if		1	iteration-statement	1
319	int		1	iteration-statement	1
319	integer-constant		1	iteration-statement	1
319	long		1	iteration-statement	1
319	register		1	iteration-statement	1
319	return		1	iteration-statement	1
319	short		1	iteration-statement	1
319	signed		1	iteration-statement	1
319	sizeof		1	iteration-statement	1
319	static		1	iteration-statement	1
319	string-constant		1	iteration-statement	1
319	switch		1	iteration-statement	1
319	typedef		1	iteration-statement	1
319	unsigned		1	iteration-statement	1
319	void		1	iteration-statement	1
319	volatile		1	iteration-statement	1
319	while		1	iteration-statement	1
319	{		1	iteration-statement	1
319	|=		1	iteration-statement	1
319	}		1	iteration-statement	1
319	~		1	iteration-statement	1
8	auto		0	3
8	char		0	4
8	const		0	5
8	double		0	10
8	extern		0	11
8	float		0	13
8	int		0	16
8	long		0	17
8	register		0	19
8	short		0	20
8	signed		0	21
8	static		0	22
8	typedef		0	27
8	unsigned		0	28
8	void		0	29
8	volatile		0	30
8	{		0	43
136	)		0	215
136	,		0	157
264	(		1	direct-abstract-declarator	1
264	)		1	direct-abstract-declarator	1
264	,		1	direct-abstract-declarator	1
264	[		1	direct-abstract-declarator	1
17	(		1	type-specifier	4
17	)		1	type-specifier	4
17	*		1	type-specifier	4
17	,		1	type-specifier	4
17	;		1	type-specifier	4
17	[		1	type-specifier	4
17	auto		1	type-specifier	4
17	char		1	type-specifier	4
17	const		1	type-specifier	4
17	double		1	type-specifier	4
17	extern		1	type-specifier	4
17	float		1	type-specifier	4
17	identifier		1	type-specifier	4
17	int		1	type-specifier	4
17	long		1	type-specifier	4
17	register		1	type-specifier	4
17	short		1	type-specifier	4
17	signed		1	type-specifier	4
17	static		1	type-specifier	4
17	typedef		1	type-specifier	4
17	unsigned		1	type-specifier	4
17	void		1	type-specifier	4
17	volatile		1	type-specifier	4
145	!		0	62
145	&		0	63
145	(		0	64
145	*		0	65
145	+		0	66
145	++		0	67
145	-		0	68
145	--		0	69
145	character-constant		0	77
145	enumeration-constant		0	85
145	floating-constant		0	90
145	identifier		0	129
145	integer-constant		0	96
145	sizeof		0	109
145	string-constant		0	112
145	~		0	118
273	!		1	initializer	1
273	%=		1	initializer	1
273	&		1	initializer	1
273	&=		1	initializer	1
273	(		1	initializer	1
273	)		1	initializer	1
273	*		1	initializer	1
273	*=		1	initializer	1
273	+		1	initializer	1
273	++		1	initializer	1
273	+=		1	initializer	1
273	,		1	initializer	1
273	-		1	initializer	1
273	--		1	initializer	1
273	-=		1	initializer	1
273	/=		1	initializer	1
273	;		1	initializer	1
273	<<=		1	initializer	1
273	=		1	initializer	1
273	>>=		1	initializer	1
273	^=		1	initializer	1
273	_KULV_END_		1	initializer	1
273	auto		1	initializer	1
273	break		1	initializer	1
273	case		1	initializer	1
273	char		1	initializer	1
273	character-constant		1	initializer	1
273	const		1	initializer	1
273	continue		1	initializer	1
273	default		1	initializer	1
273	do		1	initializer	1
273	double		1	initializer	1
273	else		1	initializer	1
273	enumeration-constant		1	initializer	1
273	extern		1	initializer	1
273	float		1	initializer	1
273	floating-constant		1	initializer	1
273	for		1	initializer	1
273	goto		1	initializer	1
273	identifier		1	initializer	1
273	if		1	initializer	1
273	int		1	initializer	1
273	integer-constant		1	initializer	1
273	long		1	initializer	1
273	register		1	initializer	1
273	return		1	initializer	1
273	short		1	initializer	1
273	signed		1	initializer	1
273	sizeof		1	initializer	1
273	static		1	initializer	1
273	string-constant		1	initializer	1
273	switch		1	initializer	1
273	typedef		1	initializer	1
273	unsigned		1	initializer	1
273	void		1	initializer	1
273	volatile		1	initializer	1
273	while		1	initializer	1
273	{		1	initializer	1
273	|=		1	initializer	1
273	}		1	initializer	1
273	~		1	initializer	1
122	)		0	210
250	!		1	relational-expression	1
250	!=		1	relational-expression	1
250	%		1	relational-expression	1
250	%=		1	relational-expression	1
250	&		1	relational-expression	1
250	&&		1	relational-expression	1
250	&=		1	relational-expression	1
250	(		1	relational-expression	1
250	)		1	relational-expression	1
250	*		1	relational-expression	1
250	*=		1	relational-expression	1
250	+		1	relational-expression	1
250	++		1	relational-expression	1
250	+=		1	relational-expression	1
250	,		1	relational-expression	1
250	-		1	relational-expression	1
250	--		1	relational-expression	1
250	-=		1	relational-expression	1
250	->		1	relational-expression	1
250	/		1	relational-expression	1
250	/=		1	relational-expression	1
250	:		1	relational-expression	1
250	;		1	relational-expression	1
250	<		1	relational-expression	1
250	<<		0	181
250	<<=		1	relational-expression	1
250	<=		1	relational-expression	1
250	=		1	relational-expression	1
250	==		1	relational-expression	1
250	>		1	relational-expression	1
250	>=		1	relational-expression	1
250	>>		0	182
250	>>=		1	relational-expression	1
250	?		1	relational-expression	1
250	[		1	relational-expression	1
250	]		1	relational-expression	1
250	^		1	relational-expression	1
250	^=		1	relational-expression	1
250	_KULV_END_		1	relational-expression	1
250	auto		1	relational-expression	1
250	break		1	relational-expression	1
250	case		1	relational-expression	1
250	char		1	relational-expression	1
250	character-constant		1	relational-expression	1
250	const		1	relational-expression	1
250	continue		1	relational-expression	1
250	default		1	relational-expression	1
250	do		1	relational-expression	1
250	double		1	relational-expression	1
250	else		1	relational-expression	1
250	enumeration-constant		1	relational-expression	1
250	extern		1	relational-expression	1
250	float		1	relational-expression	1
250	floating-constant		1	relational-expression	1
250	for		1	relational-expression	1
250	goto		1	relational-expression	1
250	identifier		1	relational-expression	1
250	if		1	relational-expression	1
250	int		1	relational-expression	1
250	integer-constant		1	relational-expression	1
250	long		1	relational-expression	1
250	register		1	relational-expression	1
250	return		1	relational-expression	1
250	short		1	relational-expression	1
250	signed		1	relational-expression	1
250	sizeof		1	relational-expression	1
250	static		1	relational-expression	1
250	string-constant		1	relational-expression	1
250	switch		1	relational-expression	1
250	typedef		1	relational-expression	1
250	unsigned		1	relational-expression	1
250	void		1	relational-expression	1
250	volatile		1	relational-expression	1
250	while		1	relational-expression	1
250	{		1	relational-expression	1
250	|		1	relational-expression	1
250	|=		1	relational-expression	1
250	||		1	relational-expression	1
250	}		1	relational-expression	1
250	~		1	relational-expression	1
67	!		0	62
67	&		0	63
67	(		0	141
67	*		0	65
67	+		0	66
67	++		0	67
67	-		0	68
67	--		0	69
67	character-constant		0	77
67	enumeration-constant		0	85
67	floating-constant		0	90
67	identifier		0	129
67	integer-constant		0	96
67	sizeof		0	109
67	string-constant		0	112
67	~		0	118
195	!		1	assignment-operator	0
195	&		1	assignment-operator	0
195	(		1	assignment-operator	0
195	*		1	assignment-operator	0
195	+		1	assignment-operator	0
195	++		1	assignment-operator	0
195	-		1	assignment-operator	0
195	--		1	assignment-operator	0
195	character-constant		1	assignment-operator	0
195	enumeration-constant		1	assignment-operator	0
195	floating-constant		1	assignment-operator	0
195	identifier		1	assignment-operator	0
195	integer-constant		1	assignment-operator	0
195	sizeof		1	assignment-operator	0
195	string-constant		1	assignment-operator	0
195	~		1	assignment-operator	0
323	!		1	iteration-statement	6
323	%=		1	iteration-statement	6
323	&		1	iteration-statement	6
323	&=		1	iteration-statement	6
323	(		1	iteration-statement	6
323	)		1	iteration-statement	6
323	*		1	iteration-statement	6
323	*=		1	iteration-statement	6
323	+		1	iteration-statement	6
323	++		1	iteration-statement	6
323	+=		1	iteration-statement	6
323	,		1	iteration-statement	6
323	-		1	iteration-statement	6
323	--		1	iteration-statement	6
323	-=		1	iteration-statement	6
323	/=		1	iteration-statement	6
323	;		1	iteration-statement	6
323	<<=		1	iteration-statement	6
323	=		1	iteration-statement	6
323	>>=		1	iteration-statement	6
323	^=		1	iteration-statement	6
323	_KULV_END_		1	iteration-statement	6
323	auto		1	iteration-statement	6
323	break		1	iteration-statement	6
323	case		1	iteration-statement	6
323	char		1	iteration-statement	6
323	character-constant		1	iteration-statement	6
323	const		1	iteration-statement	6
323	continue		1	iteration-statement	6
323	default		1	iteration-statement	6
323	do		1	iteration-statement	6
323	double		1	iteration-statement	6
323	else		1	iteration-statement	6
323	enumeration-constant		1	iteration-statement	6
323	extern		1	iteration-statement	6
323	float		1	iteration-statement	6
323	floating-constant		1	iteration-statement	6
323	for		1	iteration-statement	6
323	goto		1	iteration-statement	6
323	identifier		1	iteration-statement	6
323	if		1	iteration-statement	6
323	int		1	iteration-statement	6
323	integer-constant		1	iteration-statement	6
323	long		1	iteration-statement	6
323	register		1	iteration-statement	6
323	return		1	iteration-statement	6
323	short		1	iteration-statement	6
323	signed		1	iteration-statement	6
323	sizeof		1	iteration-statement	6
323	static		1	iteration-statement	6
323	string-constant		1	iteration-statement	6
323	switch		1	iteration-statement	6
323	typedef		1	iteration-statement	6
323	unsigned		1	iteration-statement	6
323	void		1	iteration-statement	6
323	volatile		1	iteration-statement	6
323	while		1	iteration-statement	6
323	{		1	iteration-statement	6
323	|=		1	iteration-statement	6
323	}		1	iteration-statement	6
323	~		1	iteration-statement	6
44	)		0	120
44	auto		0	3
44	char		0	4
44	const		0	5
44	double		0	10
44	extern		0	11
44	float		0	13
44	identifier		0	123
44	int		0	16
44	long		0	17
44	register		0	19
44	short		0	20
44	signed		0	21
44	static		0	22
44	typedef		0	27
44	unsigned		0	28
44	void		0	29
44	volatile		0	30
172	!		1	postfix-expression	6
172	!=		1	postfix-expression	6
172	%		1	postfix-expression	6
172	%=		1	postfix-expression	6
172	&		1	postfix-expression	6
172	&&		1	postfix-expression	6
172	&=		1	postfix-expression	6
172	(		1	postfix-expression	6
172	)		1	postfix-expression	6
172	*		1	postfix-expression	6
172	*=		1	postfix-expression	6
172	+		1	postfix-expression	6
172	++		1	postfix-expression	6
172	+=		1	postfix-expression	6
172	,		1	postfix-expression	6
172	-		1	postfix-expression	6
172	--		1	postfix-expression	6
172	-=		1	postfix-expression	6
172	->		1	postfix-expression	6
172	/		1	postfix-expression	6
172	/=		1	postfix-expression	6
172	:		1	postfix-expression	6
172	;		1	postfix-expression	6
172	<		1	postfix-expression	6
172	<<		1	postfix-expression	6
172	<<=		1	postfix-expression	6
172	<=		1	postfix-expression	6
172	=		1	postfix-expression	6
172	==		1	postfix-expression	6
172	>		1	postfix-expression	6
172	>=		1	postfix-expression	6
172	>>		1	postfix-expression	6
172	>>=		1	postfix-expression	6
172	?		1	postfix-expression	6
172	[		1	postfix-expression	6
172	]		1	postfix-expression	6
172	^		1	postfix-expression	6
172	^=		1	postfix-expression	6
172	_KULV_END_		1	postfix-expression	6
172	auto		1	postfix-expression	6
172	break		1	postfix-expression	6
172	case		1	postfix-expression	6
172	char		1	postfix-expression	6
172	character-constant		1	postfix-expression	6
172	const		1	postfix-expression	6
172	continue		1	postfix-expression	6
172	default		1	postfix-expression	6
172	do		1	postfix-expression	6
172	double		1	postfix-expression	6
172	else		1	postfix-expression	6
172	enumeration-constant		1	postfix-expression	6
172	extern		1	postfix-expression	6
172	float		1	postfix-expression	6
172	floating-constant		1	postfix-expression	6
172	for		1	postfix-expression	6
172	goto		1	postfix-expression	6
172	identifier		1	postfix-expression	6
172	if		1	postfix-expression	6
172	int		1	postfix-expression	6
172	integer-constant		1	postfix-expression	6
172	long		1	postfix-expression	6
172	register		1	postfix-expression	6
172	return		1	postfix-expression	6
172	short		1	postfix-expression	6
172	signed		1	postfix-expression	6
172	sizeof		1	postfix-expression	6
172	static		1	postfix-expression	6
172	string-constant		1	postfix-expression	6
172	switch		1	postfix-expression	6
172	typedef		1	postfix-expression	6
172	unsigned		1	postfix-expression	6
172	void		1	postfix-expression	6
172	volatile		1	postfix-expression	6
172	while		1	postfix-expression	6
172	{		1	postfix-expression	6
172	|		1	postfix-expression	6
172	|=		1	postfix-expression	6
172	||		1	postfix-expression	6
172	}		1	postfix-expression	6
172	~		1	postfix-expression	6
300	!		0	62
300	&		0	63
300	(		0	64
300	)		0	315
300	*		0	65
300	+		0	66
300	++		0	67
300	-		0	68
300	--		0	69
300	character-constant		0	77
300	enumeration-constant		0	85
300	floating-constant		0	90
300	identifier		0	129
300	integer-constant		0	96
300	sizeof		0	109
300	string-constant		0	112
300	~		0	118
53	(		1	type-qualifier-list	1
53	)		1	type-qualifier-list	1
53	*		1	type-qualifier-list	1
53	,		1	type-qualifier-list	1
53	[		1	type-qualifier-list	1
53	const		1	type-qualifier-list	1
53	identifier		1	type-qualifier-list	1
53	volatile		1	type-qualifier-list	1
181	!		0	62
181	&		0	63
181	(		0	64
181	*		0	65
181	+		0	66
181	++		0	67
181	-		0	68
181	--		0	69
181	character-constant		0	77
181	enumeration-constant		0	85
181	floating-constant		0	90
181	identifier		0	129
181	integer-constant		0	96
181	sizeof		0	109
181	string-constant		0	112
181	~		0	118
309	(		1	direct-abstract-declarator	4
309	)		1	direct-abstract-declarator	4
309	,		1	direct-abstract-declarator	4
309	[		1	direct-abstract-declarator	4
30	(		1	type-qualifier	1
30	)		1	type-qualifier	1
30	*		1	type-qualifier	1
30	,		1	type-qualifier	1
30	;		1	type-qualifier	1
30	[		1	type-qualifier	1
30	auto		1	type-qualifier	1
30	char		1	type-qualifier	1
30	const		1	type-qualifier	1
30	double		1	type-qualifier	1
30	extern		1	type-qualifier	1
30	float		1	type-qualifier	1
30	identifier		1	type-qualifier	1
30	int		1	type-qualifier	1
30	long		1	type-qualifier	1
30	register		1	type-qualifier	1
30	short		1	type-qualifier	1
30	signed		1	type-qualifier	1
30	static		1	type-qualifier	1
30	typedef		1	type-qualifier	1
30	unsigned		1	type-qualifier	1
30	void		1	type-qualifier	1
30	volatile		1	type-qualifier	1
158	!		1	expression-statement	1
158	%=		1	expression-statement	1
158	&		1	expression-statement	1
158	&=		1	expression-statement	1
158	(		1	expression-statement	1
158	)		1	expression-statement	1
158	*		1	expression-statement	1
158	*=		1	expression-statement	1
158	+		1	expression-statement	1
158	++		1	expression-statement	1
158	+=		1	expression-statement	1
158	,		1	expression-statement	1
158	-		1	expression-statement	1
158	--		1	expression-statement	1
158	-=		1	expression-statement	1
158	/=		1	expression-statement	1
158	;		1	expression-statement	1
158	<<=		1	expression-statement	1
158	=		1	expression-statement	1
158	>>=		1	expression-statement	1
158	^=		1	expression-statement	1
158	_KULV_END_		1	expression-statement	1
158	auto		1	expression-statement	1
158	break		1	expression-statement	1
158	case		1	expression-statement	1
158	char		1	expression-statement	1
158	character-constant		1	expression-statement	1
158	const		1	expression-statement	1
158	continue		1	expression-statement	1
158	default		1	expression-statement	1
158	do		1	expression-statement	1
158	double		1	expression-statement	1
158	else		1	expression-statement	1
158	enumeration-constant		1	expression-statement	1
158	extern		1	expression-statement	1
158	float		1	expression-statement	1
158	floating-constant		1	expression-statement	1
158	for		1	expression-statement	1
158	goto		1	expression-statement	1
158	identifier		1	expression-statement	1
158	if		1	expression-statement	1
158	int		1	expression-statement	1
158	integer-constant		1	expression-statement	1
158	long		1	expression-statement	1
158	register		1	expression-statement	1
158	return		1	expression-statement	1
158	short		1	expression-statement	1
158	signed		1	expression-statement	1
158	sizeof		1	expression-statement	1
158	static		1	expression-statement	1
158	string-constant		1	expression-statement	1
158	switch		1	expression-statement	1
158	typedef		1	expression-statement	1
158	unsigned		1	expression-statement	1
158	void		1	expression-statement	1
158	volatile		1	expression-statement	1
158	while		1	expression-statement	1
158	{		1	expression-statement	1
158	|=		1	expression-statement	1
158	}		1	expression-statement	1
158	~		1	expression-statement	1
286	!		0	62
286	&		0	63
286	(		0	64
286	*		0	65
286	+		0	66
286	++		0	67
286	-		0	68
286	--		0	69
286	;		0	70
286	break		0	74
286	case		0	75
286	character-constant		0	77
286	continue		0	81
286	default		0	83
286	do		0	84
286	enumeration-constant		0	85
286	floating-constant		0	90
286	for		0	91
286	goto		0	92
286	identifier		0	93
286	if		0	94
286	integer-constant		0	96
286	return		0	106
286	sizeof		0	109
286	string-constant		0	112
286	switch		0	113
286	while		0	116
286	{		0	43
286	~		0	118
103	!		1	unary-expression	0
103	!=		1	unary-expression	0
103	%		1	unary-expression	0
103	%=		1	unary-expression	0
103	&		1	unary-expression	0
103	&&		1	unary-expression	0
103	&=		1	unary-expression	0
103	(		0	170
103	)		1	unary-expression	0
103	*		1	unary-expression	0
103	*=		1	unary-expression	0
103	+		1	unary-expression	0
103	++		0	171
103	+=		1	unary-expression	0
103	,		1	unary-expression	0
103	-		1	unary-expression	0
103	--		0	172
103	-=		1	unary-expression	0
103	->		0	173
103	/		1	unary-expression	0
103	/=		1	unary-expression	0
103	:		1	unary-expression	0
103	;		1	unary-expression	0
103	<		1	unary-expression	0
103	<<		1	unary-expression	0
103	<<=		1	unary-expression	0
103	<=		1	unary-expression	0
103	=		1	unary-expression	0
103	==		1	unary-expression	0
103	>		1	unary-expression	0
103	>=		1	unary-expression	0
103	>>		1	unary-expression	0
103	>>=		1	unary-expression	0
103	?		1	unary-expression	0
103	[		0	174
103	]		1	unary-expression	0
103	^		1	unary-expression	0
103	^=		1	unary-expression	0
103	_KULV_END_		1	unary-expression	0
103	auto		1	unary-expression	0
103	break		1	unary-expression	0
103	case		1	unary-expression	0
103	char		1	unary-expression	0
103	character-constant		1	unary-expression	0
103	const		1	unary-expression	0
103	continue		1	unary-expression	0
103	default		1	unary-expression	0
103	do		1	unary-expression	0
103	double		1	unary-expression	0
103	else		1	unary-expression	0
103	enumeration-constant		1	unary-expression	0
103	extern		1	unary-expression	0
103	float		1	unary-expression	0
103	floating-constant		1	unary-expression	0
103	for		1	unary-expression	0
103	goto		1	unary-expression	0
103	identifier		1	unary-expression	0
103	if		1	unary-expression	0
103	int		1	unary-expression	0
103	integer-constant		1	unary-expression	0
103	long		1	unary-expression	0
103	register		1	unary-expression	0
103	return		1	unary-expression	0
103	short		1	unary-expression	0
103	signed		1	unary-expression	0
103	sizeof		1	unary-expression	0
103	static		1	unary-expression	0
103	string-constant		1	unary-expression	0
103	switch		1	unary-expression	0
103	typedef		1	unary-expression	0
103	unsigned		1	unary-expression	0
103	void		1	unary-expression	0
103	volatile		1	unary-expression	0
103	while		1	unary-expression	0
103	{		1	unary-expression	0
103	|		1	unary-expression	0
103	|=		1	unary-expression	0
103	||		1	unary-expression	0
103	}		1	unary-expression	0
103	~		1	unary-expression	0
231	!		1	exclusive-OR-expression	1
231	!=		1	exclusive-OR-expression	1
231	%		1	exclusive-OR-expression	1
231	%=		1	exclusive-OR-expression	1
231	&		0	144
231	&&		1	exclusive-OR-expression	1
231	&=		1	exclusive-OR-expression	1
231	(		1	exclusive-OR-expression	1
231	)		1	exclusive-OR-expression	1
231	*		1	exclusive-OR-expression	1
231	*=		1	exclusive-OR-expression	1
231	+		1	exclusive-OR-expression	1
231	++		1	exclusive-OR-expression	1
231	+=		1	exclusive-OR-expression	1
231	,		1	exclusive-OR-expression	1
231	-		1	exclusive-OR-expression	1
231	--		1	exclusive-OR-expression	1
231	-=		1	exclusive-OR-expression	1
231	->		1	exclusive-OR-expression	1
231	/		1	exclusive-OR-expression	1
231	/=		1	exclusive-OR-expression	1
231	:		1	exclusive-OR-expression	1
231	;		1	exclusive-OR-expression	1
231	<		1	exclusive-OR-expression	1
231	<<		1	exclusive-OR-expression	1
231	<<=		1	exclusive-OR-expression	1
231	<=		1	exclusive-OR-expression	1
231	=		1	exclusive-OR-expression	1
231	==		1	exclusive-OR-expression	1
231	>		1	exclusive-OR-expression	1
231	>=		1	exclusive-OR-expression	1
231	>>		1	exclusive-OR-expression	1
231	>>=		1	exclusive-OR-expression	1
231	?		1	exclusive-OR-expression	1
231	[		1	exclusive-OR-expression	1
231	]		1	exclusive-OR-expression	1
231	^		1	exclusive-OR-expression	1
231	^=		1	exclusive-OR-expression	1
231	_KULV_END_		1	exclusive-OR-expression	1
231	auto		1	exclusive-OR-expression	1
231	break		1	exclusive-OR-expression	1
231	case		1	exclusive-OR-expression	1
231	char		1	exclusive-OR-expression	1
231	character-constant		1	exclusive-OR-expression	1
231	const		1	exclusive-OR-expression	1
231	continue		1	exclusive-OR-expression	1
231	default		1	exclusive-OR-expression	1
231	do		1	exclusive-OR-expression	1
231	double		1	exclusive-OR-expression	1
231	else		1	exclusive-OR-expression	1
231	enumeration-constant		1	exclusive-OR-expression	1
231	extern		1	exclusive-OR-expression	1
231	float		1	exclusive-OR-expression	1
231	floating-constant		1	exclusive-OR-expression	1
231	for		1	exclusive-OR-expression	1
231	goto		1	exclusive-OR-expression	1
231	identifier		1	exclusive-OR-expression	1
231	if		1	exclusive-OR-expression	1
231	int		1	exclusive-OR-expression	1
231	integer-constant		1	exclusive-OR-expression	1
231	long		1	exclusive-OR-expression	1
231	register		1	exclusive-OR-expression	1
231	return		1	exclusive-OR-expression	1
231	short		1	exclusive-OR-expression	1
231	signed		1	exclusive-OR-expression	1
231	sizeof		1	exclusive-OR-expression	1
231	static		1	exclusive-OR-expression	1
231	string-constant		1	exclusive-OR-expression	1
231	switch		1	exclusive-OR-expression	1
231	typedef		1	exclusive-OR-expression	1
231	unsigned		1	exclusive-OR-expression	1
231	void		1	exclusive-OR-expression	1
231	volatile		1	exclusive-OR-expression	1
231	while		1	exclusive-OR-expression	1
231	{		1	exclusive-OR-expression	1
231	|		1	exclusive-OR-expression	1
231	|=		1	exclusive-OR-expression	1
231	||		1	exclusive-OR-expression	1
231	}		1	exclusive-OR-expression	1
231	~		1	exclusive-OR-expression	1
112	!		1	constant	4
112	!=		1	constant	4
112	%		1	constant	4
112	%=		1	constant	4
112	&		1	constant	4
112	&&		1	constant	4
112	&=		1	constant	4
112	(		1	constant	4
112	)		1	constant	4
112	*		1	constant	4
112	*=		1	constant	4
112	+		1	constant	4
112	++		1	constant	4
112	+=		1	constant	4
112	,		1	constant	4
112	-		1	constant	4
112	--		1	constant	4
112	-=		1	constant	4
112	->		1	constant	4
112	/		1	constant	4
112	/=		1	constant	4
112	:		1	constant	4
112	;		1	constant	4
112	<		1	constant	4
112	<<		1	constant	4
112	<<=		1	constant	4
112	<=		1	constant	4
112	=		1	constant	4
112	==		1	constant	4
112	>		1	constant	4
112	>=		1	constant	4
112	>>		1	constant	4
112	>>=		1	constant	4
112	?		1	constant	4
112	[		1	constant	4
112	]		1	constant	4
112	^		1	constant	4
112	^=		1	constant	4
112	_KULV_END_		1	constant	4
112	auto		1	constant	4
112	break		1	constant	4
112	case		1	constant	4
112	char		1	constant	4
112	character-constant		1	constant	4
112	const		1	constant	4
112	continue		1	constant	4
112	default		1	constant	4
112	do		1	constant	4
112	double		1	constant	4
112	else		1	constant	4
112	enumeration-constant		1	constant	4
112	extern		1	constant	4
112	float		1	constant	4
112	floating-constant		1	constant	4
112	for		1	constant	4
112	goto		1	constant	4
112	identifier		1	constant	4
112	if		1	constant	4
112	int		1	constant	4
112	integer-constant		1	constant	4
112	long		1	constant	4
112	register		1	constant	4
112	return		1	constant	4
112	short		1	constant	4
112	signed		1	constant	4
112	sizeof		1	constant	4
112	static		1	constant	4
112	string-constant		1	constant	4
112	switch		1	constant	4
112	typedef		1	constant	4
112	unsigned		1	constant	4
112	void		1	constant	4
112	volatile		1	constant	4
112	while		1	constant	4
112	{		1	constant	4
112	|		1	constant	4
112	|=		1	constant	4
112	||		1	constant	4
112	}		1	constant	4
112	~		1	constant	4
240	,		0	157
240	:		0	281
89	!		1	statement	1
89	%=		1	statement	1
89	&		1	statement	1
89	&=		1	statement	1
89	(		1	statement	1
89	)		1	statement	1
89	*		1	statement	1
89	*=		1	statement	1
89	+		1	statement	1
89	++		1	statement	1
89	+=		1	statement	1
89	,		1	statement	1
89	-		1	statement	1
89	--		1	statement	1
89	-=		1	statement	1
89	/=		1	statement	1
89	;		1	statement	1
89	<<=		1	statement	1
89	=		1	statement	1
89	>>=		1	statement	1
89	^=		1	statement	1
89	_KULV_END_		1	statement	1
89	auto		1	statement	1
89	break		1	statement	1
89	case		1	statement	1
89	char		1	statement	1
89	character-constant		1	statement	1
89	const		1	statement	1
89	continue		1	statement	1
89	default		1	statement	1
89	do		1	statement	1
89	double		1	statement	1
89	else		1	statement	1
89	enumeration-constant		1	statement	1
89	extern		1	statement	1
89	float		1	statement	1
89	floating-constant		1	statement	1
89	for		1	statement	1
89	goto		1	statement	1
89	identifier		1	statement	1
89	if		1	statement	1
89	int		1	statement	1
89	integer-constant		1	statement	1
89	long		1	statement	1
89	register		1	statement	1
89	return		1	statement	1
89	short		1	statement	1
89	signed		1	statement	1
89	sizeof		1	statement	1
89	static		1	statement	1
89	string-constant		1	statement	1
89	switch		1	statement	1
89	typedef		1	statement	1
89	unsigned		1	statement	1
89	void		1	statement	1
89	volatile		1	statement	1
89	while		1	statement	1
89	{		1	statement	1
89	|=		1	statement	1
89	}		1	statement	1
89	~		1	statement	1
217	(		0	217
217	)		0	261
217	*		0	2
217	[		0	203
217	auto		0	3
217	char		0	4
217	const		0	5
217	double		0	10
217	extern		0	11
217	float		0	13
217	int		0	16
217	long		0	17
217	register		0	19
217	short		0	20
217	signed		0	21
217	static		0	22
217	typedef		0	27
217	unsigned		0	28
217	void		0	29
217	volatile		0	30
34	(		1	type-qualifier-list	0
34	)		1	type-qualifier-list	0
34	*		1	type-qualifier-list	0
34	,		1	type-qualifier-list	0
34	[		1	type-qualifier-list	0
34	const		1	type-qualifier-list	0
34	identifier		1	type-qualifier-list	0
34	volatile		1	type-qualifier-list	0
162	!		0	62
162	&		0	63
162	(		0	64
162	*		0	65
162	+		0	66
162	++		0	67
162	-		0	68
162	--		0	69
162	character-constant		0	77
162	enumeration-constant		0	85
162	floating-constant		0	90
162	identifier		0	129
162	integer-constant		0	96
162	sizeof		0	109
162	string-constant		0	112
162	~		0	118
290	(		1	direct-abstract-declarator	2
290	)		1	direct-abstract-declarator	2
290	,		1	direct-abstract-declarator	2
290	[		1	direct-abstract-declarator	2
11	(		1	storage-class-specifier	3
11	)		1	storage-class-specifier	3
11	*		1	storage-class-specifier	3
11	,		1	storage-class-specifier	3
11	;		1	storage-class-specifier	3
11	[		1	storage-class-specifier	3
11	auto		1	storage-class-specifier	3
11	char		1	storage-class-specifier	3
11	const		1	storage-class-specifier	3
11	double		1	storage-class-specifier	3
11	extern		1	storage-class-specifier	3
11	float		1	storage-class-specifier	3
11	identifier		1	storage-class-specifier	3
11	int		1	storage-class-specifier	3
11	long		1	storage-class-specifier	3
11	register		1	storage-class-specifier	3
11	short		1	storage-class-specifier	3
11	signed		1	storage-class-specifier	3
11	static		1	storage-class-specifier	3
11	typedef		1	storage-class-specifier	3
11	unsigned		1	storage-class-specifier	3
11	void		1	storage-class-specifier	3
11	volatile		1	storage-class-specifier	3
139	(		1	specifier-qualifier-list	2
139	)		1	specifier-qualifier-list	2
139	*		1	specifier-qualifier-list	2
139	[		1	specifier-qualifier-list	2
139	char		0	4
139	const		0	5
139	double		0	10
139	float		0	13
139	int		0	16
139	long		0	17
139	short		0	20
139	signed		0	21
139	unsigned		0	28
139	void		0	29
139	volatile		0	30
267	!		0	62
267	&		0	63
267	(		0	64
267	*		0	65
267	+		0	66
267	++		0	67
267	-		0	68
267	--		0	69
267	]		0	293
267	character-constant		0	77
267	enumeration-constant		0	85
267	floating-constant		0	90
267	identifier		0	129
267	integer-constant		0	96
267	sizeof		0	109
267	string-constant		0	112
267	~		0	118
20	(		1	type-specifier	2
20	)		1	type-specifier	2
20	*		1	type-specifier	2
20	,		1	type-specifier	2
20	;		1	type-specifier	2
20	[		1	type-specifier	2
20	auto		1	type-specifier	2
20	char		1	type-specifier	2
20	const		1	type-specifier	2
20	double		1	type-specifier	2
20	extern		1	type-specifier	2
20	float		1	type-specifier	2
20	identifier		1	type-specifier	2
20	int		1	type-specifier	2
20	long		1	type-specifier	2
20	register		1	type-specifier	2
20	short		1	type-specifier	2
20	signed		1	type-specifier	2
20	static		1	type-specifier	2
20	typedef		1	type-specifier	2
20	unsigned		1	type-specifier	2
20	void		1	type-specifier	2
20	volatile		1	type-specifier	2
148	:		0	225
276	!		0	62
276	&		0	63
276	(		0	64
276	*		0	65
276	+		0	66
276	++		0	67
276	-		0	68
276	--		0	69
276	character-constant		0	77
276	enumeration-constant		0	85
276	floating-constant		0	90
276	identifier		0	129
276	integer-constant		0	96
276	sizeof		0	109
276	string-constant		0	112
276	~		0	118
125	)		1	parameter-type-list	0
125	,		0	211
253	!		1	relational-expression	4
253	!=		1	relational-expression	4
253	%		1	relational-expression	4
253	%=		1	relational-expression	4
253	&		1	relational-expression	4
253	&&		1	relational-expression	4
253	&=		1	relational-expression	4
253	(		1	relational-expression	4
253	)		1	relational-expression	4
253	*		1	relational-expression	4
253	*=		1	relational-expression	4
253	+		1	relational-expression	4
253	++		1	relational-expression	4
253	+=		1	relational-expression	4
253	,		1	relational-expression	4
253	-		1	relational-expression	4
253	--		1	relational-expression	4
253	-=		1	relational-expression	4
253	->		1	relational-expression	4
253	/		1	relational-expression	4
253	/=		1	relational-expression	4
253	:		1	relational-expression	4
253	;		1	relational-expression	4
253	<		1	relational-expression	4
253	<<		0	181
253	<<=		1	relational-expression	4
253	<=		1	relational-expression	4
253	=		1	relational-expression	4
253	==		1	relational-expression	4
253	>		1	relational-expression	4
253	>=		1	relational-expression	4
253	>>		0	182
253	>>=		1	relational-expression	4
253	?		1	relational-expression	4
253	[		1	relational-expression	4
253	]		1	relational-expression	4
253	^		1	relational-expression	4
253	^=		1	relational-expression	4
253	_KULV_END_		1	relational-expression	4
253	auto		1	relational-expression	4
253	break		1	relational-expression	4
253	case		1	relational-expression	4
253	char		1	relational-expression	4
253	character-constant		1	relational-expression	4
253	const		1	relational-expression	4
253	continue		1	relational-expression	4
253	default		1	relational-expression	4
253	do		1	relational-expression	4
253	double		1	relational-expression	4
253	else		1	relational-expression	4
253	enumeration-constant		1	relational-expression	4
253	extern		1	relational-expression	4
253	float		1	relational-expression	4
253	floating-constant		1	relational-expression	4
253	for		1	relational-expression	4
253	goto		1	relational-expression	4
253	identifier		1	relational-expression	4
253	if		1	relational-expression	4
253	int		1	relational-expression	4
253	integer-constant		1	relational-expression	4
253	long		1	relational-expression	4
253	register		1	relational-expression	4
253	return		1	relational-expression	4
253	short		1	relational-expression	4
253	signed		1	relational-expression	4
253	sizeof		1	relational-expression	4
253	static		1	relational-expression	4
253	string-constant		1	relational-expression	4
253	switch		1	relational-expression	4
253	typedef		1	relational-expression	4
253	unsigned		1	relational-expression	4
253	void		1	relational-expression	4
253	volatile		1	relational-expression	4
253	while		1	relational-expression	4
253	{		1	relational-expression	4
253	|		1	relational-expression	4
253	|=		1	relational-expression	4
253	||		1	relational-expression	4
253	}		1	relational-expression	4
253	~		1	relational-expression	4
70	!		1	expression-statement	0
70	%=		1	expression-statement	0
70	&		1	expression-statement	0
70	&=		1	expression-statement	0
70	(		1	expression-statement	0
70	)		1	expression-statement	0
70	*		1	expression-statement	0
70	*=		1	expression-statement	0
70	+		1	expression-statement	0
70	++		1	expression-statement	0
70	+=		1	expression-statement	0
70	,		1	expression-statement	0
70	-		1	expression-statement	0
70	--		1	expression-statement	0
70	-=		1	expression-statement	0
70	/=		1	expression-statement	0
70	;		1	expression-statement	0
70	<<=		1	expression-statement	0
70	=		1	expression-statement	0
70	>>=		1	expression-statement	0
70	^=		1	expression-statement	0
70	_KULV_END_		1	expression-statement	0
70	auto		1	expression-statement	0
70	break		1	expression-statement	0
70	case		1	expression-statement	0
70	char		1	expression-statement	0
70	character-constant		1	expression-statement	0
70	const		1	expression-statement	0
70	continue		1	expression-statement	0
70	default		1	expression-statement	0
70	do		1	expression-statement	0
70	double		1	expression-statement	0
70	else		1	expression-statement	0
70	enumeration-constant		1	expression-statement	0
70	extern		1	expression-statement	0
70	float		1	expression-statement	0
70	floating-constant		1	expression-statement	0
70	for		1	expression-statement	0
70	goto		1	expression-statement	0
70	identifier		1	expression-statement	0
70	if		1	expression-statement	0
70	int		1	expression-statement	0
70	integer-constant		1	expression-statement	0
70	long		1	expression-statement	0
70	register		1	expression-statement	0
70	return		1	expression-statement	0
70	short		1	expression-statement	0
70	signed		1	expression-statement	0
70	sizeof		1	expression-statement	0
70	static		1	expression-statement	0
70	string-constant		1	expression-statement	0
70	switch		1	expression-statement	0
70	typedef		1	expression-statement	0
70	unsigned		1	expression-statement	0
70	void		1	expression-statement	0
70	volatile		1	expression-statement	0
70	while		1	expression-statement	0
70	{		1	expression-statement	0
70	|=		1	expression-statement	0
70	}		1	expression-statement	0
70	~		1	expression-statement	0
198	!		0	62
198	&		0	63
198	(		0	64
198	*		0	65
198	+		0	66
198	++		0	67
198	-		0	68
198	--		0	69
198	character-constant		0	77
198	enumeration-constant		0	85
198	floating-constant		0	90
198	identifier		0	129
198	integer-constant		0	96
198	sizeof		0	109
198	string-constant		0	112
198	~		0	118
326	!		1	iteration-statement	3
326	%=		1	iteration-statement	3
326	&		1	iteration-statement	3
326	&=		1	iteration-statement	3
326	(		1	iteration-statement	3
326	)		1	iteration-statement	3
326	*		1	iteration-statement	3
326	*=		1	iteration-statement	3
326	+		1	iteration-statement	3
326	++		1	iteration-statement	3
326	+=		1	iteration-statement	3
326	,		1	iteration-statement	3
326	-		1	iteration-statement	3
326	--		1	iteration-statement	3
326	-=		1	iteration-statement	3
326	/=		1	iteration-statement	3
326	;		1	iteration-statement	3
326	<<=		1	iteration-statement	3
326	=		1	iteration-statement	3
326	>>=		1	iteration-statement	3
326	^=		1	iteration-statement	3
326	_KULV_END_		1	iteration-statement	3
326	auto		1	iteration-statement	3
326	break		1	iteration-statement	3
326	case		1	iteration-statement	3
326	char		1	iteration-statement	3
326	character-constant		1	iteration-statement	3
326	const		1	iteration-statement	3
326	continue		1	iteration-statement	3
326	default		1	iteration-statement	3
326	do		1	iteration-statement	3
326	double		1	iteration-statement	3
326	else		1	iteration-statement	3
326	enumeration-constant		1	iteration-statement	3
326	extern		1	iteration-statement	3
326	float		1	iteration-statement	3
326	floating-constant		1	iteration-statement	3
326	for		1	iteration-statement	3
326	goto		1	iteration-statement	3
326	identifier		1	iteration-statement	3
326	if		1	iteration-statement	3
326	int		1	iteration-statement	3
326	integer-constant		1	iteration-statement	3
326	long		1	iteration-statement	3
326	register		1	iteration-statement	3
326	return		1	iteration-statement	3
326	short		1	iteration-statement	3
326	signed		1	iteration-statement	3
326	sizeof		1	iteration-statement	3
326	static		1	iteration-statement	3
326	string-constant		1	iteration-statement	3
326	switch		1	iteration-statement	3
326	typedef		1	iteration-statement	3
326	unsigned		1	iteration-statement	3
326	void		1	iteration-statement	3
326	volatile		1	iteration-statement	3
326	while		1	iteration-statement	3
326	{		1	iteration-statement	3
326	|=		1	iteration-statement	3
326	}		1	iteration-statement	3
326	~		1	iteration-statement	3
47	(		1	declaration-specifiers	1
47	)		1	declaration-specifiers	1
47	*		1	declaration-specifiers	1
47	,		1	declaration-specifiers	1
47	;		1	declaration-specifiers	1
47	[		1	declaration-specifiers	1
47	identifier		1	declaration-specifiers	1
175	!		0	62
175	&		0	63
175	(		0	64
175	*		0	65
175	+		0	66
175	++		0	67
175	-		0	68
175	--		0	69
175	character-constant		0	77
175	enumeration-constant		0	85
175	floating-constant		0	90
175	identifier		0	129
175	integer-constant		0	96
175	sizeof		0	109
175	string-constant		0	112
175	~		0	118
303	!		1	selection-statement	0
303	%=		1	selection-statement	0
303	&		1	selection-statement	0
303	&=		1	selection-statement	0
303	(		1	selection-statement	0
303	)		1	selection-statement	0
303	*		1	selection-statement	0
303	*=		1	selection-statement	0
303	+		1	selection-statement	0
303	++		1	selection-statement	0
303	+=		1	selection-statement	0
303	,		1	selection-statement	0
303	-		1	selection-statement	0
303	--		1	selection-statement	0
303	-=		1	selection-statement	0
303	/=		1	selection-statement	0
303	;		1	selection-statement	0
303	<<=		1	selection-statement	0
303	=		1	selection-statement	0
303	>>=		1	selection-statement	0
303	^=		1	selection-statement	0
303	_KULV_END_		1	selection-statement	0
303	auto		1	selection-statement	0
303	break		1	selection-statement	0
303	case		1	selection-statement	0
303	char		1	selection-statement	0
303	character-constant		1	selection-statement	0
303	const		1	selection-statement	0
303	continue		1	selection-statement	0
303	default		1	selection-statement	0
303	do		1	selection-statement	0
303	double		1	selection-statement	0
303	else		0	318
303	enumeration-constant		1	selection-statement	0
303	extern		1	selection-statement	0
303	float		1	selection-statement	0
303	floating-constant		1	selection-statement	0
303	for		1	selection-statement	0
303	goto		1	selection-statement	0
303	identifier		1	selection-statement	0
303	if		1	selection-statement	0
303	int		1	selection-statement	0
303	integer-constant		1	selection-statement	0
303	long		1	selection-statement	0
303	register		1	selection-statement	0
303	return		1	selection-statement	0
303	short		1	selection-statement	0
303	signed		1	selection-statement	0
303	sizeof		1	selection-statement	0
303	static		1	selection-statement	0
303	string-constant		1	selection-statement	0
303	switch		1	selection-statement	0
303	typedef		1	selection-statement	0
303	unsigned		1	selection-statement	0
303	void		1	selection-statement	0
303	volatile		1	selection-statement	0
303	while		1	selection-statement	0
303	{		1	selection-statement	0
303	|=		1	selection-statement	0
303	}		1	selection-statement	0
303	~		1	selection-statement	0
56	!		0	62
56	&		0	63
56	(		0	64
56	*		0	65
56	+		0	66
56	++		0	67
56	-		0	68
56	--		0	69
56	character-constant		0	77
56	enumeration-constant		0	85
56	floating-constant		0	90
56	identifier		0	129
56	integer-constant		0	96
56	sizeof		0	109
56	string-constant		0	112
56	{		0	134
56	~		0	118
184	!		1	unary-expression	4
184	!=		1	unary-expression	4
184	%		1	unary-expression	4
184	%=		1	unary-expression	4
184	&		1	unary-expression	4
184	&&		1	unary-expression	4
184	&=		1	unary-expression	4
184	(		1	unary-expression	4
184	)		1	unary-expression	4
184	*		1	unary-expression	4
184	*=		1	unary-expression	4
184	+		1	unary-expression	4
184	++		1	unary-expression	4
184	+=		1	unary-expression	4
184	,		1	unary-expression	4
184	-		1	unary-expression	4
184	--		1	unary-expression	4
184	-=		1	unary-expression	4
184	->		1	unary-expression	4
184	/		1	unary-expression	4
184	/=		1	unary-expression	4
184	:		1	unary-expression	4
184	;		1	unary-expression	4
184	<		1	unary-expression	4
184	<<		1	unary-expression	4
184	<<=		1	unary-expression	4
184	<=		1	unary-expression	4
184	=		1	unary-expression	4
184	==		1	unary-expression	4
184	>		1	unary-expression	4
184	>=		1	unary-expression	4
184	>>		1	unary-expression	4
184	>>=		1	unary-expression	4
184	?		1	unary-expression	4
184	[		1	unary-expression	4
184	]		1	unary-expression	4
184	^		1	unary-expression	4
184	^=		1	unary-expression	4
184	_KULV_END_		1	unary-expression	4
184	auto		1	unary-expression	4
184	break		1	unary-expression	4
184	case		1	unary-expression	4
184	char		1	unary-expression	4
184	character-constant		1	unary-expression	4
184	const		1	unary-expression	4
184	continue		1	unary-expression	4
184	default		1	unary-expression	4
184	do		1	unary-expression	4
184	double		1	unary-expression	4
184	else		1	unary-expression	4
184	enumeration-constant		1	unary-expression	4
184	extern		1	unary-expression	4
184	float		1	unary-expression	4
184	floating-constant		1	unary-expression	4
184	for		1	unary-expression	4
184	goto		1	unary-expression	4
184	identifier		1	unary-expression	4
184	if		1	unary-expression	4
184	int		1	unary-expression	4
184	integer-constant		1	unary-expression	4
184	long		1	unary-expression	4
184	register		1	unary-expression	4
184	return		1	unary-expression	4
184	short		1	unary-expression	4
184	signed		1	unary-expression	4
184	sizeof		1	unary-expression	4
184	static		1	unary-expression	4
184	string-constant		1	unary-expression	4
184	switch		1	unary-expression	4
184	typedef		1	unary-expression	4
184	unsigned		1	unary-expression	4
184	void		1	unary-expression	4
184	volatile		1	unary-expression	4
184	while		1	unary-expression	4
184	{		1	unary-expression	4
184	|		1	unary-expression	4
184	|=		1	unary-expression	4
184	||		1	unary-expression	4
184	}		1	unary-expression	4
184	~		1	unary-expression	4
312	)		0	322
312	,		0	157
1	(		0	1
1	*		0	2
1	identifier		0	15
129	!		1	primary-expression	0
129	!=		1	primary-expression	0
129	%		1	primary-expression	0
129	%=		1	primary-expression	0
129	&		1	primary-expression	0
129	&&		1	primary-expression	0
129	&=		1	primary-expression	0
129	(		1	primary-expression	0
129	)		1	primary-expression	0
129	*		1	primary-expression	0
129	*=		1	primary-expression	0
129	+		1	primary-expression	0
129	++		1	primary-expression	0
129	+=		1	primary-expression	0
129	,		1	primary-expression	0
129	-		1	primary-expression	0
129	--		1	primary-expression	0
129	-=		1	primary-expression	0
129	->		1	primary-expression	0
129	/		1	primary-expression	0
129	/=		1	primary-expression	0
129	:		1	primary-expression	0
129	;		1	primary-expression	0
129	<		1	primary-expression	0
129	<<		1	primary-expression	0
129	<<=		1	primary-expression	0
129	<=		1	primary-expression	0
129	=		1	primary-expression	0
129	==		1	primary-expression	0
129	>		1	primary-expression	0
129	>=		1	primary-expression	0
129	>>		1	primary-expression	0
129	>>=		1	primary-expression	0
129	?		1	primary-expression	0
129	[		1	primary-expression	0
129	]		1	primary-expression	0
129	^		1	primary-expression	0
129	^=		1	primary-expression	0
129	_KULV_END_		1	primary-expression	0
129	auto		1	primary-expression	0
129	break		1	primary-expression	0
129	case		1	primary-expression	0
129	char		1	primary-expression	0
129	character-constant		1	primary-expression	0
129	const		1	primary-expression	0
129	continue		1	primary-expression	0
129	default		1	primary-expression	0
129	do		1	primary-expression	0
129	double		1	primary-expression	0
129	else		1	primary-expression	0
129	enumeration-constant		1	primary-expression	0
129	extern		1	primary-expression	0
129	float		1	primary-expression	0
129	floating-constant		1	primary-expression	0
129	for		1	primary-expression	0
129	goto		1	primary-expression	0
129	identifier		1	primary-expression	0
129	if		1	primary-expression	0
129	int		1	primary-expression	0
129	integer-constant		1	primary-expression	0
129	long		1	primary-expression	0
129	register		1	primary-expression	0
129	return		1	primary-expression	0
129	short		1	primary-expression	0
129	signed		1	primary-expression	0
129	sizeof		1	primary-expression	0
129	static		1	primary-expression	0
129	string-constant		1	primary-expression	0
129	switch		1	primary-expression	0
129	typedef		1	primary-expression	0
129	unsigned		1	primary-expression	0
129	void		1	primary-expression	0
129	volatile		1	primary-expression	0
129	while		1	primary-expression	0
129	{		1	primary-expression	0
129	|		1	primary-expression	0
129	|=		1	primary-expression	0
129	||		1	primary-expression	0
129	}		1	primary-expression	0
129	~		1	primary-expression	0
257	)		0	285
106	!		0	62
106	&		0	63
106	(		0	64
106	*		0	65
106	+		0	66
106	++		0	67
106	-		0	68
106	--		0	69
106	;		0	180
106	character-constant		0	77
106	enumeration-constant		0	85
106	floating-constant		0	90
106	identifier		0	129
106	integer-constant		0	96
106	sizeof		0	109
106	string-constant		0	112
106	~		0	118
234	!		0	62
234	&		0	63
234	(		0	64
234	*		0	65
234	+		0	66
234	++		0	67
234	-		0	68
234	--		0	69
234	;		0	279
234	character-constant		0	77
234	enumeration-constant		0	85
234	floating-constant		0	90
234	identifier		0	129
234	integer-constant		0	96
234	sizeof		0	109
234	string-constant		0	112
234	~		0	118
115	!		0	62
115	&		0	63
115	(		0	64
115	*		0	65
115	+		0	66
115	++		0	67
115	-		0	68
115	--		0	69
115	character-constant		0	77
115	enumeration-constant		0	85
115	floating-constant		0	90
115	identifier		0	129
115	integer-constant		0	96
115	sizeof		0	109
115	string-constant		0	112
115	~		0	118
243	!		1	multiplicative-expression	1
243	!=		1	multiplicative-expression	1
243	%		1	multiplicative-expression	1
243	%=		1	multiplicative-expression	1
243	&		1	multiplicative-expression	1
243	&&		1	multiplicative-expression	1
243	&=		1	multiplicative-expression	1
243	(		1	multiplicative-expression	1
243	)		1	multiplicative-expression	1
243	*		1	multiplicative-expression	1
243	*=		1	multiplicative-expression	1
243	+		1	multiplicative-expression	1
243	++		1	multiplicative-expression	1
243	+=		1	multiplicative-expression	1
243	,		1	multiplicative-expression	1
243	-		1	multiplicative-expression	1
243	--		1	multiplicative-expression	1
243	-=		1	multiplicative-expression	1
243	->		1	multiplicative-expression	1
243	/		1	multiplicative-expression	1
243	/=		1	multiplicative-expression	1
243	:		1	multiplicative-expression	1
243	;		1	multiplicative-expression	1
243	<		1	multiplicative-expression	1
243	<<		1	multiplicative-expression	1
243	<<=		1	multiplicative-expression	1
243	<=		1	multiplicative-expression	1
243	=		1	multiplicative-expression	1
243	==		1	multiplicative-expression	1
243	>		1	multiplicative-expression	1
243	>=		1	multiplicative-expression	1
243	>>		1	multiplicative-expression	1
243	>>=		1	multiplicative-expression	1
243	?		1	multiplicative-expression	1
243	[		1	multiplicative-expression	1
243	]		1	multiplicative-expression	1
243	^		1	multiplicative-expression	1
243	^=		1	multiplicative-expression	1
243	_KULV_END_		1	multiplicative-expression	1
243	auto		1	multiplicative-expression	1
243	break		1	multiplicative-expression	1
243	case		1	multiplicative-expression	1
243	char		1	multiplicative-expression	1
243	character-constant		1	multiplicative-expression	1
243	const		1	multiplicative-expression	1
243	continue		1	multiplicative-expression	1
243	default		1	multiplicative-expression	1
243	do		1	multiplicative-expression	1
243	double		1	multiplicative-expression	1
243	else		1	multiplicative-expression	1
243	enumeration-constant		1	multiplicative-expression	1
243	extern		1	multiplicative-expression	1
243	float		1	multiplicative-expression	1
243	floating-constant		1	multiplicative-expression	1
243	for		1	multiplicative-expression	1
243	goto		1	multiplicative-expression	1
243	identifier		1	multiplicative-expression	1
243	if		1	multiplicative-expression	1
243	int		1	multiplicative-expression	1
243	integer-constant		1	multiplicative-expression	1
243	long		1	multiplicative-expression	1
243	register		1	multiplicative-expression	1
243	return		1	multiplicative-expression	1
243	short		1	multiplicative-expression	1
243	signed		1	multiplicative-expression	1
243	sizeof		1	multiplicative-expression	1
243	static		1	multiplicative-expression	1
243	string-constant		1	multiplicative-expression	1
243	switch		1	multiplicative-expression	1
243	typedef		1	multiplicative-expression	1
243	unsigned		1	multiplicative-expression	1
243	void		1	multiplicative-expression	1
243	volatile		1	multiplicative-expression	1
243	while		1	multiplicative-expression	1
243	{		1	multiplicative-expression	1
243	|		1	multiplicative-expression	1
243	|=		1	multiplicative-expression	1
243	||		1	multiplicative-expression	1
243	}		1	multiplicative-expression	1
243	~		1	multiplicative-expression	1
